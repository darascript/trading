{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/ChartAndControls.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChartAndControls = ({\n  chartContainerRef,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  handleTrade,\n  addNewCandle\n}) => {\n  _s();\n  const [projectionMode, setProjectionMode] = useState('long');\n  const [projections, setProjections] = useState([]);\n  const [chart, setChart] = useState(null);\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const newChart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#eee'\n        },\n        horzLines: {\n          color: '#eee'\n        }\n      },\n      priceScale: {\n        minMove: 0.0001\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#ccc'\n      }\n    });\n    const series = newChart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    setChart(newChart);\n    axios.post('http://127.0.0.1:5000/api/historical_data', {\n      startDate,\n      timeInterval\n    }).then(response => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000,\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    }).catch(error => console.error('Error fetching data:', error));\n    return () => newChart.remove();\n  }, [chartContainerRef, setCandlestickSeries, setCurrentIndex, startDate, timeInterval]);\n  useEffect(() => {\n    if (!chart) return;\n    const handleClick = param => {\n      if (!param || !param.time || !param.point) return;\n      const price = chart.priceScale().coordinateToPrice(param.point.y);\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n      const pipValue = 0.0001;\n      const longPips = 40 * pipValue;\n      const shortPips = 30 * pipValue;\n\n      // Find the latest candle time\n      const lastCandleTime = currentIndex > 0 ? currentIndex * timeInterval : param.time;\n      const projectionTimeRange = lastCandleTime + timeInterval * 5; // Extend projection 5 steps ahead\n\n      let topPrice, bottomPrice, topColor, bottomColor;\n      if (projectionMode === 'long') {\n        topPrice = price + longPips;\n        bottomPrice = price - shortPips;\n        topColor = 'green';\n        bottomColor = 'red';\n      } else {\n        topPrice = price + shortPips;\n        bottomPrice = price - longPips;\n        topColor = 'red';\n        bottomColor = 'green';\n      }\n\n      // Create new projection lines with unique IDs\n      const projectionId = Date.now();\n      const topLine = chart.addLineSeries({\n        color: topColor,\n        lineWidth: 2\n      });\n      topLine.setData([{\n        time: param.time,\n        value: topPrice\n      }, {\n        time: projectionTimeRange,\n        value: topPrice\n      }]);\n      const bottomLine = chart.addLineSeries({\n        color: bottomColor,\n        lineWidth: 2\n      });\n      bottomLine.setData([{\n        time: param.time,\n        value: bottomPrice\n      }, {\n        time: projectionTimeRange,\n        value: bottomPrice\n      }]);\n\n      // Store projection reference\n      setProjections(prev => [...prev, {\n        id: projectionId,\n        series: [topLine, bottomLine]\n      }]);\n    };\n    chart.subscribeClick(handleClick);\n    return () => chart.unsubscribeClick(handleClick);\n  }, [chart, setClickedPoint, projectionMode, currentIndex, timeInterval]);\n\n  // Handle projection deletion\n  const removeProjection = id => {\n    setProjections(prev => {\n      return prev.filter(proj => {\n        if (proj.id === id) {\n          proj.series.forEach(line => {\n            if (line) chart.removeSeries(line);\n          });\n          return false; // Remove from state\n        }\n        return true;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      style: {\n        width: '100%',\n        height: '400px',\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setProjectionMode('long'),\n        style: {\n          backgroundColor: projectionMode === 'long' ? 'green' : 'lightgray',\n          color: 'white',\n          padding: '10px'\n        },\n        children: \"Long Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setProjectionMode('short'),\n        style: {\n          backgroundColor: projectionMode === 'short' ? 'red' : 'lightgray',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"Short Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTrade('buy'),\n        style: {\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTrade('sell'),\n        style: {\n          backgroundColor: 'red',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewCandle,\n        style: {\n          backgroundColor: 'blue',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"Next Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Projections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), projections.map(proj => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Projection \", proj.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeProjection(proj.id),\n          style: {\n            marginLeft: '10px',\n            padding: '5px',\n            backgroundColor: 'red',\n            color: 'white'\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, proj.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChartAndControls, \"jz3a835eD8fhPKSzOyHWAIRRvD8=\");\n_c = ChartAndControls;\nexport default ChartAndControls;\nvar _c;\n$RefreshReg$(_c, \"ChartAndControls\");","map":{"version":3,"names":["useEffect","useState","axios","createChart","jsxDEV","_jsxDEV","Fragment","_Fragment","ChartAndControls","chartContainerRef","setCandlestickSeries","currentIndex","setCurrentIndex","startDate","timeInterval","setClickedPoint","handleTrade","addNewCandle","_s","projectionMode","setProjectionMode","projections","setProjections","chart","setChart","current","newChart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","minMove","timeScale","timeVisible","secondsVisible","borderColor","series","addCandlestickSeries","post","then","response","data","length","adjustedData","map","candle","time","Date","getTime","open","high","low","close","setData","catch","error","console","remove","handleClick","param","point","price","coordinateToPrice","y","toLocaleString","pipValue","longPips","shortPips","lastCandleTime","projectionTimeRange","topPrice","bottomPrice","topColor","bottomColor","projectionId","now","topLine","addLineSeries","lineWidth","value","bottomLine","prev","id","subscribeClick","unsubscribeClick","removeProjection","filter","proj","forEach","line","removeSeries","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onClick","padding","marginLeft","display","alignItems","marginBottom","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/ChartAndControls.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\n\nconst ChartAndControls = ({\n  chartContainerRef,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  handleTrade,\n  addNewCandle\n}) => {\n  const [projectionMode, setProjectionMode] = useState('long');\n  const [projections, setProjections] = useState([]);\n  const [chart, setChart] = useState(null);\n\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const newChart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: { backgroundColor: '#ffffff', textColor: '#333' },\n      grid: { vertLines: { color: '#eee' }, horzLines: { color: '#eee' } },\n      priceScale: { minMove: 0.0001 },\n      timeScale: { timeVisible: true, secondsVisible: false, borderColor: '#ccc' },\n    });\n\n    const series = newChart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    setChart(newChart);\n\n    axios.post('http://127.0.0.1:5000/api/historical_data', { startDate, timeInterval })\n      .then((response) => {\n        if (response.data.length > 0) {\n          const adjustedData = response.data.map(candle => ({\n            time: new Date(candle.time).getTime() / 1000,\n            open: candle.open,\n            high: candle.high,\n            low: candle.low,\n            close: candle.close,\n          }));\n          series.setData(adjustedData);\n          setCurrentIndex(adjustedData.length);\n        }\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n    return () => newChart.remove();\n  }, [chartContainerRef, setCandlestickSeries, setCurrentIndex, startDate, timeInterval]);\n\n  useEffect(() => {\n    if (!chart) return;\n\n    const handleClick = (param) => {\n      if (!param || !param.time || !param.point) return;\n\n      const price = chart.priceScale().coordinateToPrice(param.point.y);\n      setClickedPoint({ time: new Date(param.time * 1000).toLocaleString(), price });\n\n      const pipValue = 0.0001;\n      const longPips = 40 * pipValue;\n      const shortPips = 30 * pipValue;\n\n      // Find the latest candle time\n      const lastCandleTime = currentIndex > 0 ? currentIndex * timeInterval : param.time;\n      const projectionTimeRange = lastCandleTime + timeInterval * 5; // Extend projection 5 steps ahead\n\n      let topPrice, bottomPrice, topColor, bottomColor;\n\n      if (projectionMode === 'long') {\n        topPrice = price + longPips;\n        bottomPrice = price - shortPips;\n        topColor = 'green';\n        bottomColor = 'red';\n      } else {\n        topPrice = price + shortPips;\n        bottomPrice = price - longPips;\n        topColor = 'red';\n        bottomColor = 'green';\n      }\n\n      // Create new projection lines with unique IDs\n      const projectionId = Date.now();\n      const topLine = chart.addLineSeries({ color: topColor, lineWidth: 2 });\n      topLine.setData([\n        { time: param.time, value: topPrice },\n        { time: projectionTimeRange, value: topPrice },\n      ]);\n\n      const bottomLine = chart.addLineSeries({ color: bottomColor, lineWidth: 2 });\n      bottomLine.setData([\n        { time: param.time, value: bottomPrice },\n        { time: projectionTimeRange, value: bottomPrice },\n      ]);\n\n      // Store projection reference\n      setProjections((prev) => [\n        ...prev,\n        { id: projectionId, series: [topLine, bottomLine] }\n      ]);\n    };\n\n    chart.subscribeClick(handleClick);\n    return () => chart.unsubscribeClick(handleClick);\n  }, [chart, setClickedPoint, projectionMode, currentIndex, timeInterval]);\n\n  // Handle projection deletion\n  const removeProjection = (id) => {\n    setProjections((prev) => {\n      return prev.filter((proj) => {\n        if (proj.id === id) {\n          proj.series.forEach((line) => {\n            if (line) chart.removeSeries(line);\n          });\n          return false; // Remove from state\n        }\n        return true;\n      });\n    });\n  };\n\n  return (\n    <>\n      <div ref={chartContainerRef} style={{ width: '100%', height: '400px', border: '1px solid black' }}></div>\n\n      <div style={{ marginTop: '10px' }}>\n        <button onClick={() => setProjectionMode('long')} style={{ backgroundColor: projectionMode === 'long' ? 'green' : 'lightgray', color: 'white', padding: '10px' }}>\n          Long Mode\n        </button>\n        <button onClick={() => setProjectionMode('short')} style={{ backgroundColor: projectionMode === 'short' ? 'red' : 'lightgray', color: 'white', padding: '10px', marginLeft: '10px' }}>\n          Short Mode\n        </button>\n        <button onClick={() => handleTrade('buy')} style={{ backgroundColor: 'green', color: 'white', padding: '10px', marginLeft: '10px' }}>\n          Buy\n        </button>\n        <button onClick={() => handleTrade('sell')} style={{ backgroundColor: 'red', color: 'white', padding: '10px', marginLeft: '10px' }}>\n          Sell\n        </button>\n        <button onClick={addNewCandle} style={{ backgroundColor: 'blue', color: 'white', padding: '10px', marginLeft: '10px' }}>\n          Next Candle\n        </button>\n      </div>\n\n      <div style={{ marginTop: '20px' }}>\n        <h3>Projections</h3>\n        {projections.map((proj) => (\n          <div key={proj.id} style={{ display: 'flex', alignItems: 'center', marginBottom: '5px' }}>\n            <span>Projection {proj.id}</span>\n            <button onClick={() => removeProjection(proj.id)} style={{ marginLeft: '10px', padding: '5px', backgroundColor: 'red', color: 'white' }}>\n              Delete\n            </button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default ChartAndControls;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,iBAAiB;EACjBC,oBAAoB;EACpBC,YAAY;EACZC,eAAe;EACfC,SAAS;EACTC,YAAY;EACZC,eAAe;EACfC,WAAW;EACXC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EAC5D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,iBAAiB,CAACgB,OAAO,EAAE;IAEhC,MAAMC,QAAQ,GAAGvB,WAAW,CAACM,iBAAiB,CAACgB,OAAO,EAAE;MACtDE,KAAK,EAAElB,iBAAiB,CAACgB,OAAO,CAACG,WAAW;MAC5CC,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAEC,SAAS,EAAE;MAAO,CAAC;MACzDC,IAAI,EAAE;QAAEC,SAAS,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAC;QAAEC,SAAS,EAAE;UAAED,KAAK,EAAE;QAAO;MAAE,CAAC;MACpEE,UAAU,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAC;MAC/BC,SAAS,EAAE;QAAEC,WAAW,EAAE,IAAI;QAAEC,cAAc,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAO;IAC7E,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAGjB,QAAQ,CAACkB,oBAAoB,CAAC,CAAC;IAC9ClC,oBAAoB,CAACiC,MAAM,CAAC;IAC5BnB,QAAQ,CAACE,QAAQ,CAAC;IAElBxB,KAAK,CAAC2C,IAAI,CAAC,2CAA2C,EAAE;MAAEhC,SAAS;MAAEC;IAAa,CAAC,CAAC,CACjFgC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAMC,YAAY,GAAGH,QAAQ,CAACC,IAAI,CAACG,GAAG,CAACC,MAAM,KAAK;UAChDC,IAAI,EAAE,IAAIC,IAAI,CAACF,MAAM,CAACC,IAAI,CAAC,CAACE,OAAO,CAAC,CAAC,GAAG,IAAI;UAC5CC,IAAI,EAAEJ,MAAM,CAACI,IAAI;UACjBC,IAAI,EAAEL,MAAM,CAACK,IAAI;UACjBC,GAAG,EAAEN,MAAM,CAACM,GAAG;UACfC,KAAK,EAAEP,MAAM,CAACO;QAChB,CAAC,CAAC,CAAC;QACHhB,MAAM,CAACiB,OAAO,CAACV,YAAY,CAAC;QAC5BtC,eAAe,CAACsC,YAAY,CAACD,MAAM,CAAC;MACtC;IACF,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IAEjE,OAAO,MAAMpC,QAAQ,CAACsC,MAAM,CAAC,CAAC;EAChC,CAAC,EAAE,CAACvD,iBAAiB,EAAEC,oBAAoB,EAAEE,eAAe,EAAEC,SAAS,EAAEC,YAAY,CAAC,CAAC;EAEvFd,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,KAAK,EAAE;IAEZ,MAAM0C,WAAW,GAAIC,KAAK,IAAK;MAC7B,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACb,IAAI,IAAI,CAACa,KAAK,CAACC,KAAK,EAAE;MAE3C,MAAMC,KAAK,GAAG7C,KAAK,CAACc,UAAU,CAAC,CAAC,CAACgC,iBAAiB,CAACH,KAAK,CAACC,KAAK,CAACG,CAAC,CAAC;MACjEvD,eAAe,CAAC;QAAEsC,IAAI,EAAE,IAAIC,IAAI,CAACY,KAAK,CAACb,IAAI,GAAG,IAAI,CAAC,CAACkB,cAAc,CAAC,CAAC;QAAEH;MAAM,CAAC,CAAC;MAE9E,MAAMI,QAAQ,GAAG,MAAM;MACvB,MAAMC,QAAQ,GAAG,EAAE,GAAGD,QAAQ;MAC9B,MAAME,SAAS,GAAG,EAAE,GAAGF,QAAQ;;MAE/B;MACA,MAAMG,cAAc,GAAGhE,YAAY,GAAG,CAAC,GAAGA,YAAY,GAAGG,YAAY,GAAGoD,KAAK,CAACb,IAAI;MAClF,MAAMuB,mBAAmB,GAAGD,cAAc,GAAG7D,YAAY,GAAG,CAAC,CAAC,CAAC;;MAE/D,IAAI+D,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW;MAEhD,IAAI7D,cAAc,KAAK,MAAM,EAAE;QAC7B0D,QAAQ,GAAGT,KAAK,GAAGK,QAAQ;QAC3BK,WAAW,GAAGV,KAAK,GAAGM,SAAS;QAC/BK,QAAQ,GAAG,OAAO;QAClBC,WAAW,GAAG,KAAK;MACrB,CAAC,MAAM;QACLH,QAAQ,GAAGT,KAAK,GAAGM,SAAS;QAC5BI,WAAW,GAAGV,KAAK,GAAGK,QAAQ;QAC9BM,QAAQ,GAAG,KAAK;QAChBC,WAAW,GAAG,OAAO;MACvB;;MAEA;MACA,MAAMC,YAAY,GAAG3B,IAAI,CAAC4B,GAAG,CAAC,CAAC;MAC/B,MAAMC,OAAO,GAAG5D,KAAK,CAAC6D,aAAa,CAAC;QAAEjD,KAAK,EAAE4C,QAAQ;QAAEM,SAAS,EAAE;MAAE,CAAC,CAAC;MACtEF,OAAO,CAACvB,OAAO,CAAC,CACd;QAAEP,IAAI,EAAEa,KAAK,CAACb,IAAI;QAAEiC,KAAK,EAAET;MAAS,CAAC,EACrC;QAAExB,IAAI,EAAEuB,mBAAmB;QAAEU,KAAK,EAAET;MAAS,CAAC,CAC/C,CAAC;MAEF,MAAMU,UAAU,GAAGhE,KAAK,CAAC6D,aAAa,CAAC;QAAEjD,KAAK,EAAE6C,WAAW;QAAEK,SAAS,EAAE;MAAE,CAAC,CAAC;MAC5EE,UAAU,CAAC3B,OAAO,CAAC,CACjB;QAAEP,IAAI,EAAEa,KAAK,CAACb,IAAI;QAAEiC,KAAK,EAAER;MAAY,CAAC,EACxC;QAAEzB,IAAI,EAAEuB,mBAAmB;QAAEU,KAAK,EAAER;MAAY,CAAC,CAClD,CAAC;;MAEF;MACAxD,cAAc,CAAEkE,IAAI,IAAK,CACvB,GAAGA,IAAI,EACP;QAAEC,EAAE,EAAER,YAAY;QAAEtC,MAAM,EAAE,CAACwC,OAAO,EAAEI,UAAU;MAAE,CAAC,CACpD,CAAC;IACJ,CAAC;IAEDhE,KAAK,CAACmE,cAAc,CAACzB,WAAW,CAAC;IACjC,OAAO,MAAM1C,KAAK,CAACoE,gBAAgB,CAAC1B,WAAW,CAAC;EAClD,CAAC,EAAE,CAAC1C,KAAK,EAAER,eAAe,EAAEI,cAAc,EAAER,YAAY,EAAEG,YAAY,CAAC,CAAC;;EAExE;EACA,MAAM8E,gBAAgB,GAAIH,EAAE,IAAK;IAC/BnE,cAAc,CAAEkE,IAAI,IAAK;MACvB,OAAOA,IAAI,CAACK,MAAM,CAAEC,IAAI,IAAK;QAC3B,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,EAAE;UAClBK,IAAI,CAACnD,MAAM,CAACoD,OAAO,CAAEC,IAAI,IAAK;YAC5B,IAAIA,IAAI,EAAEzE,KAAK,CAAC0E,YAAY,CAACD,IAAI,CAAC;UACpC,CAAC,CAAC;UACF,OAAO,KAAK,CAAC,CAAC;QAChB;QACA,OAAO,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACE3F,OAAA,CAAAE,SAAA;IAAA2F,QAAA,gBACE7F,OAAA;MAAK8F,GAAG,EAAE1F,iBAAkB;MAAC2F,KAAK,EAAE;QAAEzE,KAAK,EAAE,MAAM;QAAEE,MAAM,EAAE,OAAO;QAAEwE,MAAM,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEzGpG,OAAA;MAAK+F,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,gBAChC7F,OAAA;QAAQsG,OAAO,EAAEA,CAAA,KAAMvF,iBAAiB,CAAC,MAAM,CAAE;QAACgF,KAAK,EAAE;UAAErE,eAAe,EAAEZ,cAAc,KAAK,MAAM,GAAG,OAAO,GAAG,WAAW;UAAEgB,KAAK,EAAE,OAAO;UAAEyE,OAAO,EAAE;QAAO,CAAE;QAAAV,QAAA,EAAC;MAElK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpG,OAAA;QAAQsG,OAAO,EAAEA,CAAA,KAAMvF,iBAAiB,CAAC,OAAO,CAAE;QAACgF,KAAK,EAAE;UAAErE,eAAe,EAAEZ,cAAc,KAAK,OAAO,GAAG,KAAK,GAAG,WAAW;UAAEgB,KAAK,EAAE,OAAO;UAAEyE,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAEtL;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpG,OAAA;QAAQsG,OAAO,EAAEA,CAAA,KAAM3F,WAAW,CAAC,KAAK,CAAE;QAACoF,KAAK,EAAE;UAAErE,eAAe,EAAE,OAAO;UAAEI,KAAK,EAAE,OAAO;UAAEyE,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAErI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpG,OAAA;QAAQsG,OAAO,EAAEA,CAAA,KAAM3F,WAAW,CAAC,MAAM,CAAE;QAACoF,KAAK,EAAE;UAAErE,eAAe,EAAE,KAAK;UAAEI,KAAK,EAAE,OAAO;UAAEyE,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAEpI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpG,OAAA;QAAQsG,OAAO,EAAE1F,YAAa;QAACmF,KAAK,EAAE;UAAErE,eAAe,EAAE,MAAM;UAAEI,KAAK,EAAE,OAAO;UAAEyE,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAExH;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENpG,OAAA;MAAK+F,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,gBAChC7F,OAAA;QAAA6F,QAAA,EAAI;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnBpF,WAAW,CAAC8B,GAAG,CAAE2C,IAAI,iBACpBzF,OAAA;QAAmB+F,KAAK,EAAE;UAAEU,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAd,QAAA,gBACvF7F,OAAA;UAAA6F,QAAA,GAAM,aAAW,EAACJ,IAAI,CAACL,EAAE;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjCpG,OAAA;UAAQsG,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACE,IAAI,CAACL,EAAE,CAAE;UAACW,KAAK,EAAE;YAAES,UAAU,EAAE,MAAM;YAAED,OAAO,EAAE,KAAK;YAAE7E,eAAe,EAAE,KAAK;YAAEI,KAAK,EAAE;UAAQ,CAAE;UAAA+D,QAAA,EAAC;QAEzI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJDX,IAAI,CAACL,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACvF,EAAA,CA5JIV,gBAAgB;AAAAyG,EAAA,GAAhBzG,gBAAgB;AA8JtB,eAAeA,gBAAgB;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}