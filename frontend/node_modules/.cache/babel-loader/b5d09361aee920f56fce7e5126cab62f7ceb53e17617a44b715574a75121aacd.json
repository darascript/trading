{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/ChartAndControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChartAndControls = ({\n  chartContainerRef,\n  candlestickSeries,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  setTotalPnL,\n  setTrades,\n  handleTrade,\n  addNewCandle\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [entryPoint, setEntryPoint] = useState(null);\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#eee'\n        },\n        horzLines: {\n          color: '#eee'\n        }\n      },\n      priceScale: {\n        minMove: 0.00001\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#ccc'\n      }\n    });\n    chartRef.current = chart; // Store chart in ref\n\n    const series = chart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    axios.post('http://127.0.0.1:5000/api/historical_data', {\n      startDate,\n      timeInterval\n    }).then(response => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000,\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    }).catch(error => console.error('Error fetching data:', error));\n\n    // Chart click handling\n    chart.subscribeClick(param => {\n      if (!param || !param.time || !param.point) return;\n      const price = series.coordinateToPrice(param.point.y);\n      if (!entryPoint) {\n        // First click (set entry point)\n        setEntryPoint({\n          time: param.time,\n          price\n        });\n      } else {\n        // Second click (set exit point) and draw the projection\n        drawProjection(param.time, price);\n      }\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n    });\n    return () => {\n      chart.remove();\n      chartRef.current = null;\n    };\n  }, [startDate, timeInterval, setCandlestickSeries, setClickedPoint, setCurrentIndex, entryPoint]);\n  const drawProjection = useCallback((exitTime, exitPrice) => {\n    if (!chartRef.current || !canvasRef.current || !entryPoint) return;\n    const chart = chartRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Ensure the chart is valid\n    if (!chart || !ctx) return;\n\n    // Get time and price scales from chart\n    const timeScale = chart.timeScale();\n    const priceScale = chart.priceScale();\n\n    // Convert time to X coordinates on the canvas\n    const entryX = timeScale.timeToCoordinate(entryPoint.time);\n    const exitX = timeScale.timeToCoordinate(exitTime);\n\n    // Convert price to Y coordinates on the canvas\n    const entryY = priceScale.priceToCoordinate(entryPoint.price);\n    const exitY = priceScale.priceToCoordinate(exitPrice);\n\n    // Draw the projection line\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear previous projections\n    ctx.beginPath();\n    ctx.moveTo(entryX, entryY);\n    ctx.lineTo(exitX, exitY);\n    ctx.strokeStyle = 'green'; // Or use 'red' for short projections\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }, [entryPoint]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '400px',\n        border: '1px solid black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          // Make sure canvas doesn't block chart interactions\n          zIndex: 1,\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTrade('buy'),\n        style: {\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '10px'\n        },\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTrade('sell'),\n        style: {\n          backgroundColor: 'red',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewCandle,\n        style: {\n          backgroundColor: 'blue',\n          color: 'white',\n          padding: '10px',\n          marginLeft: '10px'\n        },\n        children: \"Next Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChartAndControls, \"jjH+5lPk8q+m27PPRQLytpw+B6Y=\");\n_c = ChartAndControls;\nexport default ChartAndControls;\nvar _c;\n$RefreshReg$(_c, \"ChartAndControls\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","axios","createChart","jsxDEV","_jsxDEV","Fragment","_Fragment","ChartAndControls","chartContainerRef","candlestickSeries","setCandlestickSeries","currentIndex","setCurrentIndex","startDate","timeInterval","setClickedPoint","setTotalPnL","setTrades","handleTrade","addNewCandle","_s","chartRef","canvasRef","entryPoint","setEntryPoint","current","chart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","minMove","timeScale","timeVisible","secondsVisible","borderColor","series","addCandlestickSeries","post","then","response","data","length","adjustedData","map","candle","time","Date","getTime","open","high","low","close","setData","catch","error","console","subscribeClick","param","point","price","coordinateToPrice","y","drawProjection","toLocaleString","remove","exitTime","exitPrice","canvas","ctx","getContext","entryX","timeToCoordinate","exitX","entryY","priceToCoordinate","exitY","clearRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","children","ref","style","position","border","top","left","pointerEvents","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onClick","padding","marginLeft","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/ChartAndControls.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\n\nconst ChartAndControls = ({\n  chartContainerRef,\n  candlestickSeries,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  setTotalPnL,\n  setTrades,\n  handleTrade,\n  addNewCandle\n}) => {\n  const chartRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [entryPoint, setEntryPoint] = useState(null);\n\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: { backgroundColor: '#ffffff', textColor: '#333' },\n      grid: { vertLines: { color: '#eee' }, horzLines: { color: '#eee' } },\n      priceScale: { minMove: 0.00001 },\n      timeScale: { timeVisible: true, secondsVisible: false, borderColor: '#ccc' },\n    });\n\n    chartRef.current = chart; // Store chart in ref\n\n    const series = chart.addCandlestickSeries();\n    setCandlestickSeries(series);\n\n    axios.post('http://127.0.0.1:5000/api/historical_data', { startDate, timeInterval })\n      .then((response) => {\n        if (response.data.length > 0) {\n          const adjustedData = response.data.map(candle => ({\n            time: new Date(candle.time).getTime() / 1000,\n            open: candle.open,\n            high: candle.high,\n            low: candle.low,\n            close: candle.close,\n          }));\n          series.setData(adjustedData);\n          setCurrentIndex(adjustedData.length);\n        }\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n    // Chart click handling\n    chart.subscribeClick((param) => {\n      if (!param || !param.time || !param.point) return;\n\n      const price = series.coordinateToPrice(param.point.y);\n\n      if (!entryPoint) {\n        // First click (set entry point)\n        setEntryPoint({ time: param.time, price });\n      } else {\n        // Second click (set exit point) and draw the projection\n        drawProjection(param.time, price);\n      }\n\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n    });\n\n    return () => {\n      chart.remove();\n      chartRef.current = null;\n    };\n  }, [startDate, timeInterval, setCandlestickSeries, setClickedPoint, setCurrentIndex, entryPoint]);\n\n  const drawProjection = useCallback((exitTime, exitPrice) => {\n    if (!chartRef.current || !canvasRef.current || !entryPoint) return;\n\n    const chart = chartRef.current;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Ensure the chart is valid\n    if (!chart || !ctx) return;\n\n    // Get time and price scales from chart\n    const timeScale = chart.timeScale();\n    const priceScale = chart.priceScale();\n\n    // Convert time to X coordinates on the canvas\n    const entryX = timeScale.timeToCoordinate(entryPoint.time);\n    const exitX = timeScale.timeToCoordinate(exitTime);\n\n    // Convert price to Y coordinates on the canvas\n    const entryY = priceScale.priceToCoordinate(entryPoint.price);\n    const exitY = priceScale.priceToCoordinate(exitPrice);\n\n    // Draw the projection line\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear previous projections\n    ctx.beginPath();\n    ctx.moveTo(entryX, entryY);\n    ctx.lineTo(exitX, exitY);\n    ctx.strokeStyle = 'green'; // Or use 'red' for short projections\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }, [entryPoint]);\n\n  return (\n    <>\n      <div\n        ref={chartContainerRef}\n        style={{ position: 'relative', width: '100%', height: '400px', border: '1px solid black' }}\n      >\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            pointerEvents: 'none',  // Make sure canvas doesn't block chart interactions\n            zIndex: 1,\n            width: '100%',\n            height: '100%',\n          }}\n        ></canvas>\n      </div>\n\n      <div style={{ marginTop: '10px' }}>\n        <button\n          onClick={() => handleTrade('buy')}\n          style={{ backgroundColor: 'green', color: 'white', padding: '10px' }}\n        >\n          Buy\n        </button>\n        <button\n          onClick={() => handleTrade('sell')}\n          style={{ backgroundColor: 'red', color: 'white', padding: '10px', marginLeft: '10px' }}\n        >\n          Sell\n        </button>\n        <button\n          onClick={addNewCandle}\n          style={{ backgroundColor: 'blue', color: 'white', padding: '10px', marginLeft: '10px' }}\n        >\n          Next Candle\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ChartAndControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}