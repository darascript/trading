{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/ChartAndControls.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartAndControls = ({\n  chartContainerRef,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  handleTrade,\n  addNewCandle\n}) => {\n  _s();\n  const [projectionMode, setProjectionMode] = useState('long');\n  const [projections, setProjections] = useState([]);\n  const [chart, setChart] = useState(null);\n  const [candleSeries, setLocalCandleSeries] = useState(null);\n  const [selectedProjection, setSelectedProjection] = useState(null);\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const newChart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#eee'\n        },\n        horzLines: {\n          color: '#eee'\n        }\n      },\n      priceScale: {\n        mode: 2,\n        borderColor: '#ccc'\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#ccc'\n      },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0\n        },\n        horzLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0\n        }\n      }\n    });\n    const series = newChart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    setLocalCandleSeries(series);\n    setChart(newChart);\n    axios.post('http://127.0.0.1:5000/api/historical_data', {\n      startDate,\n      timeInterval\n    }).then(response => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000,\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    }).catch(error => console.error('Error fetching data:', error));\n    return () => newChart.remove();\n  }, [chartContainerRef, setCandlestickSeries, setCurrentIndex, startDate, timeInterval]);\n  useEffect(() => {\n    if (!chart || !candleSeries) return;\n    const handleClick = param => {\n      if (!param || !param.time || !param.point) return;\n\n      // Get the price scale from the candlestick series\n      const priceScale = candleSeries.priceScale();\n      if (!priceScale) return;\n\n      // Convert coordinate to price\n      const price = priceScale.coordinateToPrice(param.point.y);\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n\n      // Check if we clicked near an existing projection\n      const clickedProjection = findNearestProjection(price, param.time);\n      if (clickedProjection) {\n        setSelectedProjection(clickedProjection.id);\n        return;\n      }\n      const pipValue = 0.0001;\n      const longPips = 40 * pipValue;\n      const shortPips = 30 * pipValue;\n      const lastCandleTime = currentIndex > 0 ? currentIndex * timeInterval : param.time;\n      const projectionTimeRange = lastCandleTime + timeInterval * 5;\n      let topPrice, bottomPrice, topColor, bottomColor;\n      if (projectionMode === 'long') {\n        topPrice = price + longPips;\n        bottomPrice = price - shortPips;\n        topColor = 'rgba(76, 175, 80, 0.8)';\n        bottomColor = 'rgba(244, 67, 54, 0.8)';\n      } else {\n        topPrice = price + shortPips;\n        bottomPrice = price - longPips;\n        topColor = 'rgba(244, 67, 54, 0.8)';\n        bottomColor = 'rgba(76, 175, 80, 0.8)';\n      }\n      const projectionId = Date.now();\n      const projectionNumber = projections.length + 1;\n      const topLine = chart.addLineSeries({\n        color: topColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Top`\n      });\n      const bottomLine = chart.addLineSeries({\n        color: bottomColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Bottom`\n      });\n      topLine.setData([{\n        time: param.time,\n        value: topPrice\n      }, {\n        time: projectionTimeRange,\n        value: topPrice\n      }]);\n      bottomLine.setData([{\n        time: param.time,\n        value: bottomPrice\n      }, {\n        time: projectionTimeRange,\n        value: bottomPrice\n      }]);\n      setProjections(prev => [...prev, {\n        id: projectionId,\n        number: projectionNumber,\n        series: [topLine, bottomLine],\n        prices: {\n          top: topPrice,\n          bottom: bottomPrice\n        },\n        time: param.time,\n        mode: projectionMode\n      }]);\n    };\n    const findNearestProjection = (price, time) => {\n      const tolerance = 0.0002; // Adjust this value to change click sensitivity\n\n      return projections.find(proj => {\n        const timeMatch = Math.abs(proj.time - time) < timeInterval;\n        const priceMatch = Math.abs(proj.prices.top - price) < tolerance || Math.abs(proj.prices.bottom - price) < tolerance;\n        return timeMatch && priceMatch;\n      });\n    };\n    chart.subscribeClick(handleClick);\n    return () => chart.unsubscribeClick(handleClick);\n  }, [chart, setClickedPoint, projectionMode, currentIndex, timeInterval, projections, candleSeries]);\n  const removeProjection = id => {\n    setProjections(prev => {\n      return prev.filter(proj => {\n        if (proj.id === id) {\n          proj.series.forEach(line => {\n            if (line) chart.removeSeries(line);\n          });\n          return false;\n        }\n        return true;\n      });\n    });\n    setSelectedProjection(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      style: {\n        width: '100%',\n        height: '400px',\n        border: '1px solid #e2e8f0',\n        borderRadius: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setProjectionMode('long'),\n        style: {\n          backgroundColor: projectionMode === 'long' ? '#4CAF50' : '#e2e8f0',\n          color: projectionMode === 'long' ? 'white' : '#4a5568',\n          padding: '0.5rem 1rem',\n          borderRadius: '0.375rem',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Long Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setProjectionMode('short'),\n        style: {\n          backgroundColor: projectionMode === 'short' ? '#f44336' : '#e2e8f0',\n          color: projectionMode === 'short' ? 'white' : '#4a5568',\n          padding: '0.5rem 1rem',\n          borderRadius: '0.375rem',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Short Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTrade('buy'),\n        style: {\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          padding: '0.5rem 1rem',\n          borderRadius: '0.375rem',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTrade('sell'),\n        style: {\n          backgroundColor: '#f44336',\n          color: 'white',\n          padding: '0.5rem 1rem',\n          borderRadius: '0.375rem',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewCandle,\n        style: {\n          backgroundColor: '#2196F3',\n          color: 'white',\n          padding: '0.5rem 1rem',\n          borderRadius: '0.375rem',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Next Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #e2e8f0',\n        borderRadius: '0.5rem',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 1rem 0',\n          fontSize: '1.25rem',\n          fontWeight: '600'\n        },\n        children: \"Active Projections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n          gap: '0.5rem'\n        },\n        children: projections.map(proj => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0.5rem',\n            borderRadius: '0.375rem',\n            border: `1px solid ${selectedProjection === proj.id ? '#3b82f6' : '#e2e8f0'}`,\n            backgroundColor: selectedProjection === proj.id ? '#eff6ff' : 'white',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '500'\n              },\n              children: [\"Projection \", proj.number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.875rem',\n                color: '#666',\n                marginTop: '0.25rem'\n              },\n              children: proj.mode.charAt(0).toUpperCase() + proj.mode.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProjection(proj.id),\n            style: {\n              backgroundColor: '#ef4444',\n              color: 'white',\n              padding: '0.25rem 0.5rem',\n              borderRadius: '0.25rem',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '0.875rem'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, proj.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartAndControls, \"r5t/aXrzHgy8IjtMCvWaRl0k97g=\");\n_c = ChartAndControls;\nexport default ChartAndControls;\nvar _c;\n$RefreshReg$(_c, \"ChartAndControls\");","map":{"version":3,"names":["useEffect","useState","axios","createChart","jsxDEV","_jsxDEV","ChartAndControls","chartContainerRef","setCandlestickSeries","currentIndex","setCurrentIndex","startDate","timeInterval","setClickedPoint","handleTrade","addNewCandle","_s","projectionMode","setProjectionMode","projections","setProjections","chart","setChart","candleSeries","setLocalCandleSeries","selectedProjection","setSelectedProjection","current","newChart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","mode","borderColor","timeScale","timeVisible","secondsVisible","crosshair","vertLine","style","horzLine","series","addCandlestickSeries","post","then","response","data","length","adjustedData","map","candle","time","Date","getTime","open","high","low","close","setData","catch","error","console","remove","handleClick","param","point","price","coordinateToPrice","y","toLocaleString","clickedProjection","findNearestProjection","id","pipValue","longPips","shortPips","lastCandleTime","projectionTimeRange","topPrice","bottomPrice","topColor","bottomColor","projectionId","now","projectionNumber","topLine","addLineSeries","lineWidth","title","bottomLine","value","prev","number","prices","top","bottom","tolerance","find","proj","timeMatch","Math","abs","priceMatch","subscribeClick","unsubscribeClick","removeProjection","filter","forEach","line","removeSeries","display","flexDirection","gap","children","ref","border","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","cursor","margin","fontSize","fontWeight","gridTemplateColumns","justifyContent","alignItems","marginTop","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/ChartAndControls.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\n\nconst ChartAndControls = ({\n  chartContainerRef,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  handleTrade,\n  addNewCandle\n}) => {\n  const [projectionMode, setProjectionMode] = useState('long');\n  const [projections, setProjections] = useState([]);\n  const [chart, setChart] = useState(null);\n  const [candleSeries, setLocalCandleSeries] = useState(null);\n  const [selectedProjection, setSelectedProjection] = useState(null);\n\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const newChart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: { backgroundColor: '#ffffff', textColor: '#333' },\n      grid: { vertLines: { color: '#eee' }, horzLines: { color: '#eee' } },\n      priceScale: { \n        mode: 2,\n        borderColor: '#ccc',\n      },\n      timeScale: { timeVisible: true, secondsVisible: false, borderColor: '#ccc' },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0,\n        },\n        horzLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0,\n        },\n      },\n    });\n\n    const series = newChart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    setLocalCandleSeries(series);\n    setChart(newChart);\n\n    axios.post('http://127.0.0.1:5000/api/historical_data', { startDate, timeInterval })\n      .then((response) => {\n        if (response.data.length > 0) {\n          const adjustedData = response.data.map(candle => ({\n            time: new Date(candle.time).getTime() / 1000,\n            open: candle.open,\n            high: candle.high,\n            low: candle.low,\n            close: candle.close,\n          }));\n          series.setData(adjustedData);\n          setCurrentIndex(adjustedData.length);\n        }\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n    return () => newChart.remove();\n  }, [chartContainerRef, setCandlestickSeries, setCurrentIndex, startDate, timeInterval]);\n\n  useEffect(() => {\n    if (!chart || !candleSeries) return;\n\n    const handleClick = (param) => {\n      if (!param || !param.time || !param.point) return;\n\n      // Get the price scale from the candlestick series\n      const priceScale = candleSeries.priceScale();\n      if (!priceScale) return;\n\n      // Convert coordinate to price\n      const price = priceScale.coordinateToPrice(param.point.y);\n      setClickedPoint({ time: new Date(param.time * 1000).toLocaleString(), price });\n\n      // Check if we clicked near an existing projection\n      const clickedProjection = findNearestProjection(price, param.time);\n      if (clickedProjection) {\n        setSelectedProjection(clickedProjection.id);\n        return;\n      }\n\n      const pipValue = 0.0001;\n      const longPips = 40 * pipValue;\n      const shortPips = 30 * pipValue;\n\n      const lastCandleTime = currentIndex > 0 ? currentIndex * timeInterval : param.time;\n      const projectionTimeRange = lastCandleTime + timeInterval * 5;\n\n      let topPrice, bottomPrice, topColor, bottomColor;\n\n      if (projectionMode === 'long') {\n        topPrice = price + longPips;\n        bottomPrice = price - shortPips;\n        topColor = 'rgba(76, 175, 80, 0.8)';\n        bottomColor = 'rgba(244, 67, 54, 0.8)';\n      } else {\n        topPrice = price + shortPips;\n        bottomPrice = price - longPips;\n        topColor = 'rgba(244, 67, 54, 0.8)';\n        bottomColor = 'rgba(76, 175, 80, 0.8)';\n      }\n\n      const projectionId = Date.now();\n      const projectionNumber = projections.length + 1;\n\n      const topLine = chart.addLineSeries({\n        color: topColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Top`,\n      });\n      \n      const bottomLine = chart.addLineSeries({\n        color: bottomColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Bottom`,\n      });\n\n      topLine.setData([\n        { time: param.time, value: topPrice },\n        { time: projectionTimeRange, value: topPrice },\n      ]);\n\n      bottomLine.setData([\n        { time: param.time, value: bottomPrice },\n        { time: projectionTimeRange, value: bottomPrice },\n      ]);\n\n      setProjections((prev) => [\n        ...prev,\n        {\n          id: projectionId,\n          number: projectionNumber,\n          series: [topLine, bottomLine],\n          prices: { top: topPrice, bottom: bottomPrice },\n          time: param.time,\n          mode: projectionMode,\n        }\n      ]);\n    };\n\n    const findNearestProjection = (price, time) => {\n      const tolerance = 0.0002; // Adjust this value to change click sensitivity\n      \n      return projections.find(proj => {\n        const timeMatch = Math.abs(proj.time - time) < timeInterval;\n        const priceMatch = \n          Math.abs(proj.prices.top - price) < tolerance ||\n          Math.abs(proj.prices.bottom - price) < tolerance;\n        return timeMatch && priceMatch;\n      });\n    };\n\n    chart.subscribeClick(handleClick);\n    return () => chart.unsubscribeClick(handleClick);\n  }, [chart, setClickedPoint, projectionMode, currentIndex, timeInterval, projections, candleSeries]);\n\n  const removeProjection = (id) => {\n    setProjections((prev) => {\n      return prev.filter((proj) => {\n        if (proj.id === id) {\n          proj.series.forEach((line) => {\n            if (line) chart.removeSeries(line);\n          });\n          return false;\n        }\n        return true;\n      });\n    });\n    setSelectedProjection(null);\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n      <div \n        ref={chartContainerRef} \n        style={{ \n          width: '100%', \n          height: '400px', \n          border: '1px solid #e2e8f0',\n          borderRadius: '0.5rem'\n        }}\n      />\n\n      <div style={{ display: 'flex', gap: '0.5rem' }}>\n        <button\n          onClick={() => setProjectionMode('long')}\n          style={{\n            backgroundColor: projectionMode === 'long' ? '#4CAF50' : '#e2e8f0',\n            color: projectionMode === 'long' ? 'white' : '#4a5568',\n            padding: '0.5rem 1rem',\n            borderRadius: '0.375rem',\n            border: 'none',\n            cursor: 'pointer'\n          }}\n        >\n          Long Mode\n        </button>\n        <button\n          onClick={() => setProjectionMode('short')}\n          style={{\n            backgroundColor: projectionMode === 'short' ? '#f44336' : '#e2e8f0',\n            color: projectionMode === 'short' ? 'white' : '#4a5568',\n            padding: '0.5rem 1rem',\n            borderRadius: '0.375rem',\n            border: 'none',\n            cursor: 'pointer'\n          }}\n        >\n          Short Mode\n        </button>\n        <button\n          onClick={() => handleTrade('buy')}\n          style={{\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            padding: '0.5rem 1rem',\n            borderRadius: '0.375rem',\n            border: 'none',\n            cursor: 'pointer'\n          }}\n        >\n          Buy\n        </button>\n        <button\n          onClick={() => handleTrade('sell')}\n          style={{\n            backgroundColor: '#f44336',\n            color: 'white',\n            padding: '0.5rem 1rem',\n            borderRadius: '0.375rem',\n            border: 'none',\n            cursor: 'pointer'\n          }}\n        >\n          Sell\n        </button>\n        <button\n          onClick={addNewCandle}\n          style={{\n            backgroundColor: '#2196F3',\n            color: 'white',\n            padding: '0.5rem 1rem',\n            borderRadius: '0.375rem',\n            border: 'none',\n            cursor: 'pointer'\n          }}\n        >\n          Next Candle\n        </button>\n      </div>\n\n      <div style={{ \n        border: '1px solid #e2e8f0', \n        borderRadius: '0.5rem', \n        padding: '1rem' \n      }}>\n        <h3 style={{ \n          margin: '0 0 1rem 0',\n          fontSize: '1.25rem',\n          fontWeight: '600'\n        }}>\n          Active Projections\n        </h3>\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n          gap: '0.5rem' \n        }}>\n          {projections.map((proj) => (\n            <div\n              key={proj.id}\n              style={{\n                padding: '0.5rem',\n                borderRadius: '0.375rem',\n                border: `1px solid ${selectedProjection === proj.id ? '#3b82f6' : '#e2e8f0'}`,\n                backgroundColor: selectedProjection === proj.id ? '#eff6ff' : 'white',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}\n            >\n              <div>\n                <span style={{ fontWeight: '500' }}>\n                  Projection {proj.number}\n                </span>\n                <div style={{ \n                  fontSize: '0.875rem', \n                  color: '#666',\n                  marginTop: '0.25rem' \n                }}>\n                  {proj.mode.charAt(0).toUpperCase() + proj.mode.slice(1)}\n                </div>\n              </div>\n              <button\n                onClick={() => removeProjection(proj.id)}\n                style={{\n                  backgroundColor: '#ef4444',\n                  color: 'white',\n                  padding: '0.25rem 0.5rem',\n                  borderRadius: '0.25rem',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '0.875rem'\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartAndControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}