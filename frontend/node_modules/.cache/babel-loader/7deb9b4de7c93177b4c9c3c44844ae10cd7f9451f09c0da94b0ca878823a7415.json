{"ast":null,"code":"/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v5.0.2\n * Copyright (c) 2025 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\nconst customStyleDefaults$1 = {\n  color: '#2196f3'\n};\nconst seriesOptionsDefaults = {\n  title: '',\n  visible: true,\n  lastValueVisible: true,\n  priceLineVisible: true,\n  priceLineSource: 0 /* PriceLineSource.LastBar */,\n  priceLineWidth: 1,\n  priceLineColor: '',\n  priceLineStyle: 2 /* LineStyle.Dashed */,\n  baseLineVisible: true,\n  baseLineWidth: 1,\n  baseLineColor: '#B2B5BE',\n  baseLineStyle: 0 /* LineStyle.Solid */,\n  priceFormat: {\n    type: 'price',\n    precision: 2,\n    minMove: 0.01\n  }\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n  /**\n   * A line.\n   */\n  LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n  /**\n   * A stepped line.\n   */\n  LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n  /**\n   * A curved line.\n   */\n  LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n  /**\n   * A solid line.\n   */\n  LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n  /**\n   * A dotted line.\n   */\n  LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n  /**\n   * A dashed line.\n   */\n  LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n  /**\n   * A dashed line with bigger dashes.\n   */\n  LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n  /**\n   * A dotted line with more space between dots.\n   */\n  LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n  const dashPatterns = {\n    [0 /* LineStyle.Solid */]: [],\n    [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n    [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n    [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n    [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth]\n  };\n  const dashPattern = dashPatterns[style];\n  ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(left, y + correction);\n  ctx.lineTo(right, y + correction);\n  ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(x + correction, top);\n  ctx.lineTo(x + correction, bottom);\n  ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n  ctx.save();\n  if (ctx.lineWidth % 2) {\n    ctx.translate(0.5, 0.5);\n  }\n  drawFunction();\n  ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n  }\n}\nfunction ensureDefined(value) {\n  if (value === undefined) {\n    throw new Error('Value is undefined');\n  }\n  return value;\n}\nfunction ensureNotNull(value) {\n  if (value === null) {\n    throw new Error('Value is null');\n  }\n  return value;\n}\nfunction ensure(value) {\n  return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) {}\nclass Delegate {\n  constructor() {\n    this._private__listeners = [];\n  }\n  _internal_subscribe(callback, linkedObject, singleshot) {\n    const listener = {\n      _internal_callback: callback,\n      _internal_linkedObject: linkedObject,\n      _internal_singleshot: singleshot === true\n    };\n    this._private__listeners.push(listener);\n  }\n  _internal_unsubscribe(callback) {\n    const index = this._private__listeners.findIndex(listener => callback === listener._internal_callback);\n    if (index > -1) {\n      this._private__listeners.splice(index, 1);\n    }\n  }\n  _internal_unsubscribeAll(linkedObject) {\n    this._private__listeners = this._private__listeners.filter(listener => listener._internal_linkedObject !== linkedObject);\n  }\n  _internal_fire(param1, param2, param3) {\n    const listenersSnapshot = [...this._private__listeners];\n    this._private__listeners = this._private__listeners.filter(listener => !listener._internal_singleshot);\n    listenersSnapshot.forEach(listener => listener._internal_callback(param1, param2, param3));\n  }\n  _internal_hasListeners() {\n    return this._private__listeners.length > 0;\n  }\n  _internal_destroy() {\n    this._private__listeners = [];\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n  for (const src of sources) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i in src) {\n      if (src[i] === undefined || !Object.prototype.hasOwnProperty.call(src, i) || ['__proto__', 'constructor', 'prototype'].includes(i)) {\n        continue;\n      }\n      if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n        dst[i] = src[i];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        merge(dst[i], src[i]);\n      }\n    }\n  }\n  return dst;\n}\nfunction isNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\nfunction isInteger(value) {\n  return typeof value === 'number' && value % 1 === 0;\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction clone(object) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = object;\n  if (!o || 'object' !== typeof o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return o;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let c;\n  if (Array.isArray(o)) {\n    c = [];\n  } else {\n    c = {};\n  }\n  let p;\n  let v;\n  // eslint-disable-next-line no-restricted-syntax\n  for (p in o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n    if (o.hasOwnProperty(p)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      v = o[p];\n      if (v && 'object' === typeof v) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = clone(v);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = v;\n      }\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return c;\n}\nfunction notNull(t) {\n  return t !== null;\n}\nfunction undefinedIfNull(t) {\n  return t === null ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n  if (style !== undefined) {\n    style = `${style} `;\n  } else {\n    style = '';\n  }\n  if (family === undefined) {\n    family = defaultFontFamily;\n  }\n  return `${style}${size}px ${family}`;\n}\nclass PriceAxisRendererOptionsProvider {\n  constructor(chartModel) {\n    this._private__rendererOptions = {\n      _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n      _internal_tickLength: 5 /* RendererConstants.TickLength */,\n      _internal_fontSize: NaN,\n      _internal_font: '',\n      _internal_fontFamily: '',\n      _internal_color: '',\n      _internal_paneBackgroundColor: '',\n      _internal_paddingBottom: 0,\n      _internal_paddingInner: 0,\n      _internal_paddingOuter: 0,\n      _internal_paddingTop: 0,\n      _internal_baselineOffset: 0\n    };\n    this._private__chartModel = chartModel;\n  }\n  _internal_options() {\n    const rendererOptions = this._private__rendererOptions;\n    const currentFontSize = this._private__fontSize();\n    const currentFontFamily = this._private__fontFamily();\n    if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n      rendererOptions._internal_fontSize = currentFontSize;\n      rendererOptions._internal_fontFamily = currentFontFamily;\n      rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n      rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n      rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n      rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_baselineOffset = 0;\n    }\n    rendererOptions._internal_color = this._private__textColor();\n    rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n    return this._private__rendererOptions;\n  }\n  _private__textColor() {\n    return this._private__chartModel._internal_options()['layout'].textColor;\n  }\n  _private__paneBackgroundColor() {\n    return this._private__chartModel._internal_backgroundTopColor();\n  }\n  _private__fontSize() {\n    return this._private__chartModel._internal_options()['layout'].fontSize;\n  }\n  _private__fontFamily() {\n    return this._private__chartModel._internal_options()['layout'].fontFamily;\n  }\n}\nfunction normalizeRgbComponent(component) {\n  if (component < 0) {\n    return 0;\n  }\n  if (component > 255) {\n    return 255;\n  }\n  // NaN values are treated as 0\n  return Math.round(component) || 0;\n}\nfunction normalizeAlphaComponent(component) {\n  if (component <= 0 || component > 1) {\n    return Math.min(Math.max(component, 0), 1);\n  }\n  // limit the precision of all numbers to at most 4 digits in fractional part\n  return Math.round(component * 10000) / 10000;\n}\nfunction rgbaToGrayscale(rgbValue) {\n  // Originally, the NTSC RGB to YUV formula\n  // perfected by @eugene-korobko's black magic\n  const redComponentGrayscaleWeight = 0.199;\n  const greenComponentGrayscaleWeight = 0.687;\n  const blueComponentGrayscaleWeight = 0.114;\n  return redComponentGrayscaleWeight * rgbValue[0] + greenComponentGrayscaleWeight * rgbValue[1] + blueComponentGrayscaleWeight * rgbValue[2];\n}\n/**\n * For colors which fall within the sRGB space, the browser can\n * be used to convert the color string into a rgb /rgba string.\n *\n * For other colors, it will be returned as specified (i.e. for\n * newer formats like display-p3)\n *\n * See: https://www.w3.org/TR/css-color-4/#serializing-sRGB-values\n */\nfunction getRgbStringViaBrowser(color) {\n  const element = document.createElement('div');\n  element.style.display = 'none';\n  // We append to the body as it is the most reliable way to get a color reading\n  // appending to the chart container or similar element can result in the following\n  // getComputedStyle returning empty strings on each check.\n  document.body.appendChild(element);\n  element.style.color = color;\n  const computed = window.getComputedStyle(element).color;\n  document.body.removeChild(element);\n  return computed;\n}\nclass ColorParser {\n  constructor(customParsers, initialCache) {\n    this._private__rgbaCache = new Map();\n    this._private__customParsers = customParsers;\n    if (initialCache) {\n      this._private__rgbaCache = initialCache;\n    }\n  }\n  /**\n   * We fallback to RGBA here since supporting alpha transformations\n   * on wider color gamuts would currently be a lot of extra code\n   * for very little benefit due to actual usage.\n   */\n  _internal_applyAlpha(color, alpha) {\n    // special case optimization\n    if (color === 'transparent') {\n      return color;\n    }\n    const originRgba = this._private__parseColor(color);\n    const originAlpha = originRgba[3];\n    return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n  }\n  _internal_generateContrastColors(background) {\n    const rgba = this._private__parseColor(background);\n    return {\n      _internal_background: `rgb(${rgba[0]}, ${rgba[1]}, ${rgba[2]})`,\n      // no alpha\n      _internal_foreground: rgbaToGrayscale(rgba) > 160 ? 'black' : 'white'\n    };\n  }\n  _internal_colorStringToGrayscale(background) {\n    return rgbaToGrayscale(this._private__parseColor(background));\n  }\n  _internal_gradientColorAtPercent(topColor, bottomColor, percent) {\n    const [topR, topG, topB, topA] = this._private__parseColor(topColor);\n    const [bottomR, bottomG, bottomB, bottomA] = this._private__parseColor(bottomColor);\n    const resultRgba = [normalizeRgbComponent(topR + percent * (bottomR - topR)), normalizeRgbComponent(topG + percent * (bottomG - topG)), normalizeRgbComponent(topB + percent * (bottomB - topB)), normalizeAlphaComponent(topA + percent * (bottomA - topA))];\n    return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n  }\n  _private__parseColor(color) {\n    const cached = this._private__rgbaCache.get(color);\n    if (cached) {\n      return cached;\n    }\n    const computed = getRgbStringViaBrowser(color);\n    const match = computed.match(/^rgba?\\s*\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d*\\.?\\d+))?\\)$/);\n    if (!match) {\n      if (this._private__customParsers.length) {\n        for (const parser of this._private__customParsers) {\n          const result = parser(color);\n          if (result) {\n            this._private__rgbaCache.set(color, result);\n            return result;\n          }\n        }\n      }\n      throw new Error(`Failed to parse color: ${color}`);\n    }\n    const rgba = [parseInt(match[1], 10), parseInt(match[2], 10), parseInt(match[3], 10), match[4] ? parseFloat(match[4]) : 1];\n    this._private__rgbaCache.set(color, rgba);\n    return rgba;\n  }\n}\nclass CompositeRenderer {\n  constructor() {\n    this._private__renderers = [];\n  }\n  _internal_setRenderers(renderers) {\n    this._private__renderers = renderers;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__renderers.forEach(r => {\n      r._internal_draw(target, isHovered, hitTestData);\n    });\n  }\n}\nclass BitmapCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useBitmapCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n}\nclass PaneRendererMarks extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n      return;\n    }\n    const visibleRange = this._internal__data._internal_visibleRange;\n    const data = this._internal__data;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = tickWidth % 2 / 2;\n    const draw = radiusMedia => {\n      ctx.beginPath();\n      for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = data._internal_items[i];\n        const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = point._internal_y * verticalPixelRatio;\n        const radius = radiusMedia * verticalPixelRatio + correction;\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n      }\n      ctx.fill();\n    };\n    if (data._internal_lineWidth > 0) {\n      ctx.fillStyle = data._internal_backColor;\n      draw(data._internal_radius + data._internal_lineWidth);\n    }\n    ctx.fillStyle = data._internal_lineColor;\n    draw(data._internal_radius);\n  }\n}\nfunction createEmptyMarkerData() {\n  return {\n    _internal_items: [{\n      _internal_x: 0,\n      _internal_y: 0,\n      _internal_time: 0,\n      _internal_price: 0\n    }],\n    _internal_lineColor: '',\n    _internal_backColor: '',\n    _internal_radius: 0,\n    _internal_lineWidth: 0,\n    _internal_visibleRange: null\n  };\n}\nconst rangeForSinglePoint = {\n  from: 0,\n  to: 1\n};\nclass CrosshairMarksPaneView {\n  constructor(chartModel, crosshair, pane) {\n    this._private__compositeRenderer = new CompositeRenderer();\n    this._private__markersRenderers = [];\n    this._private__markersData = [];\n    this._private__invalidated = true;\n    this._private__chartModel = chartModel;\n    this._private__crosshair = crosshair;\n    this._private__pane = pane;\n    this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n  }\n  _internal_update(updateType) {\n    this._private__createMarkerRenderersIfNeeded();\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__compositeRenderer;\n  }\n  _private__createMarkerRenderersIfNeeded() {\n    const serieses = this._private__pane._internal_orderedSources();\n    if (serieses.length !== this._private__markersRenderers.length) {\n      this._private__markersData = serieses.map(createEmptyMarkerData);\n      this._private__markersRenderers = this._private__markersData.map(data => {\n        const res = new PaneRendererMarks();\n        res._internal_setData(data);\n        return res;\n      });\n      this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n  }\n  _private__updateImpl() {\n    const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */ || !this._private__crosshair._internal_visible();\n    const serieses = this._private__pane._internal_orderedSeries();\n    const timePointIndex = this._private__crosshair._internal_appliedIndex();\n    const timeScale = this._private__chartModel._internal_timeScale();\n    this._private__createMarkerRenderersIfNeeded();\n    serieses.forEach((s, index) => {\n      const data = this._private__markersData[index];\n      const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n      const firstValue = s._internal_firstValue();\n      if (forceHidden || seriesData === null || !s._internal_visible() || firstValue === null) {\n        data._internal_visibleRange = null;\n        return;\n      }\n      data._internal_lineColor = seriesData._internal_backgroundColor;\n      data._internal_radius = seriesData._internal_radius;\n      data._internal_lineWidth = seriesData._internal_borderWidth;\n      data._internal_items[0]._internal_price = seriesData._internal_price;\n      data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n      data._internal_backColor = seriesData._internal_borderColor ?? this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n      data._internal_items[0]._internal_time = timePointIndex;\n      data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n      data._internal_visibleRange = rangeForSinglePoint;\n    });\n  }\n}\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n    const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n    if (!vertLinesVisible && !horzLinesVisible) {\n      return;\n    }\n    const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    ctx.lineCap = 'butt';\n    if (vertLinesVisible && x >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n      drawVerticalLine(ctx, x, 0, bitmapSize.height);\n    }\n    if (horzLinesVisible && y >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n      drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n  }\n}\nclass CrosshairPaneView {\n  constructor(source, pane) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_vertLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_horzLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_x: 0,\n      _internal_y: 0\n    };\n    this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n    this._private__source = source;\n    this._private__pane = pane;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer(pane) {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const visible = this._private__source._internal_visible();\n    const crosshairOptions = this._private__pane._internal_model()._internal_options().crosshair;\n    const data = this._private__rendererData;\n    if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n      data._internal_horzLine._internal_visible = false;\n      data._internal_vertLine._internal_visible = false;\n      return;\n    }\n    data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(this._private__pane);\n    data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n    data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n    data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n    data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n    data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n    data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n    data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n    data._internal_x = this._private__source._internal_appliedX();\n    data._internal_y = this._private__source._internal_appliedY();\n  }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n  // horizontal (top and bottom) edges\n  ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n  ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n  // vertical (left and right) edges\n  ctx.fillRect(x, y, borderWidth, height);\n  ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  ctx.fillStyle = clearColor;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n  return borderRadius.map(x => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n  /**\n   * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n   * be able to switch to the native version soon.\n   */\n  ctx.beginPath();\n  if (ctx.roundRect) {\n    ctx.roundRect(x, y, w, h, radii);\n    return;\n  }\n  /*\n   * Deprecate the rest in v5.\n   */\n  ctx.lineTo(x + w - radii[1], y);\n  if (radii[1] !== 0) {\n    ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n  }\n  ctx.lineTo(x + w, y + h - radii[2]);\n  if (radii[2] !== 0) {\n    ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n  }\n  ctx.lineTo(x + radii[3], y + h);\n  if (radii[3] !== 0) {\n    ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n  }\n  ctx.lineTo(x, y + radii[0]);\n  if (radii[0] !== 0) {\n    ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n  }\n}\n/**\n * Draws a rounded rect with a border.\n *\n * This function assumes that the colors will be solid, without\n * any alpha. (This allows us to fix a rendering artefact.)\n *\n * @param outerBorderRadius - The radius of the border (outer edge)\n */\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, outerBorderRadius = [0, 0, 0, 0], borderColor = '') {\n  ctx.save();\n  if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n    drawRoundRect(ctx, left, top, width, height, outerBorderRadius);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n    return;\n  }\n  const halfBorderWidth = borderWidth / 2;\n  const radii = changeBorderRadius(outerBorderRadius, -halfBorderWidth);\n  drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, radii);\n  if (backgroundColor !== 'transparent') {\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n  }\n  if (borderColor !== 'transparent') {\n    ctx.lineWidth = borderWidth;\n    ctx.strokeStyle = borderColor;\n    ctx.closePath();\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  const gradient = ctx.createLinearGradient(0, 0, 0, h);\n  gradient.addColorStop(0, topColor);\n  gradient.addColorStop(1, bottomColor);\n  ctx.fillStyle = gradient;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nclass PriceAxisViewRenderer {\n  constructor(data, commonData) {\n    this._internal_setData(data, commonData);\n  }\n  _internal_setData(data, commonData) {\n    this._private__data = data;\n    this._private__commonData = commonData;\n  }\n  _internal_height(rendererOptions, useSecondLine) {\n    if (!this._private__data._internal_visible) {\n      return 0;\n    }\n    return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n  }\n  _internal_draw(target, rendererOptions, textWidthCache, align) {\n    if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textColor = this._private__data._internal_color;\n    const backgroundColor = this._private__commonData._internal_background;\n    const geometry = target.useBitmapCoordinateSpace(scope => {\n      const ctx = scope.context;\n      ctx.font = rendererOptions._internal_font;\n      const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n      const gb = geom._internal_bitmap;\n      /*\n       draw label. backgroundColor will always be a solid color (no alpha) [see generateContrastColors in color.ts].\n       Therefore we can draw the rounded label using simplified code (drawRoundRectWithBorder) that doesn't need to ensure the background and the border don't overlap.\n      */\n      if (geom._internal_alignRight) {\n        drawRoundRectWithBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, backgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], backgroundColor);\n      } else {\n        drawRoundRectWithBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, backgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], backgroundColor);\n      }\n      // draw tick\n      if (this._private__data._internal_tickVisible) {\n        ctx.fillStyle = textColor;\n        ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n      }\n      // draw separator\n      if (this._private__data._internal_borderVisible) {\n        ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n        ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n      }\n      return geom;\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const gm = geometry._internal_media;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = textColor;\n      ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n    });\n  }\n  _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n    const {\n      context: ctx,\n      bitmapSize,\n      mediaSize,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = scope;\n    const tickSize = this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick ? rendererOptions._internal_tickLength : 0;\n    const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n    const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n    const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n    const paddingInner = rendererOptions._internal_paddingInner;\n    const paddingOuter = rendererOptions._internal_paddingOuter;\n    const text = this._private__data._internal_text;\n    const actualTextHeight = rendererOptions._internal_fontSize;\n    const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n    const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n    const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n    const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n    const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n    let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n    if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n      totalHeightBitmap += 1;\n    }\n    const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n    const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n    // tick overlaps scale border\n    const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n    const yMid = this._private__commonData._internal_fixedCoordinate ?? this._private__commonData._internal_coordinate;\n    const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n    const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n    const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n    const alignRight = align === 'right';\n    const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n    const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n    let xOutsideBitmap;\n    let xTickBitmap;\n    let xText;\n    if (alignRight) {\n      // 2               1\n      //\n      //              6  5\n      //\n      // 3               4\n      xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n      xTickBitmap = xInsideBitmap - tickSizeBitmap;\n      xText = xInside - tickSize - paddingInner - horzBorder;\n    } else {\n      // 1               2\n      //\n      // 6  5\n      //\n      // 4               3\n      xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n      xTickBitmap = xInsideBitmap + tickSizeBitmap;\n      xText = xInside + tickSize + paddingInner;\n    }\n    return {\n      _internal_alignRight: alignRight,\n      _internal_bitmap: {\n        _internal_yTop: yTopBitmap,\n        _internal_yMid: yMidBitmap,\n        _internal_yBottom: yBottomBitmap,\n        _internal_totalWidth: totalWidthBitmap,\n        _internal_totalHeight: totalHeightBitmap,\n        // TODO: it is better to have different horizontal and vertical radii\n        _internal_radius: 2 * horizontalPixelRatio,\n        _internal_horzBorder: horzBorderBitmap,\n        _internal_xOutside: xOutsideBitmap,\n        _internal_xInside: xInsideBitmap,\n        _internal_xTick: xTickBitmap,\n        _internal_tickHeight: tickHeightBitmap,\n        _internal_right: bitmapSize.width\n      },\n      _internal_media: {\n        _internal_yTop: yTopBitmap / verticalPixelRatio,\n        _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n        _internal_xText: xText,\n        _internal_textMidCorrection: textMidCorrection\n      }\n    };\n  }\n}\nclass PriceAxisView {\n  constructor(ctor) {\n    this._private__commonRendererData = {\n      _internal_coordinate: 0,\n      _internal_background: '#000',\n      _internal_additionalPaddingBottom: 0,\n      _internal_additionalPaddingTop: 0\n    };\n    this._private__axisRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: true,\n      _internal_moveTextToInvisibleTick: false,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: false,\n      _internal_separatorVisible: false\n    };\n    this._private__paneRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: false,\n      _internal_moveTextToInvisibleTick: true,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: true,\n      _internal_separatorVisible: true\n    };\n    this._private__invalidated = true;\n    this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n  }\n  _internal_text() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_text;\n  }\n  _internal_coordinate() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__commonRendererData._internal_coordinate;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_height(rendererOptions, useSecondLine = false) {\n    return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n  }\n  _internal_getFixedCoordinate() {\n    return this._private__commonRendererData._internal_fixedCoordinate || 0;\n  }\n  _internal_setFixedCoordinate(value) {\n    this._private__commonRendererData._internal_fixedCoordinate = value;\n  }\n  _internal_isVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n  }\n  _internal_isAxisLabelVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible;\n  }\n  _internal_renderer(priceScale) {\n    this._private__updateRendererDataIfNeeded();\n    // force update tickVisible state from price scale options\n    // because we don't have and we can't have price axis in other methods\n    // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n    this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__axisRenderer;\n  }\n  _internal_paneRenderer() {\n    this._private__updateRendererDataIfNeeded();\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__paneRenderer;\n  }\n  _private__updateRendererDataIfNeeded() {\n    if (this._private__invalidated) {\n      this._private__axisRendererData._internal_tickVisible = true;\n      this._private__paneRendererData._internal_tickVisible = false;\n      this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n    }\n  }\n}\nclass CrosshairPriceAxisView extends PriceAxisView {\n  constructor(source, priceScale, valueProvider) {\n    super();\n    this._private__source = source;\n    this._private__priceScale = priceScale;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n      return;\n    }\n    const options = this._private__source._internal_options().horzLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || firstValue === null) {\n      return;\n    }\n    const colors = this._private__priceScale._internal_colorParser()._internal_generateContrastColors(options.labelBackgroundColor);\n    commonRendererData._internal_background = colors._internal_background;\n    axisRendererData._internal_color = colors._internal_foreground;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    const value = this._private__valueProvider(this._private__priceScale);\n    commonRendererData._internal_coordinate = value._internal_coordinate;\n    axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n    axisRendererData._internal_visible = true;\n  }\n}\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n  constructor() {\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_draw(target, rendererOptions) {\n    if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textWidth = target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      ctx.font = rendererOptions._internal_font;\n      return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n    });\n    if (textWidth <= 0) {\n      return;\n    }\n    const horzMargin = rendererOptions._internal_paddingHorizontal;\n    const labelWidth = textWidth + 2 * horzMargin;\n    const labelWidthHalf = labelWidth / 2;\n    const timeScaleWidth = this._private__data._internal_width;\n    let coordinate = this._private__data._internal_coordinate;\n    let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (x1 < 0) {\n      coordinate = coordinate + Math.abs(0 - x1);\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    } else if (x1 + labelWidth > timeScaleWidth) {\n      coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    }\n    const x2 = x1 + labelWidth;\n    const y1 = 0;\n    const y2 = Math.ceil(y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize + rendererOptions._internal_paddingBottom);\n    target.useBitmapCoordinateSpace(({\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      ctx.fillStyle = data._internal_background;\n      const x1scaled = Math.round(x1 * horizontalPixelRatio);\n      const y1scaled = Math.round(y1 * verticalPixelRatio);\n      const x2scaled = Math.round(x2 * horizontalPixelRatio);\n      const y2scaled = Math.round(y2 * verticalPixelRatio);\n      const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n      ctx.beginPath();\n      ctx.moveTo(x1scaled, y1scaled);\n      ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n      ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n      ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n      ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n      ctx.lineTo(x2scaled, y1scaled);\n      ctx.fill();\n      if (data._internal_tickVisible) {\n        const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n        const tickTop = y1scaled;\n        const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n        ctx.fillStyle = data._internal_color;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n      }\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      const yText = y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = data._internal_color;\n      const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n      ctx.translate(x1 + horzMargin, yText + textYCorrection);\n      ctx.fillText(data._internal_text, 0, 0);\n    });\n  }\n}\nclass CrosshairTimeAxisView {\n  constructor(crosshair, model, valueProvider) {\n    this._private__invalidated = true;\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_background: '#4c525e',\n      _internal_color: 'white',\n      _internal_text: '',\n      _internal_width: 0,\n      _internal_coordinate: NaN,\n      _internal_tickVisible: true\n    };\n    this._private__crosshair = crosshair;\n    this._private__model = model;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    this._private__renderer._internal_setData(this._private__rendererData);\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const data = this._private__rendererData;\n    data._internal_visible = false;\n    if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n      return;\n    }\n    const options = this._private__crosshair._internal_options().vertLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    data._internal_width = timeScale._internal_width();\n    const value = this._private__valueProvider();\n    if (value === null) {\n      return;\n    }\n    data._internal_coordinate = value._internal_coordinate;\n    const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n    data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n    data._internal_visible = true;\n    const colors = this._private__model._internal_colorParser()._internal_generateContrastColors(options.labelBackgroundColor);\n    data._internal_background = colors._internal_background;\n    data._internal_color = colors._internal_foreground;\n    data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n  }\n}\nclass DataSource {\n  constructor() {\n    this._internal__priceScale = null;\n    this._private__zorder = 0;\n  }\n  _internal_zorder() {\n    return this._private__zorder;\n  }\n  _internal_setZorder(zorder) {\n    this._private__zorder = zorder;\n  }\n  _internal_priceScale() {\n    return this._internal__priceScale;\n  }\n  _internal_setPriceScale(priceScale) {\n    this._internal__priceScale = priceScale;\n  }\n  _internal_labelPaneViews(pane) {\n    return [];\n  }\n  _internal_timeAxisViews() {\n    return [];\n  }\n  _internal_visible() {\n    return true;\n  }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n  /**\n   * This mode allows crosshair to move freely on the chart.\n   */\n  CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n   */\n  CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n  /**\n   * This mode disables rendering of the crosshair.\n   */\n  CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__pane = null;\n    this._private__price = NaN;\n    this._private__index = 0;\n    this._private__visible = true;\n    this._private__priceAxisViews = new Map();\n    this._private__subscribed = false;\n    this._private__crosshairPaneViewCache = new WeakMap();\n    this._private__markersPaneViewCache = new WeakMap();\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n    this._private__model = model;\n    this._private__options = options;\n    const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n      return priceScale => {\n        const coordinate = rawCoordinateProvider();\n        const rawPrice = rawPriceProvider();\n        if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n          // price must be defined\n          return {\n            _internal_price: rawPrice,\n            _internal_coordinate: coordinate\n          };\n        } else {\n          // always convert from coordinate\n          const firstValue = ensureNotNull(priceScale._internal_firstValue());\n          const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n          return {\n            _internal_price: price,\n            _internal_coordinate: coordinate\n          };\n        }\n      };\n    };\n    const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n      return () => {\n        const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n        const coordinate = rawCoordinateProvider();\n        if (!time || !Number.isFinite(coordinate)) {\n          return null;\n        }\n        return {\n          _internal_time: time,\n          _internal_coordinate: coordinate\n        };\n      };\n    };\n    // for current position always return both price and coordinate\n    this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n    const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n    this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_saveOriginCoord(x, y) {\n    this._private__originX = x;\n    this._private__originY = y;\n  }\n  _internal_clearOriginCoord() {\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n  }\n  _internal_originCoordX() {\n    return this._private__originX;\n  }\n  _internal_originCoordY() {\n    return this._private__originY;\n  }\n  _internal_setPosition(index, price, pane) {\n    if (!this._private__subscribed) {\n      this._private__subscribed = true;\n    }\n    this._private__visible = true;\n    this._private__tryToUpdateViews(index, price, pane);\n  }\n  _internal_appliedIndex() {\n    return this._private__index;\n  }\n  _internal_appliedX() {\n    return this._private__x;\n  }\n  _internal_appliedY() {\n    return this._private__y;\n  }\n  _internal_visible() {\n    return this._private__visible;\n  }\n  _internal_clearPosition() {\n    this._private__visible = false;\n    this._private__setIndexToLastSeriesBarIndex();\n    this._private__price = NaN;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__pane = null;\n    this._internal_clearOriginCoord();\n    this._internal_updateAllViews();\n  }\n  _internal_paneViews(pane) {\n    let crosshairPaneView = this._private__crosshairPaneViewCache.get(pane);\n    if (!crosshairPaneView) {\n      crosshairPaneView = new CrosshairPaneView(this, pane);\n      this._private__crosshairPaneViewCache.set(pane, crosshairPaneView);\n    }\n    let markersPaneView = this._private__markersPaneViewCache.get(pane);\n    if (!markersPaneView) {\n      markersPaneView = new CrosshairMarksPaneView(this._private__model, this, pane);\n      this._private__markersPaneViewCache.set(pane, markersPaneView);\n    }\n    return [crosshairPaneView, markersPaneView];\n  }\n  _internal_horzLineVisible(pane) {\n    return pane === this._private__pane && this._private__options.horzLine.visible;\n  }\n  _internal_vertLineVisible() {\n    return this._private__options.vertLine.visible;\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (!this._private__visible || this._private__pane !== pane) {\n      this._private__priceAxisViews.clear();\n    }\n    const views = [];\n    if (this._private__pane === pane) {\n      views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n    }\n    return views;\n  }\n  _internal_timeAxisViews() {\n    return this._private__visible ? [this._private__timeAxisView] : [];\n  }\n  _internal_pane() {\n    return this._private__pane;\n  }\n  _internal_updateAllViews() {\n    this._private__model._internal_panes().forEach(pane => {\n      this._private__crosshairPaneViewCache.get(pane)?._internal_update();\n      this._private__markersPaneViewCache.get(pane)?._internal_update();\n    });\n    this._private__priceAxisViews.forEach(value => value._internal_update());\n    this._private__timeAxisView._internal_update();\n  }\n  _private__priceScaleByPane(pane) {\n    if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n      return pane._internal_defaultPriceScale();\n    }\n    return null;\n  }\n  _private__tryToUpdateViews(index, price, pane) {\n    if (this._private__tryToUpdateData(index, price, pane)) {\n      this._internal_updateAllViews();\n    }\n  }\n  _private__tryToUpdateData(newIndex, newPrice, newPane) {\n    const oldX = this._private__x;\n    const oldY = this._private__y;\n    const oldPrice = this._private__price;\n    const oldIndex = this._private__index;\n    const oldPane = this._private__pane;\n    const priceScale = this._private__priceScaleByPane(newPane);\n    this._private__index = newIndex;\n    this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n    this._private__pane = newPane;\n    const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n    if (priceScale !== null && firstValue !== null) {\n      this._private__price = newPrice;\n      this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n    } else {\n      this._private__price = NaN;\n      this._private__y = NaN;\n    }\n    return oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index || oldPrice !== this._private__price || oldPane !== this._private__pane;\n  }\n  _private__setIndexToLastSeriesBarIndex() {\n    const lastIndexes = this._private__model._internal_serieses().map(s => s._internal_bars()._internal_lastIndex()).filter(notNull);\n    const lastBarIndex = lastIndexes.length === 0 ? null : Math.max(...lastIndexes);\n    this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n  }\n  _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n    let view = map.get(priceScale);\n    if (view === undefined) {\n      view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n      map.set(priceScale, view);\n    }\n    return view;\n  }\n}\nfunction isDefaultPriceScale(priceScaleId) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n  return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\nfunction mergePaneInvalidation(beforeValue, newValue) {\n  if (beforeValue === undefined) {\n    return newValue;\n  }\n  const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n  const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n  return {\n    _internal_level: level,\n    _internal_autoScale: autoScale\n  };\n}\nclass InvalidateMask {\n  constructor(globalLevel) {\n    this._private__invalidatedPanes = new Map();\n    this._private__timeScaleInvalidations = [];\n    this._private__globalLevel = globalLevel;\n  }\n  _internal_invalidatePane(paneIndex, invalidation) {\n    const prevValue = this._private__invalidatedPanes.get(paneIndex);\n    const newValue = mergePaneInvalidation(prevValue, invalidation);\n    this._private__invalidatedPanes.set(paneIndex, newValue);\n  }\n  _internal_fullInvalidation() {\n    return this._private__globalLevel;\n  }\n  _internal_invalidateForPane(paneIndex) {\n    const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n    if (paneInvalidation === undefined) {\n      return {\n        _internal_level: this._private__globalLevel\n      };\n    }\n    return {\n      _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n      _internal_autoScale: paneInvalidation._internal_autoScale\n    };\n  }\n  _internal_setFitContent() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 0 /* TimeScaleInvalidationType.FitContent */\n    }];\n  }\n  _internal_applyRange(range) {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */,\n      _internal_value: range\n    }];\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 5 /* TimeScaleInvalidationType.Animation */,\n      _internal_value: animation\n    });\n  }\n  _internal_stopTimeScaleAnimation() {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */\n    });\n  }\n  _internal_resetTimeScale() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 4 /* TimeScaleInvalidationType.Reset */\n    }];\n  }\n  _internal_setBarSpacing(barSpacing) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */,\n      _internal_value: barSpacing\n    });\n  }\n  _internal_setRightOffset(offset) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */,\n      _internal_value: offset\n    });\n  }\n  _internal_timeScaleInvalidations() {\n    return this._private__timeScaleInvalidations;\n  }\n  _internal_merge(other) {\n    for (const tsInvalidation of other._private__timeScaleInvalidations) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation);\n    }\n    this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n    other._private__invalidatedPanes.forEach((invalidation, index) => {\n      this._internal_invalidatePane(index, invalidation);\n    });\n  }\n  static _internal_light() {\n    return new InvalidateMask(2 /* InvalidationLevel.Light */);\n  }\n  static _internal_full() {\n    return new InvalidateMask(3 /* InvalidationLevel.Full */);\n  }\n  _private__applyTimeScaleInvalidation(invalidation) {\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        this._internal_setFitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        this._internal_applyRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        this._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        this._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        this._internal_resetTimeScale();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        this._internal_setTimeScaleAnimation(invalidation._internal_value);\n        break;\n      case 6 /* TimeScaleInvalidationType.StopAnimation */:\n        this._private__removeTimeScaleAnimation();\n    }\n  }\n  _private__removeTimeScaleAnimation() {\n    const index = this._private__timeScaleInvalidations.findIndex(inv => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n    if (index !== -1) {\n      this._private__timeScaleInvalidations.splice(index, 1);\n    }\n  }\n}\nconst formatterOptions = {\n  _internal_decimalSign: '.',\n  _internal_decimalSignFractional: '\\''\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n  if (!isNumber(value)) {\n    return 'n/a';\n  }\n  if (!isInteger(length)) {\n    throw new TypeError('invalid length');\n  }\n  if (length < 0 || length > 16) {\n    throw new TypeError('invalid length');\n  }\n  if (length === 0) {\n    return value.toString();\n  }\n  const dummyString = '0000000000000000';\n  return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n  constructor(priceScale, minMove) {\n    if (!minMove) {\n      minMove = 1;\n    }\n    if (!isNumber(priceScale) || !isInteger(priceScale)) {\n      priceScale = 100;\n    }\n    if (priceScale < 0) {\n      throw new TypeError('invalid base');\n    }\n    this._private__priceScale = priceScale;\n    this._private__minMove = minMove;\n    this._private__calculateDecimal();\n  }\n  format(price) {\n    // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n    // we should use it because it has the same width as plus sign +\n    const sign = price < 0 ? '\\u2212' : '';\n    price = Math.abs(price);\n    return sign + this._private__formatAsDecimal(price);\n  }\n  _private__calculateDecimal() {\n    // check if this._base is power of 10\n    // for double fractional _fractionalLength if for the main fractional only\n    this._internal__fractionalLength = 0;\n    if (this._private__priceScale > 0 && this._private__minMove > 0) {\n      let base = this._private__priceScale;\n      while (base > 1) {\n        base /= 10;\n        this._internal__fractionalLength++;\n      }\n    }\n  }\n  _private__formatAsDecimal(price) {\n    const base = this._private__priceScale / this._private__minMove;\n    let intPart = Math.floor(price);\n    let fracString = '';\n    const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n    if (base > 1) {\n      let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n      if (fracPart >= base) {\n        fracPart -= base;\n        intPart += 1;\n      }\n      fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n    } else {\n      // should round int part to min move\n      intPart = Math.round(intPart * base) / base;\n      // if min move > 1, fractional part is always = 0\n      if (fracLength > 0) {\n        fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n      }\n    }\n    return intPart.toFixed(0) + fracString;\n  }\n}\nclass PercentageFormatter extends PriceFormatter {\n  constructor(priceScale = 100) {\n    super(priceScale);\n  }\n  format(price) {\n    return `${super.format(price)}%`;\n  }\n}\nclass VolumeFormatter {\n  constructor(precision) {\n    this._private__precision = precision;\n  }\n  format(vol) {\n    let sign = '';\n    if (vol < 0) {\n      sign = '-';\n      vol = -vol;\n    }\n    if (vol < 995) {\n      return sign + this._private__formatNumber(vol);\n    } else if (vol < 999995) {\n      return sign + this._private__formatNumber(vol / 1000) + 'K';\n    } else if (vol < 999999995) {\n      vol = 1000 * Math.round(vol / 1000);\n      return sign + this._private__formatNumber(vol / 1000000) + 'M';\n    } else {\n      vol = 1000000 * Math.round(vol / 1000000);\n      return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n    }\n  }\n  _private__formatNumber(value) {\n    let res;\n    const priceScale = Math.pow(10, this._private__precision);\n    value = Math.round(value * priceScale) / priceScale;\n    if (value >= 1e-15 && value < 1) {\n      res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n    } else {\n      res = String(value);\n    }\n    return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n  }\n}\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n  constructor(size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n    this._private__cache = new Map();\n    this._private__maxSize = size;\n  }\n  _internal_reset() {\n    this._private__actualSize = 0;\n    this._private__cache.clear();\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n  }\n  _internal_measureText(ctx, text, optimizationReplacementRe) {\n    return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n  }\n  _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n    const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n    // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n    return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n  }\n  _private__getMetrics(ctx, text, optimizationReplacementRe) {\n    const re = optimizationReplacementRe || defaultReplacementRe;\n    const cacheString = String(text).replace(re, '0');\n    if (this._private__cache.has(cacheString)) {\n      return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n      delete this._private__tick2Labels[this._private__oldestTick];\n      this._private__cache.delete(oldestValue);\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    const metrics = ctx.measureText(cacheString);\n    ctx.restore();\n    if (metrics.width === 0 && !!text.length) {\n      // measureText can return 0 in FF depending on a canvas size, don't cache it\n      return metrics;\n    }\n    this._private__cache.set(cacheString, {\n      _internal_metrics: metrics,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels[this._private__usageTick] = cacheString;\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return metrics;\n  }\n}\nclass PanePriceAxisViewRenderer {\n  constructor(textWidthCache) {\n    this._private__priceAxisViewRenderer = null;\n    this._private__rendererOptions = null;\n    this._private__align = 'right';\n    this._private__textWidthCache = textWidthCache;\n  }\n  _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n    this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n    this._private__rendererOptions = rendererOptions;\n    this._private__align = align;\n  }\n  _internal_draw(target) {\n    if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n      return;\n    }\n    this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n  }\n}\nclass PanePriceAxisView {\n  constructor(priceAxisView, dataSource, chartModel) {\n    this._private__priceAxisView = priceAxisView;\n    this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n    this._private__dataSource = dataSource;\n    this._private__chartModel = chartModel;\n    this._private__fontSize = -1;\n    this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n  }\n  _internal_renderer() {\n    const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n    if (pane === null) {\n      return null;\n    }\n    // this price scale will be used to find label placement only (left, right, none)\n    const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n    if (priceScale === null) {\n      return null;\n    }\n    const position = pane._internal_priceScalePosition(priceScale);\n    if (position === 'overlay') {\n      return null;\n    }\n    const options = this._private__chartModel._internal_priceAxisRendererOptions();\n    if (options._internal_fontSize !== this._private__fontSize) {\n      this._private__fontSize = options._internal_fontSize;\n      this._private__textWidthCache._internal_reset();\n    }\n    this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n    return this._private__renderer;\n  }\n}\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_hitTest(x, y) {\n    if (!this._private__data?._internal_visible) {\n      return null;\n    }\n    const {\n      _internal_y: itemY,\n      _internal_lineWidth: lineWidth,\n      _internal_externalId: externalId\n    } = this._private__data;\n    // add a fixed area threshold around line (Y + width) for hit test\n    if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n      return {\n        _internal_hitTestData: this._private__data,\n        _internal_externalId: externalId\n      };\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    if (this._private__data._internal_visible === false) {\n      return;\n    }\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    if (y < 0 || y > bitmapSize.height) {\n      return;\n    }\n    ctx.lineCap = 'butt';\n    ctx.strokeStyle = this._private__data._internal_color;\n    ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n    setLineStyle(ctx, this._private__data._internal_lineStyle);\n    drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n  }\n}\nclass SeriesHorizontalLinePaneView {\n  constructor(series) {\n    this._internal__lineRendererData = {\n      _internal_y: 0,\n      _internal_color: 'rgba(0, 0, 0, 0)',\n      _internal_lineWidth: 1,\n      _internal_lineStyle: 0 /* LineStyle.Solid */,\n      _internal_visible: false\n    };\n    this._internal__lineRenderer = new HorizontalLineRenderer();\n    this._private__invalidated = true;\n    this._internal__series = series;\n    this._internal__model = series._internal_model();\n    this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._internal__lineRenderer;\n  }\n}\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    this._internal__lineRendererData._internal_visible = false;\n    const priceScale = this._internal__series._internal_priceScale();\n    const mode = priceScale._internal_mode()._internal_mode;\n    if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n      return;\n    }\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__lineRendererData._internal_visible = true;\n    this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n    this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n    this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n    this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n  }\n}\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_data() {\n    return this._private__data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    const data = this._private__data;\n    if (data === null) {\n      return;\n    }\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = tickWidth % 2 / 2;\n    const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n    const centerY = data._internal_center.y * verticalPixelRatio;\n    ctx.fillStyle = data._internal_seriesLineColor;\n    ctx.beginPath();\n    // TODO: it is better to have different horizontal and vertical radii\n    const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n    ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.fillStyle = data._internal_fillColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = tickWidth;\n    ctx.strokeStyle = data._internal_strokeColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n  }\n}\nconst animationStagesData = [{\n  _internal_start: 0,\n  _internal_end: 0.25 /* Constants.Stage1Period */,\n  _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n  _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n  _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n  _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n  _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */\n}];\nfunction radius(stage, startRadius, endRadius) {\n  return startRadius + (endRadius - startRadius) * stage;\n}\nclass SeriesLastPriceAnimationPaneView {\n  constructor(series) {\n    this._private__renderer = new SeriesLastPriceAnimationRenderer();\n    this._private__invalidated = true;\n    this._private__stageInvalidated = true;\n    this._private__startTime = performance.now();\n    this._private__endTime = this._private__startTime - 1;\n    this._private__series = series;\n  }\n  _internal_onDataCleared() {\n    this._private__endTime = this._private__startTime - 1;\n    this._internal_update();\n  }\n  _internal_onNewRealtimeDataReceived() {\n    this._internal_update();\n    if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n      const now = performance.now();\n      const timeToAnimationEnd = this._private__endTime - now;\n      if (timeToAnimationEnd > 0) {\n        if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n          this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n        }\n        return;\n      }\n      this._private__startTime = now;\n      this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n    }\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_invalidateStage() {\n    this._private__stageInvalidated = true;\n  }\n  _internal_visible() {\n    // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n    return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n  }\n  _internal_animationActive() {\n    switch (this._private__series._internal_options().lastPriceAnimation) {\n      case 0 /* LastPriceAnimationMode.Disabled */:\n        return false;\n      case 1 /* LastPriceAnimationMode.Continuous */:\n        return true;\n      case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n        return performance.now() <= this._private__endTime;\n    }\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n      this._private__stageInvalidated = false;\n    } else if (this._private__stageInvalidated) {\n      this._private__updateRendererDataStage();\n      this._private__stageInvalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    this._private__renderer._internal_setData(null);\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const visibleRange = timeScale._internal_visibleStrictRange();\n    const firstValue = this._private__series._internal_firstValue();\n    if (visibleRange === null || firstValue === null) {\n      return;\n    }\n    const lastValue = this._private__series._internal_lastValueData(true);\n    if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n      return;\n    }\n    const lastValuePoint = {\n      x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n      y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value)\n    };\n    const seriesLineColor = lastValue._internal_color;\n    const seriesLineWidth = this._private__series._internal_options().lineWidth;\n    const data = this._private__animationData(this._private__duration(), seriesLineColor);\n    this._private__renderer._internal_setData({\n      _internal_seriesLineColor: seriesLineColor,\n      _internal_seriesLineWidth: seriesLineWidth,\n      _internal_fillColor: data._internal_fillColor,\n      _internal_strokeColor: data._internal_strokeColor,\n      _internal_radius: data._internal_radius,\n      _internal_center: lastValuePoint\n    });\n  }\n  _private__updateRendererDataStage() {\n    const rendererData = this._private__renderer._internal_data();\n    if (rendererData !== null) {\n      const data = this._private__animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n      rendererData._internal_fillColor = data._internal_fillColor;\n      rendererData._internal_strokeColor = data._internal_strokeColor;\n      rendererData._internal_radius = data._internal_radius;\n    }\n  }\n  _private__duration() {\n    return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n  }\n  _private__color(seriesLineColor, stage, startAlpha, endAlpha) {\n    const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n    return this._private__series._internal_model()._internal_colorParser()._internal_applyAlpha(seriesLineColor, alpha);\n  }\n  _private__animationData(durationSinceStart, lineColor) {\n    const globalStage = durationSinceStart % 2600 /* Constants.AnimationPeriod */ / 2600 /* Constants.AnimationPeriod */;\n    let currentStageData;\n    for (const stageData of animationStagesData) {\n      if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n        currentStageData = stageData;\n        break;\n      }\n    }\n    assert(currentStageData !== undefined, 'Last price animation internal logic error');\n    const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n    return {\n      _internal_fillColor: this._private__color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n      _internal_strokeColor: this._private__color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n      _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius)\n    };\n  }\n}\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = lastValueData._internal_coordinate;\n    data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n    data._internal_lineWidth = seriesOptions.priceLineWidth;\n    data._internal_lineStyle = seriesOptions.priceLineStyle;\n  }\n}\nclass SeriesPriceAxisView extends PriceAxisView {\n  constructor(source) {\n    super();\n    this._private__source = source;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const source = this._private__source;\n    if (!source._internal_visible()) {\n      return;\n    }\n    const seriesOptions = source._internal_options();\n    const showSeriesLastValue = seriesOptions.lastValueVisible;\n    const showSymbolLabel = source._internal_title() !== '';\n    const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n    const lastValueData = source._internal_lastValueData(false);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    if (showSeriesLastValue) {\n      axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n      axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n    }\n    if (showSymbolLabel || showPriceAndPercentage) {\n      paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n      paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n    }\n    const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n    const colors = this._private__source._internal_model()._internal_colorParser()._internal_generateContrastColors(lastValueColor);\n    commonRendererData._internal_background = colors._internal_background;\n    commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n    paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n    axisRendererData._internal_borderColor = lastValueColor;\n    axisRendererData._internal_color = colors._internal_foreground;\n    paneRendererData._internal_color = colors._internal_foreground;\n  }\n  _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n    let result = '';\n    const title = this._private__source._internal_title();\n    if (showSymbolLabel && title.length !== 0) {\n      result += `${title} `;\n    }\n    if (showSeriesLastValue && showPriceAndPercentage) {\n      result += this._private__source._internal_priceScale()._internal_isPercentage() ? lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n    }\n    return result.trim();\n  }\n  _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n    if (!showSeriesLastValue) {\n      return '';\n    }\n    if (!showPriceAndPercentage) {\n      return lastValueData._internal_text;\n    }\n    return this._private__source._internal_priceScale()._internal_isPercentage() ? lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n  }\n}\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n  const firstFinite = Number.isFinite(valueOne);\n  const secondFinite = Number.isFinite(valueTwo);\n  if (firstFinite && secondFinite) {\n    return method(valueOne, valueTwo);\n  }\n  return !firstFinite && !secondFinite ? fallback : firstFinite ? valueOne : valueTwo;\n}\nclass PriceRangeImpl {\n  constructor(minValue, maxValue) {\n    this._private__minValue = minValue;\n    this._private__maxValue = maxValue;\n  }\n  _internal_equals(pr) {\n    if (pr === null) {\n      return false;\n    }\n    return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n  }\n  _internal_clone() {\n    return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n  }\n  _internal_minValue() {\n    return this._private__minValue;\n  }\n  _internal_maxValue() {\n    return this._private__maxValue;\n  }\n  _internal_length() {\n    return this._private__maxValue - this._private__minValue;\n  }\n  _internal_isEmpty() {\n    return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n  }\n  _internal_merge(anotherRange) {\n    if (anotherRange === null) {\n      return this;\n    }\n    return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n  }\n  _internal_scaleAroundCenter(coeff) {\n    if (!isNumber(coeff)) {\n      return;\n    }\n    const delta = this._private__maxValue - this._private__minValue;\n    if (delta === 0) {\n      return;\n    }\n    const center = (this._private__maxValue + this._private__minValue) * 0.5;\n    let maxDelta = this._private__maxValue - center;\n    let minDelta = this._private__minValue - center;\n    maxDelta *= coeff;\n    minDelta *= coeff;\n    this._private__maxValue = center + maxDelta;\n    this._private__minValue = center + minDelta;\n  }\n  _internal_shift(delta) {\n    if (!isNumber(delta)) {\n      return;\n    }\n    this._private__maxValue += delta;\n    this._private__minValue += delta;\n  }\n  _internal_toRaw() {\n    return {\n      minValue: this._private__minValue,\n      maxValue: this._private__maxValue\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n  }\n}\nclass AutoscaleInfoImpl {\n  constructor(priceRange, margins) {\n    this._private__priceRange = priceRange;\n    this._private__margins = margins || null;\n  }\n  _internal_priceRange() {\n    return this._private__priceRange;\n  }\n  _internal_margins() {\n    return this._private__margins;\n  }\n  _internal_toRaw() {\n    return {\n      priceRange: this._private__priceRange === null ? null : this._private__priceRange._internal_toRaw(),\n      margins: this._private__margins || undefined\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n  }\n}\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  constructor(series, priceLine) {\n    super(series);\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const lineOptions = this._private__priceLine._internal_options();\n    if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = y;\n    data._internal_color = lineOptions.color;\n    data._internal_lineWidth = lineOptions.lineWidth;\n    data._internal_lineStyle = lineOptions.lineStyle;\n    data._internal_externalId = this._private__priceLine._internal_options().id;\n  }\n}\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n  constructor(series, priceLine) {\n    super();\n    this._private__series = series;\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const options = this._private__priceLine._internal_options();\n    const labelVisible = options.axisLabelVisible;\n    const showPaneLabel = options.title !== '';\n    const series = this._private__series;\n    if (!labelVisible || !series._internal_visible()) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    if (showPaneLabel) {\n      paneRendererData._internal_text = options.title;\n      paneRendererData._internal_visible = true;\n    }\n    paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n    axisRendererData._internal_text = this._private__formatPrice(options.price);\n    axisRendererData._internal_visible = true;\n    const colors = this._private__series._internal_model()._internal_colorParser()._internal_generateContrastColors(options.axisLabelColor || options.color);\n    commonData._internal_background = colors._internal_background;\n    const textColor = options.axisLabelTextColor || colors._internal_foreground;\n    axisRendererData._internal_color = textColor; // price text\n    paneRendererData._internal_color = textColor; // title text\n    commonData._internal_coordinate = y;\n  }\n  _private__formatPrice(price) {\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return '';\n    }\n    return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n  }\n}\nclass CustomPriceLine {\n  constructor(series, options) {\n    this._private__series = series;\n    this._private__options = options;\n    this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n    this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n    this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_update();\n    this._private__series._internal_model()._internal_lightUpdate();\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneView() {\n    return this._private__priceLineView;\n  }\n  _internal_labelPaneView() {\n    return this._private__panePriceAxisView;\n  }\n  _internal_priceAxisView() {\n    return this._private__priceAxisView;\n  }\n  _internal_update() {\n    this._private__priceLineView._internal_update();\n    this._private__priceAxisView._internal_update();\n  }\n  _internal_yCoord() {\n    const series = this._private__series;\n    const priceScale = series._internal_priceScale();\n    const timeScale = series._internal_model()._internal_timeScale();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return null;\n    }\n    const firstValue = series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n  }\n}\nclass PriceDataSource extends DataSource {\n  constructor(model) {\n    super();\n    this._private__model = model;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n}\nconst barStyleFnMap = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n    const upColor = barStyle.upColor;\n    const downColor = barStyle.downColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: currentBar._internal_color ?? (isUp ? upColor : downColor)\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n    const upColor = candlestickStyle.upColor;\n    const downColor = candlestickStyle.downColor;\n    const borderUpColor = candlestickStyle.borderUpColor;\n    const borderDownColor = candlestickStyle.borderDownColor;\n    const wickUpColor = candlestickStyle.wickUpColor;\n    const wickDownColor = candlestickStyle.wickDownColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: currentBar._internal_color ?? (isUp ? upColor : downColor),\n      _internal_barBorderColor: currentBar._internal_borderColor ?? (isUp ? borderUpColor : borderDownColor),\n      _internal_barWickColor: currentBar._internal_wickColor ?? (isUp ? wickUpColor : wickDownColor)\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: currentBar._internal_color ?? customStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: currentBar._internal_lineColor ?? areaStyle.lineColor,\n      _internal_lineColor: currentBar._internal_lineColor ?? areaStyle.lineColor,\n      _internal_topColor: currentBar._internal_topColor ?? areaStyle.topColor,\n      _internal_bottomColor: currentBar._internal_bottomColor ?? areaStyle.bottomColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n    return {\n      _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n      _internal_topLineColor: currentBar._internal_topLineColor ?? baselineStyle.topLineColor,\n      _internal_bottomLineColor: currentBar._internal_bottomLineColor ?? baselineStyle.bottomLineColor,\n      _internal_topFillColor1: currentBar._internal_topFillColor1 ?? baselineStyle.topFillColor1,\n      _internal_topFillColor2: currentBar._internal_topFillColor2 ?? baselineStyle.topFillColor2,\n      _internal_bottomFillColor1: currentBar._internal_bottomFillColor1 ?? baselineStyle.bottomFillColor1,\n      _internal_bottomFillColor2: currentBar._internal_bottomFillColor2 ?? baselineStyle.bottomFillColor2\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: currentBar._internal_color ?? lineStyle.color,\n      _internal_lineColor: currentBar._internal_color ?? lineStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: currentBar._internal_color ?? histogramStyle.color\n    };\n  }\n};\nclass SeriesBarColorer {\n  constructor(series) {\n    this._private__findBar = (barIndex, precomputedBars) => {\n      if (precomputedBars !== undefined) {\n        return precomputedBars._internal_value;\n      }\n      return this._private__series._internal_bars()._internal_valueAt(barIndex);\n    };\n    this._private__series = series;\n    this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n  }\n  _internal_barStyle(barIndex, precomputedBars) {\n    // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n    // Used to avoid binary search if bars are already known\n    return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n  }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n  let count = to - start;\n  while (0 < count) {\n    const count2 = count >> 1;\n    const mid = start + count2;\n    if (compare(arr[mid], value) === lower) {\n      start = mid + 1;\n      count -= count2 + 1;\n    } else {\n      count = count2;\n    }\n  }\n  return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n  /**\n   * Search the nearest left item\n   */\n  MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n  /**\n   * Do not search\n   */\n  MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n  /**\n   * Search the nearest right item\n   */\n  MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n  constructor() {\n    this._private__items = [];\n    this._private__minMaxCache = new Map();\n    this._private__rowSearchCache = new Map();\n    this._private__indices = [];\n  }\n  // @returns Last row\n  _internal_last() {\n    return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n  }\n  _internal_firstIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n  }\n  _internal_lastIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(this._private__items.length - 1) : null;\n  }\n  _internal_size() {\n    return this._private__items.length;\n  }\n  _internal_isEmpty() {\n    return this._internal_size() === 0;\n  }\n  _internal_contains(index) {\n    return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n  }\n  _internal_valueAt(index) {\n    return this._internal_search(index);\n  }\n  _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n    const pos = this._private__search(index, searchMode);\n    if (pos === null) {\n      return null;\n    }\n    return {\n      ...this._private__valueAt(pos),\n      _internal_index: this._private__indexAt(pos)\n    };\n  }\n  _internal_rows() {\n    return this._private__items;\n  }\n  _internal_minMaxOnRangeCached(start, end, plots) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    for (const plot of plots) {\n      const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n  _internal_setData(plotRows) {\n    this._private__rowSearchCache.clear();\n    this._private__minMaxCache.clear();\n    this._private__items = plotRows;\n    this._private__indices = plotRows.map(plotRow => plotRow._internal_index);\n  }\n  // TimePointIndex values for fulfilled data points\n  _internal_indices() {\n    return this._private__indices;\n  }\n  _private__indexAt(offset) {\n    return this._private__items[offset]._internal_index;\n  }\n  _private__valueAt(offset) {\n    return this._private__items[offset];\n  }\n  _private__search(index, searchMode) {\n    const exactPos = this._private__bsearch(index);\n    if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n      switch (searchMode) {\n        case -1 /* MismatchDirection.NearestLeft */:\n          return this._private__searchNearestLeft(index);\n        case 1 /* MismatchDirection.NearestRight */:\n          return this._private__searchNearestRight(index);\n        default:\n          throw new TypeError('Unknown search mode');\n      }\n    }\n    return exactPos;\n  }\n  _private__searchNearestLeft(index) {\n    let nearestLeftPos = this._private__lowerbound(index);\n    if (nearestLeftPos > 0) {\n      nearestLeftPos = nearestLeftPos - 1;\n    }\n    return nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index ? nearestLeftPos : null;\n  }\n  _private__searchNearestRight(index) {\n    const nearestRightPos = this._private__upperbound(index);\n    return nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos) ? nearestRightPos : null;\n  }\n  _private__bsearch(index) {\n    const start = this._private__lowerbound(index);\n    if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n      return start;\n    }\n    return null;\n  }\n  _private__lowerbound(index) {\n    return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n  }\n  _private__upperbound(index) {\n    return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n  }\n  _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n    let result = null;\n    for (let i = startIndex; i < endIndexExclusive; i++) {\n      const values = this._private__items[i]._internal_value;\n      const v = values[plotIndex];\n      if (Number.isNaN(v)) {\n        continue;\n      }\n      if (result === null) {\n        result = {\n          _internal_min: v,\n          _internal_max: v\n        };\n      } else {\n        if (v < result._internal_min) {\n          result._internal_min = v;\n        }\n        if (v > result._internal_max) {\n          result._internal_max = v;\n        }\n      }\n    }\n    return result;\n  }\n  _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    // assume that bar indexes only increase\n    const firstIndex = ensureNotNull(this._internal_firstIndex());\n    const lastIndex = ensureNotNull(this._internal_lastIndex());\n    const s = Math.max(start, firstIndex);\n    const e = Math.min(end, lastIndex);\n    const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n    const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n    {\n      const startIndex = this._private__lowerbound(s);\n      const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    let minMaxCache = this._private__minMaxCache.get(plotIndex);\n    if (minMaxCache === undefined) {\n      minMaxCache = new Map();\n      this._private__minMaxCache.set(plotIndex, minMaxCache);\n    }\n    // now go cached\n    for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n      const chunkIndex = Math.floor(c / CHUNK_SIZE);\n      let chunkMinMax = minMaxCache.get(chunkIndex);\n      if (chunkMinMax === undefined) {\n        const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n        const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n        chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n        minMaxCache.set(chunkIndex, chunkMinMax);\n      }\n      result = mergeMinMax(result, chunkMinMax);\n    }\n    // tail\n    {\n      const startIndex = this._private__lowerbound(cachedHigh);\n      const endIndex = this._private__upperbound(e); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n}\nfunction mergeMinMax(first, second) {\n  if (first === null) {\n    return second;\n  } else {\n    if (second === null) {\n      return first;\n    } else {\n      // merge MinMax values\n      const min = Math.min(first._internal_min, second._internal_min);\n      const max = Math.max(first._internal_max, second._internal_max);\n      return {\n        _internal_min: min,\n        _internal_max: max\n      };\n    }\n  }\n}\nfunction createSeriesPlotList() {\n  return new PlotList();\n}\nclass PrimitiveRendererWrapper {\n  constructor(baseRenderer) {\n    this._private__baseRenderer = baseRenderer;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__baseRenderer.draw(target);\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    this._private__baseRenderer.drawBackground?.(target);\n  }\n}\nclass PrimitivePaneViewWrapper {\n  constructor(paneView) {\n    this._private__cache = null;\n    this._private__paneView = paneView;\n  }\n  _internal_renderer() {\n    const baseRenderer = this._private__paneView.renderer();\n    if (baseRenderer === null) {\n      return null;\n    }\n    if (this._private__cache?._internal_base === baseRenderer) {\n      return this._private__cache._internal_wrapper;\n    }\n    const wrapper = new PrimitiveRendererWrapper(baseRenderer);\n    this._private__cache = {\n      _internal_base: baseRenderer,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_zOrder() {\n    return this._private__paneView.zOrder?.() ?? 'normal';\n  }\n}\nclass PrimitiveWrapper {\n  constructor(primitive) {\n    this._private__paneViewsCache = null;\n    this._internal__primitive = primitive;\n  }\n  _internal_primitive() {\n    return this._internal__primitive;\n  }\n  _internal_updateAllViews() {\n    this._internal__primitive.updateAllViews?.();\n  }\n  _internal_paneViews() {\n    const base = this._internal__primitive.paneViews?.() ?? [];\n    if (this._private__paneViewsCache?._internal_base === base) {\n      return this._private__paneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new PrimitivePaneViewWrapper(pw));\n    this._private__paneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_hitTest(x, y) {\n    return this._internal__primitive.hitTest?.(x, y) ?? null;\n  }\n}\nlet PanePrimitiveWrapper$1 = class PanePrimitiveWrapper extends PrimitiveWrapper {\n  _internal_labelPaneViews() {\n    return [];\n  }\n};\nclass SeriesPrimitiveRendererWrapper {\n  constructor(baseRenderer) {\n    this._private__baseRenderer = baseRenderer;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__baseRenderer.draw(target);\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    this._private__baseRenderer.drawBackground?.(target);\n  }\n}\nclass SeriesPrimitivePaneViewWrapper {\n  constructor(paneView) {\n    this._private__cache = null;\n    this._private__paneView = paneView;\n  }\n  _internal_renderer() {\n    const baseRenderer = this._private__paneView.renderer();\n    if (baseRenderer === null) {\n      return null;\n    }\n    if (this._private__cache?._internal_base === baseRenderer) {\n      return this._private__cache._internal_wrapper;\n    }\n    const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n    this._private__cache = {\n      _internal_base: baseRenderer,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_zOrder() {\n    return this._private__paneView.zOrder?.() ?? 'normal';\n  }\n}\nfunction getAxisViewData(baseView) {\n  return {\n    _internal_text: baseView.text(),\n    _internal_coordinate: baseView.coordinate(),\n    _internal_fixedCoordinate: baseView.fixedCoordinate?.(),\n    _internal_color: baseView.textColor(),\n    _internal_background: baseView.backColor(),\n    _internal_visible: baseView.visible?.() ?? true,\n    _internal_tickVisible: baseView.tickVisible?.() ?? true\n  };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n  constructor(baseView, timeScale) {\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__baseView = baseView;\n    this._private__timeScale = timeScale;\n  }\n  _internal_renderer() {\n    this._private__renderer._internal_setData({\n      _internal_width: this._private__timeScale._internal_width(),\n      ...getAxisViewData(this._private__baseView)\n    });\n    return this._private__renderer;\n  }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n  constructor(baseView, priceScale) {\n    super();\n    this._private__baseView = baseView;\n    this._private__priceScale = priceScale;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    const data = getAxisViewData(this._private__baseView);\n    commonRendererData._internal_background = data._internal_background;\n    axisRendererData._internal_color = data._internal_color;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    commonRendererData._internal_coordinate = data._internal_coordinate;\n    commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n    axisRendererData._internal_text = data._internal_text;\n    axisRendererData._internal_visible = data._internal_visible;\n    axisRendererData._internal_tickVisible = data._internal_tickVisible;\n  }\n}\nclass SeriesPrimitiveWrapper extends PrimitiveWrapper {\n  constructor(primitive, series) {\n    super(primitive);\n    this._private__timeAxisViewsCache = null;\n    this._private__priceAxisViewsCache = null;\n    this._private__priceAxisPaneViewsCache = null;\n    this._private__timeAxisPaneViewsCache = null;\n    this._private__series = series;\n  }\n  _internal_timeAxisViews() {\n    const base = this._internal__primitive.timeAxisViews?.() ?? [];\n    if (this._private__timeAxisViewsCache?._internal_base === base) {\n      return this._private__timeAxisViewsCache._internal_wrapper;\n    }\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const wrapper = base.map(aw => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n    this._private__timeAxisViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_priceAxisViews() {\n    const base = this._internal__primitive.priceAxisViews?.() ?? [];\n    if (this._private__priceAxisViewsCache?._internal_base === base) {\n      return this._private__priceAxisViewsCache._internal_wrapper;\n    }\n    const priceScale = this._private__series._internal_priceScale();\n    const wrapper = base.map(aw => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n    this._private__priceAxisViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_priceAxisPaneViews() {\n    const base = this._internal__primitive.priceAxisPaneViews?.() ?? [];\n    if (this._private__priceAxisPaneViewsCache?._internal_base === base) {\n      return this._private__priceAxisPaneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__priceAxisPaneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_timeAxisPaneViews() {\n    const base = this._internal__primitive.timeAxisPaneViews?.() ?? [];\n    if (this._private__timeAxisPaneViewsCache?._internal_base === base) {\n      return this._private__timeAxisPaneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__timeAxisPaneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    return this._internal__primitive.autoscaleInfo?.(startTimePoint, endTimePoint) ?? null;\n  }\n}\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n  primitives.forEach(wrapper => {\n    extractor(wrapper).forEach(paneView => {\n      if (paneView._internal_zOrder() !== zOrder) {\n        return;\n      }\n      destination.push(paneView);\n    });\n  });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n  return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n  return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n  return wrapper._internal_timeAxisPaneViews();\n}\nconst lineBasedSeries = ['Area', 'Line', 'Baseline'];\nclass Series extends PriceDataSource {\n  constructor(model, seriesType, options, createPaneView, customPaneView) {\n    super(model);\n    this._private__data = createSeriesPlotList();\n    this._private__priceLineView = new SeriesPriceLinePaneView(this);\n    this._private__customPriceLines = [];\n    this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n    this._private__lastPriceAnimationPaneView = null;\n    this._private__barColorerCache = null;\n    this._private__animationTimeoutId = null;\n    this._private__primitives = [];\n    this._private__options = options;\n    this._private__seriesType = seriesType;\n    const priceAxisView = new SeriesPriceAxisView(this);\n    this._private__priceAxisViews = [priceAxisView];\n    this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n    if (lineBasedSeries.includes(this._private__seriesType)) {\n      this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n    }\n    this._private__recreateFormatter();\n    this._private__paneView = createPaneView(this, this._internal_model(), customPaneView);\n  }\n  _internal_destroy() {\n    if (this._private__animationTimeoutId !== null) {\n      clearTimeout(this._private__animationTimeoutId);\n    }\n  }\n  _internal_priceLineColor(lastBarColor) {\n    return this._private__options.priceLineColor || lastBarColor;\n  }\n  _internal_lastValueData(globalLast) {\n    const noDataRes = {\n      _internal_noData: true\n    };\n    const priceScale = this._internal_priceScale();\n    if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n      return noDataRes;\n    }\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    const firstValue = this._internal_firstValue();\n    if (visibleBars === null || firstValue === null) {\n      return noDataRes;\n    }\n    // find range of bars inside range\n    // TODO: make it more optimal\n    let bar;\n    let lastIndex;\n    if (globalLast) {\n      const lastBar = this._private__data._internal_last();\n      if (lastBar === null) {\n        return noDataRes;\n      }\n      bar = lastBar;\n      lastIndex = lastBar._internal_index;\n    } else {\n      const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n      if (endBar === null) {\n        return noDataRes;\n      }\n      bar = this._private__data._internal_valueAt(endBar._internal_index);\n      if (bar === null) {\n        return noDataRes;\n      }\n      lastIndex = endBar._internal_index;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const barColorer = this._internal_barColorer();\n    const style = barColorer._internal_barStyle(lastIndex, {\n      _internal_value: bar\n    });\n    const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n    return {\n      _internal_noData: false,\n      _internal_price: price,\n      _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n      _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n      _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n      _internal_color: style._internal_barColor,\n      _internal_coordinate: coordinate,\n      _internal_index: lastIndex\n    };\n  }\n  _internal_barColorer() {\n    if (this._private__barColorerCache !== null) {\n      return this._private__barColorerCache;\n    }\n    this._private__barColorerCache = new SeriesBarColorer(this);\n    return this._private__barColorerCache;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    const targetPriceScaleId = options.priceScaleId;\n    if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n      // series cannot do it itself, ask model\n      this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n    }\n    merge(this._private__options, options);\n    if (options.priceFormat !== undefined) {\n      this._private__recreateFormatter();\n      // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n      // thus we need to force the chart to do a full update to apply changes correctly\n      // full update is quite heavy operation in terms of performance\n      // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n      this._internal_model()._internal_fullUpdate();\n    }\n    this._internal_model()._internal_updateSource(this);\n    // a series might affect crosshair by some options (like crosshair markers)\n    // that's why we need to update crosshair as well\n    this._internal_model()._internal_updateCrosshair();\n    this._private__paneView._internal_update('options');\n  }\n  _internal_setData(data, updateInfo) {\n    this._private__data._internal_setData(data);\n    this._private__paneView._internal_update('data');\n    if (this._private__lastPriceAnimationPaneView !== null) {\n      if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n        this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n      } else if (data.length === 0) {\n        this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n      }\n    }\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_createPriceLine(options) {\n    const result = new CustomPriceLine(this, options);\n    this._private__customPriceLines.push(result);\n    this._internal_model()._internal_updateSource(this);\n    return result;\n  }\n  _internal_removePriceLine(line) {\n    const index = this._private__customPriceLines.indexOf(line);\n    if (index !== -1) {\n      this._private__customPriceLines.splice(index, 1);\n    }\n    this._internal_model()._internal_updateSource(this);\n  }\n  _internal_priceLines() {\n    return this._private__customPriceLines;\n  }\n  _internal_seriesType() {\n    return this._private__seriesType;\n  }\n  _internal_firstValue() {\n    const bar = this._internal_firstBar();\n    if (bar === null) {\n      return null;\n    }\n    return {\n      _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_timePoint: bar._internal_time\n    };\n  }\n  _internal_firstBar() {\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const startTimePoint = visibleBars._internal_left();\n    return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n  }\n  _internal_bars() {\n    return this._private__data;\n  }\n  _internal_dataAt(time) {\n    const prices = this._private__data._internal_valueAt(time);\n    if (prices === null) {\n      return null;\n    }\n    if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n      return {\n        _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n        _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n        _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n        _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */]\n      };\n    } else {\n      return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n    }\n  }\n  _internal_topPaneViews(pane) {\n    const res = [];\n    extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n    const animationPaneView = this._private__lastPriceAnimationPaneView;\n    if (animationPaneView === null || !animationPaneView._internal_visible()) {\n      return res;\n    }\n    if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n      this._private__animationTimeoutId = setTimeout(() => {\n        this._private__animationTimeoutId = null;\n        this._internal_model()._internal_cursorUpdate();\n      }, 0);\n    }\n    animationPaneView._internal_invalidateStage();\n    res.unshift(animationPaneView);\n    return res;\n  }\n  _internal_paneViews() {\n    const res = [];\n    if (!this._private__isOverlay()) {\n      res.push(this._private__baseHorizontalLineView);\n    }\n    res.push(this._private__paneView, this._private__priceLineView);\n    const priceLineViews = this._private__customPriceLines.map(line => line._internal_paneView());\n    res.push(...priceLineViews);\n    extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n    return res;\n  }\n  _internal_bottomPaneViews() {\n    return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n  }\n  _internal_pricePaneViews(zOrder) {\n    return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n  }\n  _internal_timePaneViews(zOrder) {\n    return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n  }\n  _internal_primitiveHitTest(x, y) {\n    return this._private__primitives.map(primitive => primitive._internal_hitTest(x, y)).filter(result => result !== null);\n  }\n  _internal_labelPaneViews() {\n    return [this._private__panePriceAxisView, ...this._private__customPriceLines.map(line => line._internal_labelPaneView())];\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n      return [];\n    }\n    const result = [...this._private__priceAxisViews];\n    for (const customPriceLine of this._private__customPriceLines) {\n      result.push(customPriceLine._internal_priceAxisView());\n    }\n    this._private__primitives.forEach(wrapper => {\n      result.push(...wrapper._internal_priceAxisViews());\n    });\n    return result;\n  }\n  _internal_timeAxisViews() {\n    const res = [];\n    this._private__primitives.forEach(wrapper => {\n      res.push(...wrapper._internal_timeAxisViews());\n    });\n    return res;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    if (this._private__options.autoscaleInfoProvider !== undefined) {\n      const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n        const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n        return res === null ? null : res._internal_toRaw();\n      });\n      return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n    }\n    return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n  }\n  _internal_minMove() {\n    return this._private__options.priceFormat.minMove;\n  }\n  _internal_formatter() {\n    return this._private__formatter;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n    for (const priceAxisView of this._private__priceAxisViews) {\n      priceAxisView._internal_update();\n    }\n    for (const customPriceLine of this._private__customPriceLines) {\n      customPriceLine._internal_update();\n    }\n    this._private__priceLineView._internal_update();\n    this._private__baseHorizontalLineView._internal_update();\n    this._private__lastPriceAnimationPaneView?._internal_update();\n    this._private__primitives.forEach(wrapper => wrapper._internal_updateAllViews());\n  }\n  _internal_priceScale() {\n    return ensureNotNull(super._internal_priceScale());\n  }\n  _internal_markerDataAtIndex(index) {\n    const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') && this._private__options.crosshairMarkerVisible;\n    if (!getValue) {\n      return null;\n    }\n    const bar = this._private__data._internal_valueAt(index);\n    if (bar === null) {\n      return null;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const radius = this._private__markerRadius();\n    const borderColor = this._private__markerBorderColor();\n    const borderWidth = this._private__markerBorderWidth();\n    const backgroundColor = this._private__markerBackgroundColor(index);\n    return {\n      _internal_price: price,\n      _internal_radius: radius,\n      _internal_borderColor: borderColor,\n      _internal_borderWidth: borderWidth,\n      _internal_backgroundColor: backgroundColor\n    };\n  }\n  _internal_title() {\n    return this._private__options.title;\n  }\n  _internal_visible() {\n    return this._private__options.visible;\n  }\n  _internal_attachPrimitive(primitive) {\n    this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n  }\n  _internal_detachPrimitive(source) {\n    this._private__primitives = this._private__primitives.filter(wrapper => wrapper._internal_primitive() !== source);\n  }\n  _internal_customSeriesPlotValuesBuilder() {\n    if (this._private__seriesType !== 'Custom') {\n      return undefined;\n    }\n    return data => {\n      return this._private__paneView._internal_priceValueBuilder(data);\n    };\n  }\n  _internal_customSeriesWhitespaceCheck() {\n    if (this._private__seriesType !== 'Custom') {\n      return undefined;\n    }\n    return data => {\n      return this._private__paneView._internal_isWhitespace(data);\n    };\n  }\n  _internal_fulfilledIndices() {\n    return this._private__data._internal_indices();\n  }\n  _private__isOverlay() {\n    const priceScale = this._internal_priceScale();\n    return !isDefaultPriceScale(priceScale._internal_id());\n  }\n  _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n    if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n      return null;\n    }\n    // TODO: refactor this\n    // series data is strongly hardcoded to keep bars\n    const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram' ? [3 /* PlotRowValueIndex.Close */] : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n    const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n    let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n    let margins = null;\n    if (this._internal_seriesType() === 'Histogram') {\n      const base = this._private__options.base;\n      const rangeWithBase = new PriceRangeImpl(base, base);\n      range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n    }\n    this._private__primitives.forEach(primitive => {\n      const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n      if (primitiveAutoscale?.priceRange) {\n        const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n        range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n      }\n      if (primitiveAutoscale?.margins) {\n        margins = primitiveAutoscale.margins;\n      }\n    });\n    return new AutoscaleInfoImpl(range, margins);\n  }\n  _private__markerRadius() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerRadius;\n    }\n    return 0;\n  }\n  _private__markerBorderColor() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n          if (crosshairMarkerBorderColor.length !== 0) {\n            return crosshairMarkerBorderColor;\n          }\n        }\n    }\n    return null;\n  }\n  _private__markerBorderWidth() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerBorderWidth;\n    }\n    return 0;\n  }\n  _private__markerBackgroundColor(index) {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n          if (crosshairMarkerBackgroundColor.length !== 0) {\n            return crosshairMarkerBackgroundColor;\n          }\n        }\n    }\n    return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n  }\n  _private__recreateFormatter() {\n    switch (this._private__options.priceFormat.type) {\n      case 'custom':\n        {\n          this._private__formatter = {\n            format: this._private__options.priceFormat.formatter\n          };\n          break;\n        }\n      case 'volume':\n        {\n          this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      case 'percent':\n        {\n          this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      default:\n        {\n          const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n          this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n        }\n    }\n    if (this._internal__priceScale !== null) {\n      this._internal__priceScale._internal_updateFormatter();\n    }\n  }\n  _private__extractPaneViews(extractor, zOrder) {\n    const res = [];\n    extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n    return res;\n  }\n}\nclass Magnet {\n  constructor(options) {\n    this._private__options = options;\n  }\n  _internal_align(price, index, pane) {\n    let res = price;\n    if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n      return res;\n    }\n    const defaultPriceScale = pane._internal_defaultPriceScale();\n    const firstValue = defaultPriceScale._internal_firstValue();\n    if (firstValue === null) {\n      return res;\n    }\n    const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n    // get all serieses from the pane\n    const serieses = pane._internal_dataSources().filter(ds => ds instanceof Series);\n    const candidates = serieses.reduce((acc, series) => {\n      if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n        return acc;\n      }\n      const ps = series._internal_priceScale();\n      const bars = series._internal_bars();\n      if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n        return acc;\n      }\n      const bar = bars._internal_valueAt(index);\n      if (bar === null) {\n        return acc;\n      }\n      // convert bar to pixels\n      const firstPrice = ensure(series._internal_firstValue());\n      return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n    }, []);\n    if (candidates.length === 0) {\n      return res;\n    }\n    candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n    const nearest = candidates[0];\n    res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n    return res;\n  }\n}\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    ctx.lineWidth = lineWidth;\n    strokeInPixel(ctx, () => {\n      const data = ensureNotNull(this._private__data);\n      if (data._internal_vertLinesVisible) {\n        ctx.strokeStyle = data._internal_vertLinesColor;\n        setLineStyle(ctx, data._internal_vertLineStyle);\n        ctx.beginPath();\n        for (const timeMark of data._internal_timeMarks) {\n          const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n          ctx.moveTo(x, -lineWidth);\n          ctx.lineTo(x, bitmapSize.height + lineWidth);\n        }\n        ctx.stroke();\n      }\n      if (data._internal_horzLinesVisible) {\n        ctx.strokeStyle = data._internal_horzLinesColor;\n        setLineStyle(ctx, data._internal_horzLineStyle);\n        ctx.beginPath();\n        for (const priceMark of data._internal_priceMarks) {\n          const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n          ctx.moveTo(-lineWidth, y);\n          ctx.lineTo(bitmapSize.width + lineWidth, y);\n        }\n        ctx.stroke();\n      }\n    });\n  }\n}\nclass GridPaneView {\n  constructor(pane) {\n    this._private__renderer = new GridRenderer();\n    this._private__invalidated = true;\n    this._private__pane = pane;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n      const data = {\n        _internal_horzLinesVisible: gridOptions.horzLines.visible,\n        _internal_vertLinesVisible: gridOptions.vertLines.visible,\n        _internal_horzLinesColor: gridOptions.horzLines.color,\n        _internal_vertLinesColor: gridOptions.vertLines.color,\n        _internal_horzLineStyle: gridOptions.horzLines.style,\n        _internal_vertLineStyle: gridOptions.vertLines.style,\n        _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n        // need this conversiom because TimeMark is a part of external interface\n        // and fields inside TimeMark are not minified\n        _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map(tm => {\n          return {\n            _internal_coord: tm.coord\n          };\n        })\n      };\n      this._private__renderer._internal_setData(data);\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n}\nclass Grid {\n  constructor(pane) {\n    this._private__paneView = new GridPaneView(pane);\n  }\n  _internal_paneView() {\n    return this._private__paneView;\n  }\n}\nconst defLogFormula = {\n  _internal_logicalOffset: 4,\n  _internal_coordOffset: 0.0001\n};\nfunction fromPercent(value, baseValue) {\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue;\n  return baseValue < 0 ? -result : result;\n}\nfunction toPercentRange(priceRange, baseValue) {\n  const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n  value -= 100;\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue + 100;\n  return baseValue < 0 ? -result : result;\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n  const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n  const m = Math.abs(price);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n  return price < 0 ? -res : res;\n}\nfunction fromLog(logical, logFormula) {\n  const m = Math.abs(logical);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n  return logical < 0 ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = toLog(priceRange._internal_minValue(), logFormula);\n  const max = toLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return false;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n  if (range === null) {\n    return defLogFormula;\n  }\n  const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n  if (diff >= 1 || diff < 1e-15) {\n    return defLogFormula;\n  }\n  const digits = Math.ceil(Math.abs(Math.log10(diff)));\n  const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n  const coordOffset = 1 / Math.pow(10, logicalOffset);\n  return {\n    _internal_logicalOffset: logicalOffset,\n    _internal_coordOffset: coordOffset\n  };\n}\nfunction logFormulasAreSame(f1, f2) {\n  return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\nfunction clamp(value, minVal, maxVal) {\n  return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n  if (value < 0) {\n    return false;\n  }\n  for (let current = value; current > 1; current /= 10) {\n    if (current % 10 !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n  return x2 - x1 <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n  return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n  if (arr.length < 1) {\n    throw Error('array is empty');\n  }\n  let minVal = arr[0];\n  for (let i = 1; i < arr.length; ++i) {\n    if (arr[i] < minVal) {\n      minVal = arr[i];\n    }\n  }\n  return minVal;\n}\nfunction ceiledEven(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 !== 0 ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 === 0 ? ceiled - 1 : ceiled;\n}\nclass PriceTickSpanCalculator {\n  constructor(base, integralDividers) {\n    this._private__base = base;\n    this._private__integralDividers = integralDividers;\n    if (isBaseDecimal(this._private__base)) {\n      this._private__fractionalDividers = [2, 2.5, 2];\n    } else {\n      this._private__fractionalDividers = [];\n      for (let baseRest = this._private__base; baseRest !== 1;) {\n        if (baseRest % 2 === 0) {\n          this._private__fractionalDividers.push(2);\n          baseRest /= 2;\n        } else if (baseRest % 5 === 0) {\n          this._private__fractionalDividers.push(2, 2.5);\n          baseRest /= 5;\n        } else {\n          throw new Error('unexpected base');\n        }\n        if (this._private__fractionalDividers.length > 100) {\n          throw new Error('something wrong with base');\n        }\n      }\n    }\n  }\n  _internal_tickSpan(high, low, maxTickSpan) {\n    const minMovement = this._private__base === 0 ? 0 : 1 / this._private__base;\n    let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n    let index = 0;\n    let c = this._private__integralDividers[0];\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // the second part is actual for small with very small values like 1e-10\n      // greaterOrEqual fails for such values\n      const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */;\n      const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n      const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n      const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n      if (!haveToContinue) {\n        break;\n      }\n      resultTickSpan /= c;\n      c = this._private__integralDividers[++index % this._private__integralDividers.length];\n    }\n    if (resultTickSpan <= minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n      resultTickSpan = minMovement;\n    }\n    resultTickSpan = Math.max(1, resultTickSpan);\n    if (this._private__fractionalDividers.length > 0 && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n      index = 0;\n      c = this._private__fractionalDividers[0];\n      while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n        resultTickSpan /= c;\n        c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n      }\n    }\n    return resultTickSpan;\n  }\n}\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n  constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n    this._private__marks = [];\n    this._private__priceScale = priceScale;\n    this._private__base = base;\n    this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n    this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n  }\n  _internal_tickSpan(high, low) {\n    if (high < low) {\n      throw new Error('high < low');\n    }\n    const scaleHeight = this._private__priceScale._internal_height();\n    const markHeight = this._private__tickMarkHeight();\n    const maxTickSpan = (high - low) * markHeight / scaleHeight;\n    const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n    const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n    const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n    const spans = [];\n    spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n    return min(spans);\n  }\n  _internal_rebuildTickMarks() {\n    const priceScale = this._private__priceScale;\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue === null) {\n      this._private__marks = [];\n      return;\n    }\n    const scaleHeight = priceScale._internal_height();\n    const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n    const top = this._private__coordinateToLogicalFunc(0, firstValue);\n    const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n    const minCoord = extraTopBottomMargin;\n    const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n    const high = Math.max(bottom, top);\n    const low = Math.min(bottom, top);\n    if (high === low) {\n      this._private__marks = [];\n      return;\n    }\n    let span = this._internal_tickSpan(high, low);\n    let mod = high % span;\n    mod += mod < 0 ? span : 0;\n    const sign = high >= low ? 1 : -1;\n    let prevCoord = null;\n    let targetIndex = 0;\n    for (let logical = high - mod; logical > low; logical -= span) {\n      const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n      // check if there is place for it\n      // this is required for log scale\n      if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n        continue;\n      }\n      // check if a tick mark is partially visible and skip it if entireTextOnly is true\n      if (coord < minCoord || coord > maxCoord) {\n        continue;\n      }\n      if (targetIndex < this._private__marks.length) {\n        this._private__marks[targetIndex]._internal_coord = coord;\n        this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n      } else {\n        this._private__marks.push({\n          _internal_coord: coord,\n          _internal_label: priceScale._internal_formatLogical(logical)\n        });\n      }\n      targetIndex++;\n      prevCoord = coord;\n      if (priceScale._internal_isLog()) {\n        // recalc span\n        span = this._internal_tickSpan(logical * sign, low);\n      }\n    }\n    this._private__marks.length = targetIndex;\n  }\n  _internal_marks() {\n    return this._private__marks;\n  }\n  _private__fontHeight() {\n    return this._private__priceScale._internal_fontSize();\n  }\n  _private__tickMarkHeight() {\n    return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n  }\n}\nfunction sortSources(sources) {\n  return sources.slice().sort((s1, s2) => {\n    return ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder());\n  });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n  /**\n   * Price scale shows prices. Price range changes linearly.\n   */\n  PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * Price scale shows prices. Price range changes logarithmically.\n   */\n  PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n  /**\n   * Price scale shows percentage values according the first visible value of the price scale.\n   * The first visible value is 0% in this mode.\n   */\n  PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n  /**\n   * The same as percentage mode, but the first value is moved to 100.\n   */\n  PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n  constructor(id, options, layoutOptions, localizationOptions, colorParser) {\n    this._private__height = 0;\n    this._private__internalHeightCache = null;\n    this._private__priceRange = null;\n    this._private__priceRangeSnapshot = null;\n    this._private__invalidatedForRange = {\n      _internal_isValid: false,\n      _internal_visibleBars: null\n    };\n    this._private__marginAbove = 0;\n    this._private__marginBelow = 0;\n    this._private__onMarksChanged = new Delegate();\n    this._private__modeChanged = new Delegate();\n    this._private__dataSources = [];\n    this._private__cachedOrderedSources = null;\n    this._private__marksCache = null;\n    this._private__scaleStartPoint = null;\n    this._private__scrollStartPoint = null;\n    this._private__formatter = defaultPriceFormatter;\n    this._private__logFormula = logFormulaForPriceRange(null);\n    this._private__id = id;\n    this._private__options = options;\n    this._private__layoutOptions = layoutOptions;\n    this._private__localizationOptions = localizationOptions;\n    this._private__colorParser = colorParser;\n    this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n  }\n  _internal_id() {\n    return this._private__id;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_updateFormatter();\n    if (options.mode !== undefined) {\n      this._internal_setMode({\n        _internal_mode: options.mode\n      });\n    }\n    if (options.scaleMargins !== undefined) {\n      const top = ensureDefined(options.scaleMargins.top);\n      const bottom = ensureDefined(options.scaleMargins.bottom);\n      if (top < 0 || top > 1) {\n        throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n      }\n      if (bottom < 0 || bottom > 1) {\n        throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n      }\n      if (top + bottom > 1) {\n        throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n      }\n      this._private__invalidateInternalHeightCache();\n      this._private__marksCache = null;\n    }\n  }\n  _internal_isAutoScale() {\n    return this._private__options.autoScale;\n  }\n  _internal_isLog() {\n    return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n  }\n  _internal_isPercentage() {\n    return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n  }\n  _internal_isIndexedTo100() {\n    return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n  }\n  _internal_mode() {\n    return {\n      _internal_autoScale: this._private__options.autoScale,\n      _internal_isInverted: this._private__options.invertScale,\n      _internal_mode: this._private__options.mode\n    };\n  }\n  // eslint-disable-next-line complexity\n  _internal_setMode(newMode) {\n    const oldMode = this._internal_mode();\n    let priceRange = null;\n    if (newMode._internal_autoScale !== undefined) {\n      this._private__options.autoScale = newMode._internal_autoScale;\n    }\n    if (newMode._internal_mode !== undefined) {\n      this._private__options.mode = newMode._internal_mode;\n      if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n        this._private__options.autoScale = true;\n      }\n      // TODO: Remove after making rebuildTickMarks lazy\n      this._private__invalidatedForRange._internal_isValid = false;\n    }\n    // define which scale converted from\n    if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n        priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n        if (priceRange !== null) {\n          this._internal_setPriceRange(priceRange);\n        }\n      } else {\n        this._private__options.autoScale = true;\n      }\n    }\n    // define which scale converted to\n    if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n      if (priceRange !== null) {\n        this._internal_setPriceRange(priceRange);\n      }\n    }\n    const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n    if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n      this._internal_updateFormatter();\n    }\n    if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n      this._internal_updateFormatter();\n    }\n    if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n      this._private__options.invertScale = newMode._internal_isInverted;\n      this._private__onIsInvertedChanged();\n    }\n    this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n  }\n  _internal_modeChanged() {\n    return this._private__modeChanged;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setHeight(value) {\n    if (this._private__height === value) {\n      return;\n    }\n    this._private__height = value;\n    this._private__invalidateInternalHeightCache();\n    this._private__marksCache = null;\n  }\n  _internal_internalHeight() {\n    if (this._private__internalHeightCache) {\n      return this._private__internalHeightCache;\n    }\n    const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n    this._private__internalHeightCache = res;\n    return res;\n  }\n  _internal_priceRange() {\n    this._private__makeSureItIsValid();\n    return this._private__priceRange;\n  }\n  _internal_setPriceRange(newPriceRange, isForceSetValue) {\n    const oldPriceRange = this._private__priceRange;\n    if (!isForceSetValue && !(oldPriceRange === null && newPriceRange !== null) && (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n      return;\n    }\n    this._private__marksCache = null;\n    this._private__priceRange = newPriceRange;\n  }\n  _internal_isEmpty() {\n    this._private__makeSureItIsValid();\n    return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n  }\n  _internal_invertedCoordinate(coordinate) {\n    return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n  }\n  _internal_priceToCoordinate(price, baseValue) {\n    if (this._internal_isPercentage()) {\n      price = toPercent(price, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      price = toIndexedTo100(price, baseValue);\n    }\n    return this._private__logicalToCoordinate(price, baseValue);\n  }\n  _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? points.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const point = points[i];\n      const price = point._internal_price;\n      if (isNaN(price)) {\n        continue;\n      }\n      let logical = price;\n      if (transformFn !== null) {\n        logical = transformFn(point._internal_price, baseValue);\n      }\n      const invCoordinate = bh + hmm * (logical - min);\n      const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      point._internal_y = coordinate;\n    }\n  }\n  _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? pricesList.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const bar = pricesList[i];\n      let openLogical = bar._internal_open;\n      let highLogical = bar._internal_high;\n      let lowLogical = bar._internal_low;\n      let closeLogical = bar._internal_close;\n      if (transformFn !== null) {\n        openLogical = transformFn(bar._internal_open, baseValue);\n        highLogical = transformFn(bar._internal_high, baseValue);\n        lowLogical = transformFn(bar._internal_low, baseValue);\n        closeLogical = transformFn(bar._internal_close, baseValue);\n      }\n      let invCoordinate = bh + hmm * (openLogical - min);\n      let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_openY = coordinate;\n      invCoordinate = bh + hmm * (highLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_highY = coordinate;\n      invCoordinate = bh + hmm * (lowLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_lowY = coordinate;\n      invCoordinate = bh + hmm * (closeLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_closeY = coordinate;\n    }\n  }\n  _internal_coordinateToPrice(coordinate, baseValue) {\n    const logical = this._private__coordinateToLogical(coordinate, baseValue);\n    return this._internal_logicalToPrice(logical, baseValue);\n  }\n  _internal_logicalToPrice(logical, baseValue) {\n    let value = logical;\n    if (this._internal_isPercentage()) {\n      value = fromPercent(value, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      value = fromIndexedTo100(value, baseValue);\n    }\n    return value;\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources) {\n      return this._private__cachedOrderedSources;\n    }\n    let sources = [];\n    for (let i = 0; i < this._private__dataSources.length; i++) {\n      const ds = this._private__dataSources[i];\n      if (ds._internal_zorder() === null) {\n        ds._internal_setZorder(i + 1);\n      }\n      sources.push(ds);\n    }\n    sources = sortSources(sources);\n    this._private__cachedOrderedSources = sources;\n    return this._private__cachedOrderedSources;\n  }\n  _internal_addDataSource(source) {\n    if (this._private__dataSources.indexOf(source) !== -1) {\n      return;\n    }\n    this._private__dataSources.push(source);\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    if (index === -1) {\n      throw new Error('source is not attached to scale');\n    }\n    this._private__dataSources.splice(index, 1);\n    if (this._private__dataSources.length === 0) {\n      this._internal_setMode({\n        _internal_autoScale: true\n      });\n      // if no sources on price scale let's clear price range cache as well as enabling auto scale\n      this._internal_setPriceRange(null);\n    }\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_firstValue() {\n    // TODO: cache the result\n    let result = null;\n    for (const source of this._private__dataSources) {\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n        result = firstValue;\n      }\n    }\n    return result === null ? null : result._internal_value;\n  }\n  _internal_isInverted() {\n    return this._private__options.invertScale;\n  }\n  _internal_marks() {\n    const firstValueIsNull = this._internal_firstValue() === null;\n    // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n    // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n    // we could display an empty price scale, but this is not good from UX\n    // so in this case we need to keep an previous marks to display them on the scale\n    // as one of possible examples for this situation could be the following:\n    // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n    // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n    if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n      return this._private__marksCache._internal_marks;\n    }\n    this._private__markBuilder._internal_rebuildTickMarks();\n    const marks = this._private__markBuilder._internal_marks();\n    this._private__marksCache = {\n      _internal_marks: marks,\n      _internal_firstValueIsNull: firstValueIsNull\n    };\n    this._private__onMarksChanged._internal_fire();\n    return marks;\n  }\n  _internal_onMarksChanged() {\n    return this._private__onMarksChanged;\n  }\n  _internal_startScale(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    // invert x\n    this._private__scaleStartPoint = this._private__height - x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scaleTo(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._internal_setMode({\n      _internal_autoScale: false\n    });\n    // invert x\n    x = this._private__height - x;\n    if (x < 0) {\n      x = 0;\n    }\n    let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    scaleCoeff = Math.max(scaleCoeff, 0.1);\n    newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n    this._internal_setPriceRange(newPriceRange);\n  }\n  _internal_endScale() {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_startScroll(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scrollTo(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n    let pixelDelta = x - this._private__scrollStartPoint;\n    if (this._internal_isInverted()) {\n      pixelDelta *= -1;\n    }\n    const priceDelta = pixelDelta * priceUnitsPerPixel;\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    newPriceRange._internal_shift(priceDelta);\n    this._internal_setPriceRange(newPriceRange, true);\n    this._private__marksCache = null;\n  }\n  _internal_endScroll() {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_formatter() {\n    if (!this._private__formatter) {\n      this._internal_updateFormatter();\n    }\n    return this._private__formatter;\n  }\n  _internal_formatPrice(price, firstValue) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._private__formatPercentage(toPercent(price, firstValue));\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n      default:\n        return this._private__formatPrice(price);\n    }\n  }\n  _internal_formatLogical(logical) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._private__formatPercentage(logical);\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(logical);\n      default:\n        return this._private__formatPrice(logical);\n    }\n  }\n  _internal_formatPriceAbsolute(price) {\n    return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n  }\n  _internal_formatPricePercentage(price, baseValue) {\n    price = toPercent(price, baseValue);\n    return this._private__formatPercentage(price, percentageFormatter);\n  }\n  _internal_sourcesForAutoScale() {\n    return this._private__dataSources;\n  }\n  _internal_recalculatePriceRange(visibleBars) {\n    this._private__invalidatedForRange = {\n      _internal_visibleBars: visibleBars,\n      _internal_isValid: false\n    };\n  }\n  _internal_updateAllViews() {\n    this._private__dataSources.forEach(s => s._internal_updateAllViews());\n  }\n  _internal_updateFormatter() {\n    this._private__marksCache = null;\n    const formatterSource = this._private__formatterSource();\n    let base = 100;\n    if (formatterSource !== null) {\n      base = Math.round(1 / formatterSource._internal_minMove());\n    }\n    this._private__formatter = defaultPriceFormatter;\n    if (this._internal_isPercentage()) {\n      this._private__formatter = percentageFormatter;\n      base = 100;\n    } else if (this._internal_isIndexedTo100()) {\n      this._private__formatter = new PriceFormatter(100, 1);\n      base = 100;\n    } else {\n      if (formatterSource !== null) {\n        // user\n        this._private__formatter = formatterSource._internal_formatter();\n      }\n    }\n    this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  _internal_invalidateSourcesCache() {\n    this._private__cachedOrderedSources = null;\n  }\n  _internal_colorParser() {\n    return this._private__colorParser;\n  }\n  /**\n   * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n   */\n  _private__formatterSource() {\n    return this._private__dataSources[0] || null;\n  }\n  _private__topMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n  }\n  _private__bottomMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n  }\n  _private__makeSureItIsValid() {\n    if (!this._private__invalidatedForRange._internal_isValid) {\n      this._private__invalidatedForRange._internal_isValid = true;\n      this._private__recalculatePriceRangeImpl();\n    }\n  }\n  _private__invalidateInternalHeightCache() {\n    this._private__internalHeightCache = null;\n  }\n  _private__logicalToCoordinate(logical, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n    const range = ensureNotNull(this._internal_priceRange());\n    const invCoordinate = this._private__bottomMarginPx() + (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n    const coordinate = this._internal_invertedCoordinate(invCoordinate);\n    return coordinate;\n  }\n  _private__coordinateToLogical(coordinate, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    const invCoordinate = this._internal_invertedCoordinate(coordinate);\n    const range = ensureNotNull(this._internal_priceRange());\n    const logical = range._internal_minValue() + range._internal_length() * ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n    return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n  }\n  _private__onIsInvertedChanged() {\n    this._private__marksCache = null;\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  // eslint-disable-next-line complexity\n  _private__recalculatePriceRangeImpl() {\n    const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n    if (visibleBars === null) {\n      return;\n    }\n    let priceRange = null;\n    const sources = this._internal_sourcesForAutoScale();\n    let marginAbove = 0;\n    let marginBelow = 0;\n    for (const source of sources) {\n      if (!source._internal_visible()) {\n        continue;\n      }\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n      let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n      if (sourceRange !== null) {\n        switch (this._private__options.mode) {\n          case 1 /* PriceScaleMode.Logarithmic */:\n            sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n            break;\n          case 2 /* PriceScaleMode.Percentage */:\n            sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n            break;\n          case 3 /* PriceScaleMode.IndexedTo100 */:\n            sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n            break;\n        }\n        if (priceRange === null) {\n          priceRange = sourceRange;\n        } else {\n          priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n        }\n        if (autoScaleInfo !== null) {\n          const margins = autoScaleInfo._internal_margins();\n          if (margins !== null) {\n            marginAbove = Math.max(marginAbove, margins.above);\n            marginBelow = Math.max(marginBelow, margins.below);\n          }\n        }\n      }\n    }\n    if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n      this._private__marginAbove = marginAbove;\n      this._private__marginBelow = marginBelow;\n      this._private__marksCache = null;\n      this._private__invalidateInternalHeightCache();\n    }\n    if (priceRange !== null) {\n      // keep current range is new is empty\n      if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n        const formatterSource = this._private__formatterSource();\n        const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n        // if price range is degenerated to 1 point let's extend it by 10 min move values\n        // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n        const extendValue = 5 * minMove;\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        }\n        priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n        }\n      }\n      if (this._internal_isLog()) {\n        const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        const newLogFormula = logFormulaForPriceRange(rawRange);\n        if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n          const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n          this._private__logFormula = newLogFormula;\n          priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n          if (rawSnapshot !== null) {\n            this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n          }\n        }\n      }\n      this._internal_setPriceRange(priceRange);\n    } else {\n      // reset empty to default\n      if (this._private__priceRange === null) {\n        this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n        this._private__logFormula = logFormulaForPriceRange(null);\n      }\n    }\n    this._private__invalidatedForRange._internal_isValid = true;\n  }\n  _private__getCoordinateTransformer() {\n    if (this._internal_isPercentage()) {\n      return toPercent;\n    } else if (this._internal_isIndexedTo100()) {\n      return toIndexedTo100;\n    } else if (this._internal_isLog()) {\n      return price => toLog(price, this._private__logFormula);\n    }\n    return null;\n  }\n  _private__formatValue(value, formatter, fallbackFormatter) {\n    if (formatter === undefined) {\n      if (fallbackFormatter === undefined) {\n        fallbackFormatter = this._internal_formatter();\n      }\n      return fallbackFormatter.format(value);\n    }\n    return formatter(value);\n  }\n  _private__formatPrice(price, fallbackFormatter) {\n    return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n  }\n  _private__formatPercentage(percentage, fallbackFormatter) {\n    return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n  }\n}\nfunction isSeries(source) {\n  return source instanceof Series;\n}\nconst DEFAULT_STRETCH_FACTOR = 1000;\nconst MIN_PANE_HEIGHT = 30;\nclass Pane {\n  constructor(timeScale, model) {\n    this._private__dataSources = [];\n    this._private__overlaySourcesByScaleId = new Map();\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n    this._private__cachedOrderedSources = null;\n    this._private__destroyed = new Delegate();\n    this._private__primitives = [];\n    this._private__timeScale = timeScale;\n    this._private__model = model;\n    this._private__grid = new Grid(this);\n    const options = model._internal_options();\n    this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n    this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n    this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n    this._internal_applyScaleOptions(options);\n  }\n  _internal_applyScaleOptions(options) {\n    if (options.leftPriceScale) {\n      this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n    }\n    if (options.rightPriceScale) {\n      this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n    }\n    if (options.localization) {\n      this._private__leftPriceScale._internal_updateFormatter();\n      this._private__rightPriceScale._internal_updateFormatter();\n    }\n    if (options.overlayPriceScales) {\n      const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n      for (const arr of sourceArrays) {\n        const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n        priceScale._internal_applyOptions(options.overlayPriceScales);\n        if (options.localization) {\n          priceScale._internal_updateFormatter();\n        }\n      }\n    }\n  }\n  _internal_priceScaleById(id) {\n    switch (id) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n      case \"left\" /* DefaultPriceScaleId.Left */:\n        {\n          return this._private__leftPriceScale;\n        }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n      case \"right\" /* DefaultPriceScaleId.Right */:\n        {\n          return this._private__rightPriceScale;\n        }\n    }\n    if (this._private__overlaySourcesByScaleId.has(id)) {\n      return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n    }\n    return null;\n  }\n  _internal_destroy() {\n    this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__dataSources.forEach(source => {\n      if (source._internal_destroy) {\n        source._internal_destroy();\n      }\n    });\n    this._private__primitives = this._private__primitives.filter(primitive => {\n      const p = primitive._internal_primitive();\n      if (p.detached) {\n        p.detached();\n      }\n      return false;\n    });\n    this._private__destroyed._internal_fire();\n  }\n  _internal_stretchFactor() {\n    return this._private__stretchFactor;\n  }\n  _internal_setStretchFactor(factor) {\n    this._private__stretchFactor = factor;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._internal_updateAllSources();\n  }\n  _internal_setHeight(height) {\n    this._private__height = height;\n    this._private__leftPriceScale._internal_setHeight(height);\n    this._private__rightPriceScale._internal_setHeight(height);\n    // process overlays\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        const priceScale = ds._internal_priceScale();\n        if (priceScale !== null) {\n          priceScale._internal_setHeight(height);\n        }\n      }\n    });\n    this._internal_updateAllSources();\n  }\n  _internal_series() {\n    return this._private__dataSources.filter(isSeries);\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_isOverlay(source) {\n    const priceScale = source._internal_priceScale();\n    if (priceScale === null) {\n      return true;\n    }\n    return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n  }\n  _internal_addDataSource(source, targetScaleId, zOrder) {\n    const targetZOrder = zOrder !== undefined ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n    this._private__insertDataSource(source, targetScaleId, targetZOrder);\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    assert(index !== -1, 'removeDataSource: invalid data source');\n    this._private__dataSources.splice(index, 1);\n    const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n    if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n      const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n      const overlayIndex = overlaySources.indexOf(source);\n      if (overlayIndex !== -1) {\n        overlaySources.splice(overlayIndex, 1);\n        if (overlaySources.length === 0) {\n          this._private__overlaySourcesByScaleId.delete(priceScaleId);\n        }\n      }\n    }\n    const priceScale = source._internal_priceScale();\n    // if source has owner, it returns owner's price scale\n    // and it does not have source in their list\n    if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n      priceScale._internal_removeDataSource(source);\n    }\n    if (priceScale !== null) {\n      priceScale._internal_invalidateSourcesCache();\n      this._internal_recalculatePriceScale(priceScale);\n    }\n    this._private__cachedOrderedSources = null;\n  }\n  _internal_priceScalePosition(priceScale) {\n    if (priceScale === this._private__leftPriceScale) {\n      return 'left';\n    }\n    if (priceScale === this._private__rightPriceScale) {\n      return 'right';\n    }\n    return 'overlay';\n  }\n  _internal_leftPriceScale() {\n    return this._private__leftPriceScale;\n  }\n  _internal_rightPriceScale() {\n    return this._private__rightPriceScale;\n  }\n  _internal_startScalePrice(priceScale, x) {\n    priceScale._internal_startScale(x);\n  }\n  _internal_scalePriceTo(priceScale, x) {\n    priceScale._internal_scaleTo(x);\n    // TODO: be more smart and update only affected views\n    this._internal_updateAllSources();\n  }\n  _internal_endScalePrice(priceScale) {\n    priceScale._internal_endScale();\n  }\n  _internal_startScrollPrice(priceScale, x) {\n    priceScale._internal_startScroll(x);\n  }\n  _internal_scrollPriceTo(priceScale, x) {\n    priceScale._internal_scrollTo(x);\n    this._internal_updateAllSources();\n  }\n  _internal_endScrollPrice(priceScale) {\n    priceScale._internal_endScroll();\n  }\n  _internal_updateAllSources() {\n    this._private__dataSources.forEach(source => {\n      source._internal_updateAllViews();\n    });\n  }\n  _internal_defaultPriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__leftPriceScale;\n    } else if (this._private__dataSources.length !== 0) {\n      priceScale = this._private__dataSources[0]._internal_priceScale();\n    }\n    if (priceScale === null) {\n      priceScale = this._private__rightPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_defaultVisiblePriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible) {\n      priceScale = this._private__leftPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_recalculatePriceScale(priceScale) {\n    if (priceScale === null || !priceScale._internal_isAutoScale()) {\n      return;\n    }\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _internal_resetPriceScale(priceScale) {\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    priceScale._internal_setMode({\n      _internal_autoScale: true\n    });\n    if (visibleBars !== null) {\n      priceScale._internal_recalculatePriceRange(visibleBars);\n    }\n    this._internal_updateAllSources();\n  }\n  _internal_momentaryAutoScale() {\n    this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n    this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n  }\n  _internal_recalculate() {\n    this._internal_recalculatePriceScale(this._private__leftPriceScale);\n    this._internal_recalculatePriceScale(this._private__rightPriceScale);\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        this._internal_recalculatePriceScale(ds._internal_priceScale());\n      }\n    });\n    this._internal_updateAllSources();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources === null) {\n      this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n    }\n    return this._private__cachedOrderedSources;\n  }\n  _internal_orderedSeries() {\n    return this._internal_orderedSources().filter(isSeries);\n  }\n  _internal_onDestroyed() {\n    return this._private__destroyed;\n  }\n  _internal_grid() {\n    return this._private__grid;\n  }\n  _internal_attachPrimitive(primitive) {\n    this._private__primitives.push(new PanePrimitiveWrapper$1(primitive));\n  }\n  _internal_detachPrimitive(source) {\n    this._private__primitives = this._private__primitives.filter(wrapper => wrapper._internal_primitive() !== source);\n    if (source.detached) {\n      source.detached();\n    }\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_primitives() {\n    return this._private__primitives;\n  }\n  _internal_primitiveHitTest(x, y) {\n    return this._private__primitives.map(primitive => primitive._internal_hitTest(x, y)).filter(result => result !== null);\n  }\n  _private__recalculatePriceScaleImpl(priceScale) {\n    // TODO: can use this checks\n    const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n    if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n      const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n      if (visibleBars !== null) {\n        priceScale._internal_recalculatePriceRange(visibleBars);\n      }\n    }\n    priceScale._internal_updateAllViews();\n  }\n  _private__getZOrderMinMax() {\n    const sources = this._internal_orderedSources();\n    if (sources.length === 0) {\n      return {\n        _internal_minZOrder: 0,\n        _internal_maxZOrder: 0\n      };\n    }\n    let minZOrder = 0;\n    let maxZOrder = 0;\n    for (let j = 0; j < sources.length; j++) {\n      const ds = sources[j];\n      const zOrder = ds._internal_zorder();\n      if (zOrder !== null) {\n        if (zOrder < minZOrder) {\n          minZOrder = zOrder;\n        }\n        if (zOrder > maxZOrder) {\n          maxZOrder = zOrder;\n        }\n      }\n    }\n    return {\n      _internal_minZOrder: minZOrder,\n      _internal_maxZOrder: maxZOrder\n    };\n  }\n  _private__insertDataSource(source, priceScaleId, zOrder) {\n    let priceScale = this._internal_priceScaleById(priceScaleId);\n    if (priceScale === null) {\n      priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n    }\n    this._private__dataSources.push(source);\n    if (!isDefaultPriceScale(priceScaleId)) {\n      const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n      overlaySources.push(source);\n      this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n    }\n    priceScale._internal_addDataSource(source);\n    source._internal_setPriceScale(priceScale);\n    source._internal_setZorder(zOrder);\n    this._internal_recalculatePriceScale(priceScale);\n    this._private__cachedOrderedSources = null;\n  }\n  _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n    if (oldMode._internal_mode === newMode._internal_mode) {\n      return;\n    }\n    // momentary auto scale if we toggle percentage/indexedTo100 mode\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _private__createPriceScale(id, options) {\n    const actualOptions = {\n      visible: true,\n      autoScale: true,\n      ...clone(options)\n    };\n    const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options()['layout'], this._private__model._internal_options().localization, this._private__model._internal_colorParser());\n    priceScale._internal_setHeight(this._internal_height());\n    return priceScale;\n  }\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n  return !reference || item === 'top' && reference !== 'top' || item === 'normal' && reference === 'bottom';\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n  let bestPrimitiveHit;\n  let bestHitSource;\n  for (const source of sources) {\n    const primitiveHitResults = source._internal_primitiveHitTest?.(x, y) ?? [];\n    for (const hitResult of primitiveHitResults) {\n      if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit?.zOrder)) {\n        bestPrimitiveHit = hitResult;\n        bestHitSource = source;\n      }\n    }\n  }\n  if (!bestPrimitiveHit || !bestHitSource) {\n    return null;\n  }\n  return {\n    _internal_hit: bestPrimitiveHit,\n    _internal_source: bestHitSource\n  };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n  return {\n    _internal_source: primitiveHit._internal_source,\n    _internal_object: {\n      _internal_externalId: primitiveHit._internal_hit.externalId\n    },\n    _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle\n  };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y, pane) {\n  for (const paneView of paneViews) {\n    const renderer = paneView._internal_renderer(pane);\n    if (renderer !== null && renderer._internal_hitTest) {\n      const result = renderer._internal_hitTest(x, y);\n      if (result !== null) {\n        return {\n          _internal_view: paneView,\n          _internal_object: result\n        };\n      }\n    }\n  }\n  return null;\n}\nfunction isDataSource(source) {\n  return source._internal_paneViews !== undefined;\n}\n// eslint-disable-next-line complexity\nfunction hitTestPane(pane, x, y) {\n  const sources = [pane, ...pane._internal_orderedSources()];\n  const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n  if (bestPrimitiveHit?._internal_hit.zOrder === 'top') {\n    // a primitive hit on the 'top' layer will always beat the built-in hit tests\n    // (on normal layer) so we can return early here.\n    return convertPrimitiveHitResult(bestPrimitiveHit);\n  }\n  for (const source of sources) {\n    if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n      // a primitive will be drawn above a built-in item like a series marker\n      // therefore it takes precedence here.\n      return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    if (isDataSource(source)) {\n      const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y, pane);\n      if (sourceResult !== null) {\n        return {\n          _internal_source: source,\n          _internal_view: sourceResult._internal_view,\n          _internal_object: sourceResult._internal_object\n        };\n      }\n    }\n    if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n      return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n  }\n  if (bestPrimitiveHit?._internal_hit) {\n    // return primitive hits for the 'bottom' layer\n    return convertPrimitiveHitResult(bestPrimitiveHit);\n  }\n  return null;\n}\nclass FormattedLabelsCache {\n  constructor(format, horzScaleBehavior, size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__cache = new Map();\n    this._private__tick2Labels = new Map();\n    this._private__format = format;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__maxSize = size;\n  }\n  _internal_format(tickMark) {\n    const time = tickMark.time;\n    const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n    const tick = this._private__cache.get(cacheKey);\n    if (tick !== undefined) {\n      return tick._internal_string;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n      this._private__tick2Labels.delete(this._private__oldestTick);\n      this._private__cache.delete(ensureDefined(oldestValue));\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    const str = this._private__format(tickMark);\n    this._private__cache.set(cacheKey, {\n      _internal_string: str,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return str;\n  }\n}\nclass RangeImpl {\n  constructor(left, right) {\n    assert(left <= right, 'right should be >= left');\n    this._private__left = left;\n    this._private__right = right;\n  }\n  _internal_left() {\n    return this._private__left;\n  }\n  _internal_right() {\n    return this._private__right;\n  }\n  _internal_count() {\n    return this._private__right - this._private__left + 1;\n  }\n  _internal_contains(index) {\n    return this._private__left <= index && index <= this._private__right;\n  }\n  _internal_equals(other) {\n    return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n  }\n}\nfunction areRangesEqual(first, second) {\n  if (first === null || second === null) {\n    return first === second;\n  }\n  return first._internal_equals(second);\n}\nclass TickMarks {\n  constructor() {\n    this._private__marksByWeight = new Map();\n    this._private__cache = null;\n    this._private__uniformDistribution = false;\n  }\n  _internal_setUniformDistribution(val) {\n    this._private__uniformDistribution = val;\n    this._private__cache = null;\n  }\n  _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n    this._private__removeMarksSinceIndex(firstChangedPointIndex);\n    this._private__cache = null;\n    for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n      const point = newPoints[index];\n      let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n      if (marksForWeight === undefined) {\n        marksForWeight = [];\n        this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n      }\n      marksForWeight.push({\n        index: index,\n        time: point.time,\n        weight: point.timeWeight,\n        originalTime: point.originalTime\n      });\n    }\n  }\n  _internal_build(spacing, maxWidth, checkIndicesForData, indicesWithDataMap, indicesWithDataId) {\n    const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n    if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark || indicesWithDataId !== this._private__cache._internal_indicesWithDataId || checkIndicesForData !== this._private__cache._internal_checkIndicesForData) {\n      this._private__cache = {\n        _internal_indicesWithDataId: indicesWithDataId,\n        _internal_checkIndicesForData: checkIndicesForData,\n        _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark, checkIndicesForData, indicesWithDataMap),\n        _internal_maxIndexesPerMark: maxIndexesPerMark\n      };\n    }\n    return this._private__cache._internal_marks;\n  }\n  _private__removeMarksSinceIndex(sinceIndex) {\n    if (sinceIndex === 0) {\n      this._private__marksByWeight.clear();\n      return;\n    }\n    const weightsToClear = [];\n    this._private__marksByWeight.forEach((marks, timeWeight) => {\n      if (sinceIndex <= marks[0].index) {\n        weightsToClear.push(timeWeight);\n      } else {\n        marks.splice(lowerBound(marks, sinceIndex, tm => tm.index < sinceIndex), Infinity);\n      }\n    });\n    for (const weight of weightsToClear) {\n      this._private__marksByWeight.delete(weight);\n    }\n  }\n  _private__buildMarksImpl(maxIndexesPerMark, checkIndicesForData, indicesWithDataMap) {\n    let marks = [];\n    const canBeIncluded = mark => !checkIndicesForData || indicesWithDataMap.has(mark.index);\n    for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n      if (!this._private__marksByWeight.get(weight)) {\n        continue;\n      }\n      // Built tickMarks are now prevMarks, and marks it as new array\n      const prevMarks = marks;\n      marks = [];\n      const prevMarksLength = prevMarks.length;\n      let prevMarksPointer = 0;\n      const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n      const currentWeightLength = currentWeight.length;\n      let rightIndex = Infinity;\n      let leftIndex = -Infinity;\n      for (let i = 0; i < currentWeightLength; i++) {\n        const mark = currentWeight[i];\n        const currentIndex = mark.index;\n        // Determine indexes with which current index will be compared\n        // All marks to the right is moved to new array\n        while (prevMarksPointer < prevMarksLength) {\n          const lastMark = prevMarks[prevMarksPointer];\n          const lastIndex = lastMark.index;\n          if (lastIndex < currentIndex && canBeIncluded(lastMark)) {\n            prevMarksPointer++;\n            marks.push(lastMark);\n            leftIndex = lastIndex;\n            rightIndex = Infinity;\n          } else {\n            rightIndex = lastIndex;\n            break;\n          }\n        }\n        if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark && canBeIncluded(mark)) {\n          // TickMark fits. Place it into new array\n          marks.push(mark);\n          leftIndex = currentIndex;\n        } else {\n          if (this._private__uniformDistribution) {\n            return prevMarks;\n          }\n        }\n      }\n      // Place all unused tickMarks into new array;\n      for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n        if (canBeIncluded(prevMarks[prevMarksPointer])) {\n          marks.push(prevMarks[prevMarksPointer]);\n        }\n      }\n    }\n    return marks;\n  }\n}\nclass TimeScaleVisibleRange {\n  constructor(logicalRange) {\n    this._private__logicalRange = logicalRange;\n  }\n  _internal_strictRange() {\n    if (this._private__logicalRange === null) {\n      return null;\n    }\n    return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n  }\n  _internal_logicalRange() {\n    return this._private__logicalRange;\n  }\n  static _internal_invalid() {\n    return new TimeScaleVisibleRange(null);\n  }\n}\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight$2(a, b) {\n  return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n  constructor(model, options, localizationOptions, horzScaleBehavior) {\n    this._private__width = 0;\n    this._private__baseIndexOrNull = null;\n    this._private__points = [];\n    this._private__scrollStartPoint = null;\n    this._private__scaleStartPoint = null;\n    this._private__tickMarks = new TickMarks();\n    this._private__formattedByWeight = new Map();\n    this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n    this._private__visibleRangeInvalidated = true;\n    this._private__visibleBarsChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__optionsApplied = new Delegate();\n    this._private__commonTransitionStartState = null;\n    this._private__timeMarksCache = null;\n    this._private__indicesWithData = new Map();\n    this._private__indicesWithDataUpdateId = -1;\n    this._private__labels = [];\n    this._private__options = options;\n    this._private__localizationOptions = localizationOptions;\n    this._private__rightOffset = options.rightOffset;\n    this._private__barSpacing = options.barSpacing;\n    this._private__model = model;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__updateDateTimeFormatter();\n    this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n    this._internal_recalculateIndicesWithData();\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyLocalizationOptions(localizationOptions) {\n    merge(this._private__localizationOptions, localizationOptions);\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n  }\n  _internal_applyOptions(options, localizationOptions) {\n    merge(this._private__options, options);\n    if (this._private__options.fixLeftEdge) {\n      this._private__doFixLeftEdge();\n    }\n    if (this._private__options.fixRightEdge) {\n      this._private__doFixRightEdge();\n    }\n    // note that bar spacing should be applied before right offset\n    // because right offset depends on bar spacing\n    if (options.barSpacing !== undefined) {\n      this._private__model._internal_setBarSpacing(options.barSpacing);\n    }\n    if (options.rightOffset !== undefined) {\n      this._private__model._internal_setRightOffset(options.rightOffset);\n    }\n    if (options.minBarSpacing !== undefined || options.maxBarSpacing !== undefined) {\n      // yes, if we apply bar spacing constrains then we need to correct bar spacing\n      // the easiest way is to apply it once again\n      this._private__model._internal_setBarSpacing(options.barSpacing ?? this._private__barSpacing);\n    }\n    if (options.ignoreWhitespaceIndices !== undefined && options.ignoreWhitespaceIndices !== this._private__options.ignoreWhitespaceIndices) {\n      this._internal_recalculateIndicesWithData();\n    }\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n    this._private__optionsApplied._internal_fire();\n  }\n  _internal_indexToTime(index) {\n    return this._private__points[index]?.time ?? null;\n  }\n  _internal_indexToTimeScalePoint(index) {\n    return this._private__points[index] ?? null;\n  }\n  _internal_timeToIndex(time, findNearest) {\n    if (this._private__points.length < 1) {\n      // no time points available\n      return null;\n    }\n    if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n      // special case\n      return findNearest ? this._private__points.length - 1 : null;\n    }\n    const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n    if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n      return findNearest ? index : null;\n    }\n    return index;\n  }\n  _internal_isEmpty() {\n    return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n  }\n  _internal_hasPoints() {\n    return this._private__points.length > 0;\n  }\n  // strict range: integer indices of the bars in the visible range rounded in more wide direction\n  _internal_visibleStrictRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_strictRange();\n  }\n  _internal_visibleLogicalRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_logicalRange();\n  }\n  _internal_visibleTimeRange() {\n    const visibleBars = this._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const range = {\n      from: visibleBars._internal_left(),\n      to: visibleBars._internal_right()\n    };\n    return this._internal_timeRangeForLogicalRange(range);\n  }\n  _internal_timeRangeForLogicalRange(range) {\n    const from = Math.round(range.from);\n    const to = Math.round(range.to);\n    const firstIndex = ensureNotNull(this._private__firstIndex());\n    const lastIndex = ensureNotNull(this._private__lastIndex());\n    return {\n      from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n      to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to)))\n    };\n  }\n  _internal_logicalRangeForTimeRange(range) {\n    return {\n      from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n      to: ensureNotNull(this._internal_timeToIndex(range.to, true))\n    };\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_setWidth(newWidth) {\n    if (!isFinite(newWidth) || newWidth <= 0) {\n      return;\n    }\n    if (this._private__width === newWidth) {\n      return;\n    }\n    // when we change the width and we need to correct visible range because of fixing left edge\n    // we need to check the previous visible range rather than the new one\n    // because it might be updated by changing width, bar spacing, etc\n    // but we need to try to keep the same range\n    const previousVisibleRange = this._internal_visibleLogicalRange();\n    const oldWidth = this._private__width;\n    this._private__width = newWidth;\n    this._private__visibleRangeInvalidated = true;\n    if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n      // recalculate bar spacing\n      const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n      this._private__barSpacing = newBarSpacing;\n    }\n    // if time scale is scrolled to the end of data and we have fixed right edge\n    // keep left edge instead of right\n    // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n    if (this._private__options.fixLeftEdge) {\n      // note that logical left range means not the middle of a bar (it's the left border)\n      if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n        const delta = oldWidth - newWidth;\n        // reduce  _rightOffset means move right\n        // we could move more than required - this will be fixed by _correctOffset()\n        this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n    // updating bar spacing should be first because right offset depends on it\n    this._private__correctBarSpacing();\n    this._private__correctOffset();\n  }\n  _internal_indexToCoordinate(index) {\n    if (this._internal_isEmpty() || !isInteger(index)) {\n      return 0;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const deltaFromRight = baseIndex + this._private__rightOffset - index;\n    const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n    return coordinate;\n  }\n  _internal_indexesToCoordinates(points, visibleRange) {\n    const baseIndex = this._internal_baseIndex();\n    const indexFrom = visibleRange === undefined ? 0 : visibleRange.from;\n    const indexTo = visibleRange === undefined ? points.length : visibleRange.to;\n    for (let i = indexFrom; i < indexTo; i++) {\n      const index = points[i]._internal_time;\n      const deltaFromRight = baseIndex + this._private__rightOffset - index;\n      const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n      points[i]._internal_x = coordinate;\n    }\n  }\n  _internal_coordinateToIndex(x, considerIgnoreWhitespace) {\n    const index = Math.ceil(this._private__coordinateToFloatIndex(x));\n    if (!considerIgnoreWhitespace || !this._private__options.ignoreWhitespaceIndices || this._private__shouldConsiderIndex(index)) {\n      return index;\n    }\n    return this._private__findNearestIndexWithData(index);\n  }\n  _internal_setRightOffset(offset) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__rightOffset = offset;\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_barSpacing() {\n    return this._private__barSpacing;\n  }\n  _internal_setBarSpacing(newBarSpacing) {\n    this._private__setBarSpacing(newBarSpacing);\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_rightOffset() {\n    return this._private__rightOffset;\n  }\n  // eslint-disable-next-line complexity\n  _internal_marks() {\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    if (this._private__timeMarksCache !== null) {\n      return this._private__timeMarksCache;\n    }\n    const spacing = this._private__barSpacing;\n    const fontSize = this._private__model._internal_options()['layout'].fontSize;\n    const pixelsPer8Characters = (fontSize + 4) * 5;\n    const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n    const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n    const indexPerLabel = Math.round(maxLabelWidth / spacing);\n    const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n    const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n    const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n    const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth, this._private__options.ignoreWhitespaceIndices, this._private__indicesWithData, this._private__indicesWithDataUpdateId);\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n    const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n    const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n    const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n    const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n    const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n    let targetIndex = 0;\n    for (const tm of items) {\n      if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n        continue;\n      }\n      let label;\n      if (targetIndex < this._private__labels.length) {\n        label = this._private__labels[targetIndex];\n        label.coord = this._internal_indexToCoordinate(tm.index);\n        label.label = this._private__formatLabel(tm);\n        label.weight = tm.weight;\n      } else {\n        label = {\n          needAlignCoordinate: false,\n          coord: this._internal_indexToCoordinate(tm.index),\n          label: this._private__formatLabel(tm),\n          weight: tm.weight\n        };\n        this._private__labels.push(label);\n      }\n      if (this._private__barSpacing > maxLabelWidth / 2 && !isAllScalingAndScrollingDisabled) {\n        // if there is enough space then let's show all tick marks as usual\n        label.needAlignCoordinate = false;\n      } else {\n        // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n        // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n        label.needAlignCoordinate = isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel || isRightEdgeFixed && tm.index >= indexOfSecondLastLabel;\n      }\n      targetIndex++;\n    }\n    this._private__labels.length = targetIndex;\n    this._private__timeMarksCache = this._private__labels;\n    return this._private__labels;\n  }\n  _internal_restoreDefault() {\n    this._private__visibleRangeInvalidated = true;\n    this._internal_setBarSpacing(this._private__options.barSpacing);\n    this._internal_setRightOffset(this._private__options.rightOffset);\n  }\n  _internal_setBaseIndex(baseIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__baseIndexOrNull = baseIndex;\n    this._private__correctOffset();\n    this._private__doFixLeftEdge();\n  }\n  /**\n   * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n   *\n   * @param zoomPoint - X coordinate of the point to apply the zoom.\n   * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n   * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n   * Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoom(zoomPoint, scale) {\n    const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n    const barSpacing = this._internal_barSpacing();\n    const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n    // zoom in/out bar spacing\n    this._internal_setBarSpacing(newBarSpacing);\n    if (!this._private__options.rightBarStaysOnScroll) {\n      // and then correct right offset to move index under zoomPoint back to its coordinate\n      this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n    }\n  }\n  _internal_startScale(x) {\n    if (this._private__scrollStartPoint) {\n      this._internal_endScroll();\n    }\n    if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scaleStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scaleTo(x) {\n    if (this._private__commonTransitionStartState === null) {\n      return;\n    }\n    const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n    const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n    if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n      return;\n    }\n    this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n  }\n  _internal_endScale() {\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_startScroll(x) {\n    if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scrollTo(x) {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n    this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n    this._private__visibleRangeInvalidated = true;\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n  }\n  _internal_endScroll() {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_scrollToRealTime() {\n    this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n  }\n  _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n    if (!isFinite(offset)) {\n      throw new RangeError('offset is required and must be finite number');\n    }\n    if (!isFinite(animationDuration) || animationDuration <= 0) {\n      throw new RangeError('animationDuration (optional) must be finite positive number');\n    }\n    const source = this._private__rightOffset;\n    const animationStart = performance.now();\n    this._private__model._internal_setTimeScaleAnimation({\n      _internal_finished: time => (time - animationStart) / animationDuration >= 1,\n      _internal_getPosition: time => {\n        const animationProgress = (time - animationStart) / animationDuration;\n        const finishAnimation = animationProgress >= 1;\n        return finishAnimation ? offset : source + (offset - source) * animationProgress;\n      }\n    });\n  }\n  _internal_update(newPoints, firstChangedPointIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__points = newPoints;\n    this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n    this._private__correctOffset();\n  }\n  _internal_visibleBarsChanged() {\n    return this._private__visibleBarsChanged;\n  }\n  _internal_logicalRangeChanged() {\n    return this._private__logicalRangeChanged;\n  }\n  _internal_optionsApplied() {\n    return this._private__optionsApplied;\n  }\n  _internal_baseIndex() {\n    // null is used to known that baseIndex is not set yet\n    // so in methods which should known whether it is set or not\n    // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n    // see minRightOffset for example\n    return this._private__baseIndexOrNull || 0;\n  }\n  _internal_setVisibleRange(range) {\n    const length = range._internal_count();\n    this._private__setBarSpacing(this._private__width / length);\n    this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n    this._private__correctOffset();\n    this._private__visibleRangeInvalidated = true;\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_fitContent() {\n    const first = this._private__firstIndex();\n    const last = this._private__lastIndex();\n    if (first === null || last === null) {\n      return;\n    }\n    this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n  }\n  _internal_setLogicalRange(range) {\n    const barRange = new RangeImpl(range.from, range.to);\n    this._internal_setVisibleRange(barRange);\n  }\n  _internal_formatDateTime(timeScalePoint) {\n    if (this._private__localizationOptions.timeFormatter !== undefined) {\n      return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n    }\n    return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n  }\n  _internal_recalculateIndicesWithData() {\n    if (!this._private__options.ignoreWhitespaceIndices) {\n      return;\n    }\n    this._private__indicesWithData.clear();\n    const series = this._private__model._internal_serieses();\n    for (const s of series) {\n      for (const index of s._internal_fulfilledIndices()) {\n        this._private__indicesWithData.set(index, true);\n      }\n    }\n    this._private__indicesWithDataUpdateId++;\n  }\n  _private__isAllScalingAndScrollingDisabled() {\n    const handleScroll = this._private__model._internal_options()['handleScroll'];\n    const handleScale = this._private__model._internal_options()['handleScale'];\n    return !handleScroll.horzTouchDrag && !handleScroll.mouseWheel && !handleScroll.pressedMouseMove && !handleScroll.vertTouchDrag && !handleScale.axisDoubleClickReset.time && !handleScale.axisPressedMouseMove.time && !handleScale.mouseWheel && !handleScale.pinch;\n  }\n  _private__firstIndex() {\n    return this._private__points.length === 0 ? null : 0;\n  }\n  _private__lastIndex() {\n    return this._private__points.length === 0 ? null : this._private__points.length - 1;\n  }\n  _private__rightOffsetForCoordinate(x) {\n    return (this._private__width - 1 - x) / this._private__barSpacing;\n  }\n  _private__coordinateToFloatIndex(x) {\n    const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n    const baseIndex = this._internal_baseIndex();\n    const index = baseIndex + this._private__rightOffset - deltaFromRight;\n    // JavaScript uses very strange rounding\n    // we need rounding to avoid problems with calculation errors\n    return Math.round(index * 1000000) / 1000000;\n  }\n  _private__setBarSpacing(newBarSpacing) {\n    const oldBarSpacing = this._private__barSpacing;\n    this._private__barSpacing = newBarSpacing;\n    this._private__correctBarSpacing();\n    // this._barSpacing might be changed in _correctBarSpacing\n    if (oldBarSpacing !== this._private__barSpacing) {\n      this._private__visibleRangeInvalidated = true;\n      this._private__resetTimeMarksCache();\n    }\n  }\n  _private__updateVisibleRange() {\n    if (!this._private__visibleRangeInvalidated) {\n      return;\n    }\n    this._private__visibleRangeInvalidated = false;\n    if (this._internal_isEmpty()) {\n      this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n      return;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const newBarsLength = this._private__width / this._private__barSpacing;\n    const rightBorder = this._private__rightOffset + baseIndex;\n    const leftBorder = rightBorder - newBarsLength + 1;\n    const logicalRange = new RangeImpl(leftBorder, rightBorder);\n    this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n  }\n  _private__correctBarSpacing() {\n    const barSpacing = clamp(this._private__barSpacing, this._private__minBarSpacing(), this._private__maxBarSpacing());\n    if (this._private__barSpacing !== barSpacing) {\n      this._private__barSpacing = barSpacing;\n      this._private__visibleRangeInvalidated = true;\n    }\n  }\n  _private__maxBarSpacing() {\n    if (this._private__options.maxBarSpacing > 0) {\n      // option takes precedance\n      return this._private__options.maxBarSpacing;\n    } else {\n      // half of the width is default value for maximum bar spacing\n      return this._private__width * 0.5;\n    }\n  }\n  _private__minBarSpacing() {\n    // if both options are enabled then limit bar spacing so that zooming-out is not possible\n    // if it would cause either the first or last points to move too far from an edge\n    if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n      return this._private__width / this._private__points.length;\n    }\n    return this._private__options.minBarSpacing;\n  }\n  _private__correctOffset() {\n    // block scrolling of to past\n    const minRightOffset = this._private__minRightOffset();\n    if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n      this._private__rightOffset = minRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n    // block scrolling of to future\n    const maxRightOffset = this._private__maxRightOffset();\n    if (this._private__rightOffset > maxRightOffset) {\n      this._private__rightOffset = maxRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n  }\n  _private__minRightOffset() {\n    const firstIndex = this._private__firstIndex();\n    const baseIndex = this._private__baseIndexOrNull;\n    if (firstIndex === null || baseIndex === null) {\n      return null;\n    }\n    const barsEstimation = this._private__options.fixLeftEdge ? this._private__width / this._private__barSpacing : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    return firstIndex - baseIndex - 1 + barsEstimation;\n  }\n  _private__maxRightOffset() {\n    return this._private__options.fixRightEdge ? 0 : this._private__width / this._private__barSpacing - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n  }\n  _private__saveCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = {\n      _internal_barSpacing: this._internal_barSpacing(),\n      _internal_rightOffset: this._internal_rightOffset()\n    };\n  }\n  _private__clearCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = null;\n  }\n  _private__formatLabel(tickMark) {\n    let formatter = this._private__formattedByWeight.get(tickMark.weight);\n    if (formatter === undefined) {\n      formatter = new FormattedLabelsCache(mark => {\n        return this._private__formatLabelImpl(mark);\n      }, this._private__horzScaleBehavior);\n      this._private__formattedByWeight.set(tickMark.weight, formatter);\n    }\n    return formatter._internal_format(tickMark);\n  }\n  _private__formatLabelImpl(tickMark) {\n    return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n  }\n  _private__setVisibleRange(newVisibleRange) {\n    const oldVisibleRange = this._private__visibleRange;\n    this._private__visibleRange = newVisibleRange;\n    if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n      this._private__visibleBarsChanged._internal_fire();\n    }\n    if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n      this._private__logicalRangeChanged._internal_fire();\n    }\n    // TODO: reset only coords in case when this._visibleBars has not been changed\n    this._private__resetTimeMarksCache();\n  }\n  _private__resetTimeMarksCache() {\n    this._private__timeMarksCache = null;\n  }\n  _private__invalidateTickMarks() {\n    this._private__resetTimeMarksCache();\n    this._private__formattedByWeight.clear();\n  }\n  _private__updateDateTimeFormatter() {\n    this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n  }\n  _private__doFixLeftEdge() {\n    if (!this._private__options.fixLeftEdge) {\n      return;\n    }\n    const firstIndex = this._private__firstIndex();\n    if (firstIndex === null) {\n      return;\n    }\n    const visibleRange = this._internal_visibleStrictRange();\n    if (visibleRange === null) {\n      return;\n    }\n    const delta = visibleRange._internal_left() - firstIndex;\n    if (delta < 0) {\n      const leftEdgeOffset = this._private__rightOffset - delta - 1;\n      this._internal_setRightOffset(leftEdgeOffset);\n    }\n    this._private__correctBarSpacing();\n  }\n  _private__doFixRightEdge() {\n    this._private__correctOffset();\n    this._private__correctBarSpacing();\n  }\n  _private__shouldConsiderIndex(index) {\n    if (!this._private__options.ignoreWhitespaceIndices) {\n      return true;\n    }\n    return this._private__indicesWithData.get(index) || false;\n  }\n  _private__findNearestIndexWithData(x) {\n    const gen = testNearestIntegers(x);\n    const maxIndex = this._private__lastIndex();\n    while (maxIndex) {\n      const index = gen.next().value;\n      if (this._private__indicesWithData.get(index)) {\n        return index;\n      }\n      if (index < 0 || index > maxIndex) {\n        break;\n      }\n    }\n    return x; // fallback to original index\n  }\n}\nfunction* testNearestIntegers(num) {\n  const rounded = Math.round(num);\n  const isRoundedDown = rounded < num;\n  let offset = 1;\n  while (true) {\n    if (isRoundedDown) {\n      yield rounded + offset;\n      yield rounded - offset;\n    } else {\n      yield rounded - offset;\n      yield rounded + offset;\n    }\n    offset++;\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n  /**\n   * Tracking Mode will be deactivated on touch end event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n  /**\n   * Tracking Mode will be deactivated on the next tap event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nfunction isPanePrimitive(source) {\n  return source instanceof Pane;\n}\nclass ChartModel {\n  constructor(invalidateHandler, options, horzScaleBehavior) {\n    this._private__panes = [];\n    this._private__serieses = [];\n    this._private__width = 0;\n    this._private__hoveredSource = null;\n    this._private__priceScalesOptionsChanged = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__gradientColorsCache = null;\n    this._private__invalidateHandler = invalidateHandler;\n    this._private__options = options;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__colorParser = new ColorParser(this._private__options.layout.colorParsers);\n    this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n    this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n    this._private__crosshair = new Crosshair(this, options.crosshair);\n    this._private__magnet = new Magnet(options.crosshair);\n    this._private__getOrCreatePane(0);\n    this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n  }\n  _internal_fullUpdate() {\n    this._private__invalidate(InvalidateMask._internal_full());\n  }\n  _internal_lightUpdate() {\n    this._private__invalidate(InvalidateMask._internal_light());\n  }\n  _internal_cursorUpdate() {\n    this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n  }\n  _internal_updateSource(source) {\n    const inv = this._private__invalidationMaskForSource(source);\n    this._private__invalidate(inv);\n  }\n  _internal_hoveredSource() {\n    return this._private__hoveredSource;\n  }\n  _internal_setHoveredSource(source) {\n    if (this._private__hoveredSource?._internal_source === source?._internal_source && this._private__hoveredSource?._internal_object?._internal_externalId === source?._internal_object?._internal_externalId) {\n      return;\n    }\n    const prevSource = this._private__hoveredSource;\n    this._private__hoveredSource = source;\n    if (prevSource !== null) {\n      this._internal_updateSource(prevSource._internal_source);\n    }\n    // additional check to prevent unnecessary updates of same source\n    if (source !== null && source._internal_source !== prevSource?._internal_source) {\n      this._internal_updateSource(source._internal_source);\n    }\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._private__panes.forEach(p => p._internal_applyScaleOptions(options));\n    if (options.timeScale !== undefined) {\n      this._private__timeScale._internal_applyOptions(options.timeScale);\n    }\n    if (options.localization !== undefined) {\n      this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n    }\n    if (options.leftPriceScale || options.rightPriceScale) {\n      this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    this._internal_fullUpdate();\n  }\n  _internal_applyPriceScaleOptions(priceScaleId, options) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n      this._internal_applyOptions({\n        leftPriceScale: options\n      });\n      return;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    } else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n      this._internal_applyOptions({\n        rightPriceScale: options\n      });\n      return;\n    }\n    const res = this._internal_findPriceScale(priceScaleId);\n    if (res === null) {\n      {\n        throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n      }\n    }\n    res._internal_priceScale._internal_applyOptions(options);\n    this._private__priceScalesOptionsChanged._internal_fire();\n  }\n  _internal_findPriceScale(priceScaleId) {\n    for (const pane of this._private__panes) {\n      const priceScale = pane._internal_priceScaleById(priceScaleId);\n      if (priceScale !== null) {\n        return {\n          _internal_pane: pane,\n          _internal_priceScale: priceScale\n        };\n      }\n    }\n    return null;\n  }\n  _internal_timeScale() {\n    return this._private__timeScale;\n  }\n  _internal_panes() {\n    return this._private__panes;\n  }\n  _internal_crosshairSource() {\n    return this._private__crosshair;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_setPaneHeight(pane, height) {\n    pane._internal_setHeight(height);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._private__timeScale._internal_setWidth(this._private__width);\n    this._private__panes.forEach(pane => pane._internal_setWidth(width));\n    this._internal_recalculateAllPanes();\n  }\n  _internal_removePane(index) {\n    if (this._private__panes.length === 1) {\n      return;\n    }\n    assert(index >= 0 && index < this._private__panes.length, 'Invalid pane index');\n    this._private__panes.splice(index, 1);\n    this._internal_fullUpdate();\n  }\n  _internal_changePanesHeight(paneIndex, height) {\n    if (this._private__panes.length < 2) {\n      return;\n    }\n    assert(paneIndex >= 0 && paneIndex < this._private__panes.length, 'Invalid pane index');\n    const targetPane = this._private__panes[paneIndex];\n    const totalStretch = this._private__panes.reduce((prevValue, pane) => prevValue + pane._internal_stretchFactor(), 0);\n    const totalHeight = this._private__panes.reduce((prevValue, pane) => prevValue + pane._internal_height(), 0);\n    const maxPaneHeight = totalHeight - MIN_PANE_HEIGHT * (this._private__panes.length - 1);\n    height = Math.min(maxPaneHeight, Math.max(MIN_PANE_HEIGHT, height));\n    const pixelStretchFactor = totalStretch / totalHeight;\n    const oldHeight = targetPane._internal_height();\n    targetPane._internal_setStretchFactor(height * pixelStretchFactor);\n    let otherPanesChange = height - oldHeight;\n    let panesCount = this._private__panes.length - 1;\n    for (const pane of this._private__panes) {\n      if (pane !== targetPane) {\n        const newPaneHeight = Math.min(maxPaneHeight, Math.max(30, pane._internal_height() - otherPanesChange / panesCount));\n        otherPanesChange -= pane._internal_height() - newPaneHeight;\n        panesCount -= 1;\n        const newStretchFactor = newPaneHeight * pixelStretchFactor;\n        pane._internal_setStretchFactor(newStretchFactor);\n      }\n    }\n    this._internal_fullUpdate();\n  }\n  _internal_swapPanes(first, second) {\n    assert(first >= 0 && first < this._private__panes.length && second >= 0 && second < this._private__panes.length, 'Invalid pane index');\n    const firstPane = this._private__panes[first];\n    const secondPane = this._private__panes[second];\n    this._private__panes[first] = secondPane;\n    this._private__panes[second] = firstPane;\n    this._internal_fullUpdate();\n  }\n  _internal_startScalePrice(pane, priceScale, x) {\n    pane._internal_startScalePrice(priceScale, x);\n  }\n  _internal_scalePriceTo(pane, priceScale, x) {\n    pane._internal_scalePriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_endScalePrice(pane, priceScale) {\n    pane._internal_endScalePrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_startScrollPrice(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_startScrollPrice(priceScale, x);\n  }\n  _internal_scrollPriceTo(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_scrollPriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_endScrollPrice(pane, priceScale) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_endScrollPrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_resetPriceScale(pane, priceScale) {\n    pane._internal_resetPriceScale(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_startScaleTime(position) {\n    this._private__timeScale._internal_startScale(position);\n  }\n  /**\n   * Zoom in/out the chart (depends on scale value).\n   *\n   * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n   * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoomTime(pointX, scale) {\n    const timeScale = this._internal_timeScale();\n    if (timeScale._internal_isEmpty() || scale === 0) {\n      return;\n    }\n    const timeScaleWidth = timeScale._internal_width();\n    pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n    timeScale._internal_zoom(pointX, scale);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_scrollChart(x) {\n    this._internal_startScrollTime(0);\n    this._internal_scrollTimeTo(x);\n    this._internal_endScrollTime();\n  }\n  _internal_scaleTimeTo(x) {\n    this._private__timeScale._internal_scaleTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScaleTime() {\n    this._private__timeScale._internal_endScale();\n    this._internal_lightUpdate();\n  }\n  _internal_startScrollTime(x) {\n    this._private__timeScale._internal_startScroll(x);\n  }\n  _internal_scrollTimeTo(x) {\n    this._private__timeScale._internal_scrollTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScrollTime() {\n    this._private__timeScale._internal_endScroll();\n    this._internal_lightUpdate();\n  }\n  _internal_serieses() {\n    return this._private__serieses;\n  }\n  _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n    this._private__crosshair._internal_saveOriginCoord(x, y);\n    let price = NaN;\n    let index = this._private__timeScale._internal_coordinateToIndex(x, true);\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    if (visibleBars !== null) {\n      index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n    }\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue !== null) {\n      price = priceScale._internal_coordinateToPrice(y, firstValue);\n    }\n    price = this._private__magnet._internal_align(price, index, pane);\n    this._private__crosshair._internal_setPosition(index, price, pane);\n    this._internal_cursorUpdate();\n    if (!skipEvent) {\n      this._private__updateHoveredSourceOnChange(pane, x, y);\n      this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), {\n        x,\n        y\n      }, event);\n    }\n  }\n  // A position provided external (not from an internal event listener)\n  _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n    const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n    const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n    this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n  }\n  _internal_clearCurrentPosition(skipEvent) {\n    const crosshair = this._internal_crosshairSource();\n    crosshair._internal_clearPosition();\n    this._internal_cursorUpdate();\n    if (!skipEvent) {\n      this._private__crosshairMoved._internal_fire(null, null, null);\n    }\n  }\n  _internal_updateCrosshair() {\n    // apply magnet\n    const pane = this._private__crosshair._internal_pane();\n    if (pane !== null) {\n      const x = this._private__crosshair._internal_originCoordX();\n      const y = this._private__crosshair._internal_originCoordY();\n      this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n    }\n    this._private__crosshair._internal_updateAllViews();\n  }\n  _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n    const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n    if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n      this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n    }\n    const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n    const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n    // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n    // (and actually we cannot)\n    if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n      const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n      const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n      const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n      const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n      const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n      const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n      const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n      if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n        const compensationShift = newBaseIndex - currentBaseIndex;\n        this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n      }\n    }\n    this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n  }\n  _internal_recalculatePane(pane) {\n    if (pane !== null) {\n      pane._internal_recalculate();\n    }\n  }\n  _internal_paneForSource(source) {\n    if (isPanePrimitive(source)) {\n      return source;\n    }\n    const pane = this._private__panes.find(p => p._internal_orderedSources().includes(source));\n    return pane === undefined ? null : pane;\n  }\n  _internal_recalculateAllPanes() {\n    this._private__panes.forEach(p => p._internal_recalculate());\n    this._internal_updateCrosshair();\n  }\n  _internal_destroy() {\n    this._private__panes.forEach(p => p._internal_destroy());\n    this._private__panes.length = 0;\n    // to avoid memleaks\n    this._private__options.localization.priceFormatter = undefined;\n    this._private__options.localization.percentageFormatter = undefined;\n    this._private__options.localization.timeFormatter = undefined;\n  }\n  _internal_rendererOptionsProvider() {\n    return this._private__rendererOptionsProvider;\n  }\n  _internal_priceAxisRendererOptions() {\n    return this._private__rendererOptionsProvider._internal_options();\n  }\n  _internal_priceScalesOptionsChanged() {\n    return this._private__priceScalesOptionsChanged;\n  }\n  _internal_addSeriesToPane(series, paneIndex) {\n    const pane = this._private__getOrCreatePane(paneIndex);\n    this._private__addSeriesToPane(series, pane);\n    this._private__serieses.push(series);\n    if (this._private__serieses.length === 1) {\n      // call fullUpdate to recalculate chart's parts geometry\n      this._internal_fullUpdate();\n    } else {\n      this._internal_lightUpdate();\n    }\n  }\n  _internal_removeSeries(series) {\n    const pane = this._internal_paneForSource(series);\n    const seriesIndex = this._private__serieses.indexOf(series);\n    assert(seriesIndex !== -1, 'Series not found');\n    const paneImpl = ensureNotNull(pane);\n    this._private__serieses.splice(seriesIndex, 1);\n    paneImpl._internal_removeDataSource(series);\n    if (series._internal_destroy) {\n      series._internal_destroy();\n    }\n    this._private__timeScale._internal_recalculateIndicesWithData();\n    this._private__cleanupIfPaneIsEmpty(paneImpl);\n  }\n  _internal_moveSeriesToScale(series, targetScaleId) {\n    const pane = ensureNotNull(this._internal_paneForSource(series));\n    pane._internal_removeDataSource(series);\n    pane._internal_addDataSource(series, targetScaleId, ensureNotNull(series._internal_zorder()));\n  }\n  _internal_fitContent() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setFitContent();\n    this._private__invalidate(mask);\n  }\n  _internal_setTargetLogicalRange(range) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_applyRange(range);\n    this._private__invalidate(mask);\n  }\n  _internal_resetTimeScale() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_resetTimeScale();\n    this._private__invalidate(mask);\n  }\n  _internal_setBarSpacing(spacing) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setBarSpacing(spacing);\n    this._private__invalidate(mask);\n  }\n  _internal_setRightOffset(offset) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setRightOffset(offset);\n    this._private__invalidate(mask);\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setTimeScaleAnimation(animation);\n    this._private__invalidate(mask);\n  }\n  _internal_stopTimeScaleAnimation() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_stopTimeScaleAnimation();\n    this._private__invalidate(mask);\n  }\n  _internal_defaultVisiblePriceScaleId() {\n    return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n  }\n  _internal_moveSeriesToPane(series, newPaneIndex) {\n    assert(newPaneIndex >= 0, 'Index should be greater or equal to 0');\n    const fromPaneIndex = this._private__seriesPaneIndex(series);\n    if (newPaneIndex === fromPaneIndex) {\n      return;\n    }\n    const previousPane = ensureNotNull(this._internal_paneForSource(series));\n    previousPane._internal_removeDataSource(series);\n    const newPane = this._private__getOrCreatePane(newPaneIndex);\n    this._private__addSeriesToPane(series, newPane);\n    if (previousPane._internal_dataSources().length === 0) {\n      this._private__cleanupIfPaneIsEmpty(previousPane);\n    }\n  }\n  _internal_backgroundBottomColor() {\n    return this._private__backgroundBottomColor;\n  }\n  _internal_backgroundTopColor() {\n    return this._private__backgroundTopColor;\n  }\n  _internal_backgroundColorAtYPercentFromTop(percent) {\n    const bottomColor = this._private__backgroundBottomColor;\n    const topColor = this._private__backgroundTopColor;\n    if (bottomColor === topColor) {\n      // solid background\n      return bottomColor;\n    }\n    // gradient background\n    // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n    percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n    if (this._private__gradientColorsCache === null || this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n      this._private__gradientColorsCache = {\n        _internal_topColor: topColor,\n        _internal_bottomColor: bottomColor,\n        _internal_colors: new Map()\n      };\n    } else {\n      const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n      if (cachedValue !== undefined) {\n        return cachedValue;\n      }\n    }\n    const result = this._private__colorParser._internal_gradientColorAtPercent(topColor, bottomColor, percent / 100);\n    this._private__gradientColorsCache._internal_colors.set(percent, result);\n    return result;\n  }\n  _internal_getPaneIndex(pane) {\n    return this._private__panes.indexOf(pane);\n  }\n  _internal_colorParser() {\n    return this._private__colorParser;\n  }\n  _private__updateHoveredSourceOnChange(pane, x, y) {\n    if (pane) {\n      const hitTest = hitTestPane(pane, x, y);\n      this._internal_setHoveredSource(hitTest && {\n        _internal_source: hitTest._internal_source,\n        _internal_object: hitTest._internal_object\n      });\n    }\n  }\n  _private__getOrCreatePane(index) {\n    assert(index >= 0, 'Index should be greater or equal to 0');\n    index = Math.min(this._private__panes.length, index);\n    if (index < this._private__panes.length) {\n      return this._private__panes[index];\n    }\n    const pane = new Pane(this._private__timeScale, this);\n    this._private__panes.push(pane);\n    // we always do autoscaling on the creation\n    // if autoscale option is true, it is ok, just recalculate by invalidation mask\n    // if autoscale option is false, autoscale anyway on the first draw\n    // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n    const mask = InvalidateMask._internal_full();\n    mask._internal_invalidatePane(index, {\n      _internal_level: 0 /* InvalidationLevel.None */,\n      _internal_autoScale: true\n    });\n    this._private__invalidate(mask);\n    return pane;\n  }\n  _private__seriesPaneIndex(series) {\n    return this._private__panes.findIndex(pane => pane._internal_series().includes(series));\n  }\n  _private__paneInvalidationMask(pane, level) {\n    const inv = new InvalidateMask(level);\n    if (pane !== null) {\n      const index = this._private__panes.indexOf(pane);\n      inv._internal_invalidatePane(index, {\n        _internal_level: level\n      });\n    }\n    return inv;\n  }\n  _private__invalidationMaskForSource(source, invalidateType) {\n    if (invalidateType === undefined) {\n      invalidateType = 2 /* InvalidationLevel.Light */;\n    }\n    return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n  }\n  _private__invalidate(mask) {\n    if (this._private__invalidateHandler) {\n      this._private__invalidateHandler(mask);\n    }\n    this._private__panes.forEach(pane => pane._internal_grid()._internal_paneView()._internal_update());\n  }\n  _private__addSeriesToPane(series, pane) {\n    const priceScaleId = series._internal_options().priceScaleId;\n    const targetScaleId = priceScaleId !== undefined ? priceScaleId : this._internal_defaultVisiblePriceScaleId();\n    pane._internal_addDataSource(series, targetScaleId);\n    if (!isDefaultPriceScale(targetScaleId)) {\n      // let's apply that options again to apply margins\n      series._internal_applyOptions(series._internal_options());\n    }\n  }\n  _private__getBackgroundColor(side) {\n    const layoutOptions = this._private__options['layout'];\n    if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n      return side === 0 /* BackgroundColorSide.Top */ ? layoutOptions.background.topColor : layoutOptions.background.bottomColor;\n    }\n    return layoutOptions.background.color;\n  }\n  _private__cleanupIfPaneIsEmpty(pane) {\n    if (pane._internal_dataSources().length === 0 && this._private__panes.length > 1) {\n      this._private__panes.splice(this._internal_getPaneIndex(pane), 1);\n      this._internal_fullUpdate();\n    }\n  }\n}\nfunction fillUpDownCandlesticksColors(options) {\n  if (options.borderColor !== undefined) {\n    options.borderUpColor = options.borderColor;\n    options.borderDownColor = options.borderColor;\n  }\n  if (options.wickColor !== undefined) {\n    options.wickUpColor = options.wickColor;\n    options.wickDownColor = options.wickColor;\n  }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n  /**\n   * Animation is always disabled\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n  /**\n   * Animation is always enabled.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n  /**\n   * Animation is active after new data.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n  if (minMove >= 1) {\n    return 0;\n  }\n  let i = 0;\n  for (; i < 8; i++) {\n    const intPart = Math.round(minMove);\n    const fractPart = Math.abs(intPart - minMove);\n    if (fractPart < 1e-8) {\n      return i;\n    }\n    minMove = minMove * 10;\n  }\n  return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n  /**\n   * Use the last bar data.\n   */\n  PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n  /**\n   * Use the last visible data of the chart viewport.\n   */\n  PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n  /** Solid color */\n  ColorType[\"Solid\"] = \"solid\";\n  /** Vertical gradient color */\n  ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n  return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n  return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n  /**\n   * The start of the year (e.g. it's the first tick mark in a year).\n   */\n  TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n  /**\n   * The start of the month (e.g. it's the first tick mark in a month).\n   */\n  TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n  /**\n   * A day of the month.\n   */\n  TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n  /**\n   * A time without seconds.\n   */\n  TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n  /**\n   * A time with seconds.\n   */\n  TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\nconst getMonth = date => date.getUTCMonth() + 1;\nconst getDay = date => date.getUTCDate();\nconst getYear = date => date.getUTCFullYear();\nconst dd = date => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'long'\n});\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'short'\n});\nconst MM = date => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = date => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = date => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n  return format.replace(/yyyy/g, yyyy(date)).replace(/yy/g, yy(date)).replace(/MMMM/g, MMMM(date, locale)).replace(/MMM/g, MMM(date, locale)).replace(/MM/g, MM(date)).replace(/dd/g, dd(date));\n}\nclass DateFormatter {\n  constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n    this._private__dateFormat = dateFormat;\n    this._private__locale = locale;\n  }\n  _internal_format(date) {\n    return formatDate(date, this._private__dateFormat, this._private__locale);\n  }\n}\nclass TimeFormatter {\n  constructor(format) {\n    this._private__formatStr = format || '%h:%m:%s';\n  }\n  _internal_format(date) {\n    return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n  }\n}\nconst defaultParams = {\n  _internal_dateFormat: 'yyyy-MM-dd',\n  _internal_timeFormat: '%h:%m:%s',\n  _internal_dateTimeSeparator: ' ',\n  _internal_locale: 'default'\n};\nclass DateTimeFormatter {\n  constructor(params = {}) {\n    const formatterParams = {\n      ...defaultParams,\n      ...params\n    };\n    this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n    this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n    this._private__separator = formatterParams._internal_dateTimeSeparator;\n  }\n  _internal_format(dateTime) {\n    return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n  }\n}\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n  const formatOptions = {};\n  switch (tickMarkType) {\n    case 0 /* TickMarkType.Year */:\n      formatOptions.year = 'numeric';\n      break;\n    case 1 /* TickMarkType.Month */:\n      formatOptions.month = 'short';\n      break;\n    case 2 /* TickMarkType.DayOfMonth */:\n      formatOptions.day = 'numeric';\n      break;\n    case 3 /* TickMarkType.Time */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      break;\n    case 4 /* TickMarkType.TimeWithSeconds */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      formatOptions.second = '2-digit';\n      break;\n  }\n  const date = timePoint._internal_businessDay === undefined ? new Date(timePoint._internal_timestamp * 1000) : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n  // from given date we should use only as UTC date or timestamp\n  // but to format as locale date we can convert UTC date to local date\n  const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\nfunction hours(count) {\n  return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n  return count * 60 * 1000;\n}\nfunction seconds(count) {\n  return count * 1000;\n}\nconst intradayWeightDivisors = [{\n  _internal_divisor: seconds(1),\n  _internal_weight: 10 /* TickMarkWeight.Second */\n}, {\n  _internal_divisor: minutes(1),\n  _internal_weight: 20 /* TickMarkWeight.Minute1 */\n}, {\n  _internal_divisor: minutes(5),\n  _internal_weight: 21 /* TickMarkWeight.Minute5 */\n}, {\n  _internal_divisor: minutes(30),\n  _internal_weight: 22 /* TickMarkWeight.Minute30 */\n}, {\n  _internal_divisor: hours(1),\n  _internal_weight: 30 /* TickMarkWeight.Hour1 */\n}, {\n  _internal_divisor: hours(3),\n  _internal_weight: 31 /* TickMarkWeight.Hour3 */\n}, {\n  _internal_divisor: hours(6),\n  _internal_weight: 32 /* TickMarkWeight.Hour6 */\n}, {\n  _internal_divisor: hours(12),\n  _internal_weight: 33 /* TickMarkWeight.Hour12 */\n}];\nfunction weightByTime(currentDate, prevDate) {\n  if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n    return 70 /* TickMarkWeight.Year */;\n  } else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n    return 60 /* TickMarkWeight.Month */;\n  } else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n    return 50 /* TickMarkWeight.Day */;\n  }\n  for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n    if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n      return intradayWeightDivisors[i]._internal_weight;\n    }\n  }\n  return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n  return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n  if (sortedTimePoints.length === 0) {\n    return;\n  }\n  let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n  let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n  let totalTimeDiff = 0;\n  for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n    const currentPoint = sortedTimePoints[index];\n    const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n    if (prevDate !== null) {\n      currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n    }\n    totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n    prevTime = cast(currentPoint.time)._internal_timestamp;\n    prevDate = currentDate;\n  }\n  if (startIndex === 0 && sortedTimePoints.length > 1) {\n    // let's guess a weight for the first point\n    // let's say the previous point was average time back in the history\n    const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n    const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n    sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n  }\n}\nfunction businessDayConverter(time) {\n  let businessDay = time;\n  if (isString(time)) {\n    businessDay = stringToBusinessDay(time);\n  }\n  if (!isBusinessDay(businessDay)) {\n    throw new Error('time must be of type BusinessDay');\n  }\n  const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n  return {\n    _internal_timestamp: Math.round(date.getTime() / 1000),\n    _internal_businessDay: businessDay\n  };\n}\nfunction timestampConverter(time) {\n  if (!isUTCTimestamp(time)) {\n    throw new Error('time must be of type isUTCTimestamp');\n  }\n  return {\n    _internal_timestamp: time\n  };\n}\nfunction selectTimeConverter(data) {\n  if (data.length === 0) {\n    return null;\n  }\n  if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n    return businessDayConverter;\n  }\n  return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n  if (isUTCTimestamp(time)) {\n    return timestampConverter(time);\n  }\n  if (!isBusinessDay(time)) {\n    return businessDayConverter(stringToBusinessDay(time));\n  }\n  return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n  {\n    // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n    // but parses them in 'implementation specific' way\n    // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n    // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n    // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n    // but let's do this in development build only because of perf\n    if (!validDateRegex.test(value)) {\n      throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n  }\n  const d = new Date(value);\n  if (isNaN(d.getTime())) {\n    throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n  }\n  return {\n    day: d.getUTCDate(),\n    month: d.getUTCMonth() + 1,\n    year: d.getUTCFullYear()\n  };\n}\nfunction convertStringToBusinessDay(value) {\n  if (isString(value.time)) {\n    value.time = stringToBusinessDay(value.time);\n  }\n}\nfunction convertStringsToBusinessDays(data) {\n  return data.forEach(convertStringToBusinessDay);\n}\n\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n  switch (weight) {\n    case 0 /* TickMarkWeight.LessThanSecond */:\n    case 10 /* TickMarkWeight.Second */:\n      return timeVisible ? secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 20 /* TickMarkWeight.Minute1 */:\n    case 21 /* TickMarkWeight.Minute5 */:\n    case 22 /* TickMarkWeight.Minute30 */:\n    case 30 /* TickMarkWeight.Hour1 */:\n    case 31 /* TickMarkWeight.Hour3 */:\n    case 32 /* TickMarkWeight.Hour6 */:\n    case 33 /* TickMarkWeight.Hour12 */:\n      return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 50 /* TickMarkWeight.Day */:\n      return 2 /* TickMarkType.DayOfMonth */;\n    case 60 /* TickMarkWeight.Month */:\n      return 1 /* TickMarkType.Month */;\n    case 70 /* TickMarkWeight.Year */:\n      return 0 /* TickMarkType.Year */;\n  }\n}\nclass HorzScaleBehaviorTime {\n  options() {\n    return this._private__options;\n  }\n  setOptions(options) {\n    this._private__options = options;\n    this.updateFormatter(options.localization);\n  }\n  preprocessData(data) {\n    if (Array.isArray(data)) {\n      convertStringsToBusinessDays(data);\n    } else {\n      convertStringToBusinessDay(data);\n    }\n  }\n  createConverterToInternalObj(data) {\n    return ensureNotNull(selectTimeConverter(data));\n  }\n  key(item) {\n    // eslint-disable-next-line no-restricted-syntax\n    if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n      return item._internal_timestamp;\n    } else {\n      return this.key(this.convertHorzItemToInternal(item));\n    }\n  }\n  cacheKey(item) {\n    const time = item;\n    return time._internal_businessDay === undefined ? new Date(time._internal_timestamp * 1000).getTime() : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n  }\n  convertHorzItemToInternal(item) {\n    return convertTime(item);\n  }\n  updateFormatter(options) {\n    if (!this._private__options) {\n      return;\n    }\n    const dateFormat = options.dateFormat;\n    if (this._private__options.timeScale.timeVisible) {\n      this._private__dateTimeFormatter = new DateTimeFormatter({\n        _internal_dateFormat: dateFormat,\n        _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n        _internal_dateTimeSeparator: '   ',\n        _internal_locale: options.locale\n      });\n    } else {\n      this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n    }\n  }\n  formatHorzItem(item) {\n    const tp = item;\n    return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n  }\n  formatTickmark(tickMark, localizationOptions) {\n    const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n    const options = this._private__options.timeScale;\n    if (options.tickMarkFormatter !== undefined) {\n      const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n      if (tickMarkString !== null) {\n        return tickMarkString;\n      }\n    }\n    return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n  }\n  maxTickMarkWeight(tickMarks) {\n    let maxWeight = tickMarks.reduce(markWithGreaterWeight$2, tickMarks[0]).weight;\n    // special case: it looks strange if 15:00 is bold but 14:00 is not\n    // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n    if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n      maxWeight = 30 /* TickMarkWeight.Hour1 */;\n    }\n    return maxWeight;\n  }\n  fillWeightsForPoints(sortedTimePoints, startIndex) {\n    fillWeightsForPoints(sortedTimePoints, startIndex);\n  }\n  static _internal_applyDefaults(options) {\n    return merge({\n      localization: {\n        dateFormat: 'dd MMM \\'yy'\n      }\n    }, options ?? {});\n  }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\nfunction isFF() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // more accurate if available\n  if (navigator?.userAgentData?.platform) {\n    return navigator.userAgentData.platform === 'Windows';\n  }\n  return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  if (!navigator.userAgentData) {\n    return false;\n  }\n  return navigator.userAgentData.brands.some(brand => {\n    return brand.brand.includes('Chromium');\n  });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n  {\n    // eslint-disable-next-line no-console\n    console.warn(msg);\n  }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n  const integerWidth = Math.floor(originalSize.width);\n  const integerHeight = Math.floor(originalSize.height);\n  const width = integerWidth - integerWidth % 2;\n  const height = integerHeight - integerHeight % 2;\n  return size$1({\n    width,\n    height\n  });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n  return originalHeight + originalHeight % 2;\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n  return originalWidth + originalWidth % 2;\n}\nfunction preventScrollByWheelClick(el) {\n  if (!isChrome()) {\n    return;\n  }\n  el.addEventListener('mousedown', e => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (e.button === 1 /* MouseEventButton.Middle */) {\n      // prevent incorrect scrolling event\n      e.preventDefault();\n      return false;\n    }\n    return undefined;\n  });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n  constructor(target, handler, options) {\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__longTapTimeoutId = null;\n    this._private__longTapActive = false;\n    this._private__mouseMoveStartPosition = null;\n    this._private__touchMoveStartPosition = null;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__cancelClick = false;\n    this._private__cancelTap = false;\n    this._private__unsubscribeOutsideMouseEvents = null;\n    this._private__unsubscribeOutsideTouchEvents = null;\n    this._private__unsubscribeMobileSafariEvents = null;\n    this._private__unsubscribeMousemove = null;\n    this._private__unsubscribeRootMouseEvents = null;\n    this._private__unsubscribeRootTouchEvents = null;\n    this._private__startPinchMiddlePoint = null;\n    this._private__startPinchDistance = 0;\n    this._private__pinchPrevented = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__mousePressed = false;\n    this._private__lastTouchEventTimeStamp = 0;\n    // for touchstart/touchmove/touchend events we handle only first touch\n    // i.e. we don't support several active touches at the same time (except pinch event)\n    this._private__activeTouchId = null;\n    // accept all mouse leave events if it's not an iOS device\n    // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n    this._private__acceptMouseLeave = !isIOS();\n    /**\n     * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n     * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n     * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n     */\n    this._private__onFirefoxOutsideMouseUp = mouseUpEvent => {\n      this._private__mouseUpHandler(mouseUpEvent);\n    };\n    /**\n     * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n     * There are two possible solutions:\n     * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n     * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n     * https://developer.apple.com/forums/thread/125073\n     */\n    this._private__onMobileSafariDoubleClick = dblClickEvent => {\n      if (this._private__firesTouchEvents(dblClickEvent)) {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n          if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n          }\n          this._private__resetTapTimeout();\n        }\n      } else {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n          if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n          }\n          this._private__resetClickTimeout();\n        }\n      }\n    };\n    this._private__target = target;\n    this._private__handler = handler;\n    this._private__options = options;\n    this._private__init();\n  }\n  _internal_destroy() {\n    if (this._private__unsubscribeOutsideMouseEvents !== null) {\n      this._private__unsubscribeOutsideMouseEvents();\n      this._private__unsubscribeOutsideMouseEvents = null;\n    }\n    if (this._private__unsubscribeOutsideTouchEvents !== null) {\n      this._private__unsubscribeOutsideTouchEvents();\n      this._private__unsubscribeOutsideTouchEvents = null;\n    }\n    if (this._private__unsubscribeMousemove !== null) {\n      this._private__unsubscribeMousemove();\n      this._private__unsubscribeMousemove = null;\n    }\n    if (this._private__unsubscribeRootMouseEvents !== null) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (this._private__unsubscribeRootTouchEvents !== null) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    if (this._private__unsubscribeMobileSafariEvents !== null) {\n      this._private__unsubscribeMobileSafariEvents();\n      this._private__unsubscribeMobileSafariEvents = null;\n    }\n    this._private__clearLongTapTimeout();\n    this._private__resetClickTimeout();\n  }\n  _private__mouseEnterHandler(enterEvent) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n    this._private__unsubscribeMousemove = () => {\n      this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n    };\n    this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n    if (this._private__firesTouchEvents(enterEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(enterEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__resetClickTimeout() {\n    if (this._private__clickTimeoutId !== null) {\n      clearTimeout(this._private__clickTimeoutId);\n    }\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__resetTapTimeout() {\n    if (this._private__tapTimeoutId !== null) {\n      clearTimeout(this._private__tapTimeoutId);\n    }\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__mouseMoveHandler(moveEvent) {\n    if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n      return;\n    }\n    if (this._private__firesTouchEvents(moveEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(moveEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__touchMoveHandler(moveEvent) {\n    const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n    if (this._private__startPinchMiddlePoint !== null) {\n      return;\n    }\n    if (this._private__preventTouchDragProcess) {\n      return;\n    }\n    // prevent pinch if move event comes faster than the second touch\n    this._private__pinchPrevented = true;\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n    const {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n      return;\n    }\n    if (!this._private__touchMoveExceededManhattanDistance) {\n      // first time when current position exceeded manhattan distance\n      // vertical drag is more important than horizontal drag\n      // because we scroll the page vertically often than horizontally\n      const correctedXOffset = xOffset * 0.5;\n      // a drag can be only if touch page scroll isn't allowed\n      const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n      const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n      // if drag event happened then we should revert preventDefault state to original one\n      // and try to process the drag event\n      // else we shouldn't prevent default of the event and ignore processing the drag event\n      if (!isVertDrag && !isHorzDrag) {\n        this._private__preventTouchDragProcess = true;\n      }\n      this._private__touchMoveExceededManhattanDistance = true;\n      // if manhattan distance is more that 5 - we should cancel tap event\n      this._private__cancelTap = true;\n      this._private__clearLongTapTimeout();\n      this._private__resetTapTimeout();\n    }\n    if (!this._private__preventTouchDragProcess) {\n      const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n      this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n      // we should prevent default in case of touch only\n      // to prevent scroll of the page\n      preventDefault(moveEvent);\n    }\n  }\n  _private__mouseMoveWithDownHandler(moveEvent) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n    const {\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n      // if manhattan distance is more that 5 - we should cancel click event\n      this._private__cancelClick = true;\n      this._private__resetClickTimeout();\n    }\n    if (this._private__cancelClick) {\n      // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n      const compatEvent = this._private__makeCompatEvent(moveEvent);\n      this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n    }\n  }\n  _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n    const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n    const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n    const manhattanDistance = xOffset + yOffset;\n    return {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    };\n  }\n  // eslint-disable-next-line complexity\n  _private__touchEndHandler(touchEndEvent) {\n    let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null && touchEndEvent.touches.length === 0) {\n      // something went wrong, somehow we missed the required touchend event\n      // probably the browser has not sent this event\n      touch = touchEndEvent.changedTouches[0];\n    }\n    if (touch === null) {\n      return;\n    }\n    this._private__activeTouchId = null;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n    this._private__clearLongTapTimeout();\n    this._private__touchMoveStartPosition = null;\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n    ++this._private__tapCount;\n    if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n      if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n      }\n      this._private__resetTapTimeout();\n    } else {\n      if (!this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n        // do not fire mouse events if tap handler was executed\n        // prevent click event on new dom element (who appeared after tap)\n        if (this._private__handler._internal_tapEvent) {\n          preventDefault(touchEndEvent);\n        }\n      }\n    }\n    // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n    // we handle mouseDoubleClickEvent here ourselves\n    if (this._private__tapCount === 0) {\n      preventDefault(touchEndEvent);\n    }\n    if (touchEndEvent.touches.length === 0) {\n      if (this._private__longTapActive) {\n        this._private__longTapActive = false;\n        // prevent native click event\n        preventDefault(touchEndEvent);\n      }\n    }\n  }\n  _private__mouseUpHandler(mouseUpEvent) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n    this._private__mouseMoveStartPosition = null;\n    this._private__mousePressed = false;\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (isFF()) {\n      const rootElement = this._private__target.ownerDocument.documentElement;\n      rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    if (this._private__firesTouchEvents(mouseUpEvent)) {\n      return;\n    }\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n    ++this._private__clickCount;\n    if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n      if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n      }\n      this._private__resetClickTimeout();\n    } else {\n      if (!this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n      }\n    }\n  }\n  _private__clearLongTapTimeout() {\n    if (this._private__longTapTimeoutId === null) {\n      return;\n    }\n    clearTimeout(this._private__longTapTimeoutId);\n    this._private__longTapTimeoutId = null;\n  }\n  _private__touchStartHandler(downEvent) {\n    if (this._private__activeTouchId !== null) {\n      return;\n    }\n    const touch = downEvent.changedTouches[0];\n    this._private__activeTouchId = touch.identifier;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    this._private__cancelTap = false;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__touchMoveStartPosition = getPosition(touch);\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    {\n      const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n      const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n      this._private__unsubscribeRootTouchEvents = () => {\n        rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n        rootElement.removeEventListener('touchend', boundTouchEndHandler);\n      };\n      rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, {\n        passive: false\n      });\n      rootElement.addEventListener('touchend', boundTouchEndHandler, {\n        passive: false\n      });\n      this._private__clearLongTapTimeout();\n      this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n    if (!this._private__tapTimeoutId) {\n      this._private__tapCount = 0;\n      this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__tapPosition = getPosition(touch);\n    }\n  }\n  _private__mouseDownHandler(downEvent) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    if (isFF()) {\n      rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    this._private__cancelClick = false;\n    this._private__mouseMoveStartPosition = getPosition(downEvent);\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    {\n      const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n      const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n      this._private__unsubscribeRootMouseEvents = () => {\n        rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n        rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n      };\n      rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n      rootElement.addEventListener('mouseup', boundMouseUpHandler);\n    }\n    this._private__mousePressed = true;\n    if (this._private__firesTouchEvents(downEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n    if (!this._private__clickTimeoutId) {\n      this._private__clickCount = 0;\n      this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__clickPosition = getPosition(downEvent);\n    }\n  }\n  _private__init() {\n    this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n    // Do not show context menu when something went wrong\n    this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n    {\n      const doc = this._private__target.ownerDocument;\n      const outsideHandler = event => {\n        if (!this._private__handler._internal_mouseDownOutsideEvent) {\n          return;\n        }\n        if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n          return;\n        }\n        if (event.target && this._private__target.contains(event.target)) {\n          return;\n        }\n        this._private__handler._internal_mouseDownOutsideEvent();\n      };\n      this._private__unsubscribeOutsideTouchEvents = () => {\n        doc.removeEventListener('touchstart', outsideHandler);\n      };\n      this._private__unsubscribeOutsideMouseEvents = () => {\n        doc.removeEventListener('mousedown', outsideHandler);\n      };\n      doc.addEventListener('mousedown', outsideHandler);\n      doc.addEventListener('touchstart', outsideHandler, {\n        passive: true\n      });\n    }\n    if (isIOS()) {\n      this._private__unsubscribeMobileSafariEvents = () => {\n        this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n      };\n      this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n    }\n    this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n    this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), {\n      passive: true\n    });\n    preventScrollByWheelClick(this._private__target);\n    this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n    this._private__initPinch();\n    // Hey mobile Safari, what's up?\n    // If mobile Safari doesn't have any touchmove handler with passive=false\n    // it treats a touchstart and the following touchmove events as cancelable=false,\n    // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n    // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n    this._private__target.addEventListener('touchmove', () => {}, {\n      passive: false\n    });\n  }\n  _private__initPinch() {\n    if (this._private__handler._internal_pinchStartEvent === undefined && this._private__handler._internal_pinchEvent === undefined && this._private__handler._internal_pinchEndEvent === undefined) {\n      return;\n    }\n    this._private__target.addEventListener('touchstart', event => this._private__checkPinchState(event.touches), {\n      passive: true\n    });\n    this._private__target.addEventListener('touchmove', event => {\n      if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n        return;\n      }\n      if (this._private__handler._internal_pinchEvent !== undefined) {\n        const currentDistance = getDistance(event.touches[0], event.touches[1]);\n        const scale = currentDistance / this._private__startPinchDistance;\n        this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n        preventDefault(event);\n      }\n    }, {\n      passive: false\n    });\n    this._private__target.addEventListener('touchend', event => {\n      this._private__checkPinchState(event.touches);\n    });\n  }\n  _private__checkPinchState(touches) {\n    if (touches.length === 1) {\n      this._private__pinchPrevented = false;\n    }\n    if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n      this._private__stopPinch();\n    } else {\n      this._private__startPinch(touches);\n    }\n  }\n  _private__startPinch(touches) {\n    const box = getBoundingClientRect(this._private__target);\n    this._private__startPinchMiddlePoint = {\n      _internal_x: (touches[0].clientX - box.left + (touches[1].clientX - box.left)) / 2,\n      _internal_y: (touches[0].clientY - box.top + (touches[1].clientY - box.top)) / 2\n    };\n    this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n    if (this._private__handler._internal_pinchStartEvent !== undefined) {\n      this._private__handler._internal_pinchStartEvent();\n    }\n    this._private__clearLongTapTimeout();\n  }\n  _private__stopPinch() {\n    if (this._private__startPinchMiddlePoint === null) {\n      return;\n    }\n    this._private__startPinchMiddlePoint = null;\n    if (this._private__handler._internal_pinchEndEvent !== undefined) {\n      this._private__handler._internal_pinchEndEvent();\n    }\n  }\n  _private__mouseLeaveHandler(event) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    if (this._private__firesTouchEvents(event)) {\n      return;\n    }\n    if (!this._private__acceptMouseLeave) {\n      // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n      // just ignore this event if there was no mouse move or mouse enter events\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n    // accept all mouse leave events if it's not an iOS device\n    this._private__acceptMouseLeave = !isIOS();\n  }\n  _private__longTapHandler(event) {\n    const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n    this._private__cancelTap = true;\n    // long tap is active until touchend event with 0 touches occurred\n    this._private__longTapActive = true;\n  }\n  _private__firesTouchEvents(e) {\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n      return e.sourceCapabilities.firesTouchEvents;\n    }\n    return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n  }\n  _private__processTouchEvent(event, callback) {\n    if (callback) {\n      callback.call(this._private__handler, event);\n    }\n  }\n  _private__processMouseEvent(event, callback) {\n    if (!callback) {\n      return;\n    }\n    callback.call(this._private__handler, event);\n  }\n  _private__makeCompatEvent(event, touch) {\n    // TouchEvent has no clientX/Y coordinates:\n    // We have to use the last Touch instead\n    const eventLike = touch || event;\n    const box = this._private__target.getBoundingClientRect() || {\n      left: 0,\n      top: 0\n    };\n    return {\n      clientX: eventLike.clientX,\n      clientY: eventLike.clientY,\n      pageX: eventLike.pageX,\n      pageY: eventLike.pageY,\n      screenX: eventLike.screenX,\n      screenY: eventLike.screenY,\n      localX: eventLike.clientX - box.left,\n      localY: eventLike.clientY - box.top,\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n      _internal_srcType: event.type,\n      _internal_target: eventLike.target,\n      _internal_view: event.view,\n      _internal_preventDefault: () => {\n        if (event.type !== 'touchstart') {\n          // touchstart is passive and cannot be prevented\n          preventDefault(event);\n        }\n      }\n    };\n  }\n}\nfunction getBoundingClientRect(element) {\n  return element.getBoundingClientRect() || {\n    left: 0,\n    top: 0\n  };\n}\nfunction getDistance(p1, p2) {\n  const xDiff = p1.clientX - p2.clientX;\n  const yDiff = p1.clientY - p2.clientY;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction getPosition(eventLike) {\n  return {\n    _internal_x: eventLike.pageX,\n    _internal_y: eventLike.pageY\n  };\n}\nfunction eventTimeStamp(e) {\n  // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n  return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n  for (let i = 0; i < touches.length; ++i) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n  return null;\n}\nclass PaneSeparator {\n  constructor(chartWidget, topPaneIndex, bottomPaneIndex) {\n    this._private__handle = null;\n    this._private__mouseEventHandler = null;\n    this._private__resizeEnabled = true;\n    this._private__resizeInfo = null;\n    this._private__chartWidget = chartWidget;\n    this._private__topPane = chartWidget._internal_paneWidgets()[topPaneIndex];\n    this._private__bottomPane = chartWidget._internal_paneWidgets()[bottomPaneIndex];\n    this._private__rowElement = document.createElement('tr');\n    this._private__rowElement.style.height = 1 /* SeparatorConstants.SeparatorHeight */ + 'px';\n    this._private__cell = document.createElement('td');\n    this._private__cell.style.position = 'relative';\n    this._private__cell.style.padding = '0';\n    this._private__cell.style.margin = '0';\n    this._private__cell.setAttribute('colspan', '3');\n    this._private__updateBorderColor();\n    this._private__rowElement.appendChild(this._private__cell);\n    this._private__resizeEnabled = this._private__chartWidget._internal_options()['layout'].panes.enableResize;\n    if (!this._private__resizeEnabled) {\n      this._private__handle = null;\n      this._private__mouseEventHandler = null;\n    } else {\n      this._private__addResizableHandle();\n    }\n  }\n  _internal_destroy() {\n    if (this._private__mouseEventHandler !== null) {\n      this._private__mouseEventHandler._internal_destroy();\n    }\n  }\n  _internal_getElement() {\n    return this._private__rowElement;\n  }\n  _internal_getSize() {\n    return size$1({\n      width: this._private__topPane._internal_getSize().width,\n      height: 1 /* SeparatorConstants.SeparatorHeight */\n    });\n  }\n  _internal_getBitmapSize() {\n    return size$1({\n      width: this._private__topPane._internal_getBitmapSize().width,\n      height: 1 /* SeparatorConstants.SeparatorHeight */ * window.devicePixelRatio\n    });\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    ctx.fillStyle = this._private__chartWidget._internal_options()['layout'].panes.separatorColor;\n    ctx.fillRect(x, y, bitmapSize.width, bitmapSize.height);\n  }\n  _internal_update() {\n    this._private__updateBorderColor();\n    if (this._private__chartWidget._internal_options()['layout'].panes.enableResize !== this._private__resizeEnabled) {\n      this._private__resizeEnabled = this._private__chartWidget._internal_options()['layout'].panes.enableResize;\n      if (this._private__resizeEnabled) {\n        this._private__addResizableHandle();\n      } else {\n        if (this._private__handle !== null) {\n          this._private__cell.removeChild(this._private__handle._internal_backgroundElement);\n          this._private__cell.removeChild(this._private__handle._internal_element);\n          this._private__handle = null;\n        }\n        if (this._private__mouseEventHandler !== null) {\n          this._private__mouseEventHandler._internal_destroy();\n          this._private__mouseEventHandler = null;\n        }\n      }\n    }\n  }\n  _private__addResizableHandle() {\n    const backgroundElement = document.createElement('div');\n    const bgStyle = backgroundElement.style;\n    bgStyle.position = 'fixed';\n    bgStyle.display = 'none';\n    bgStyle.zIndex = '49';\n    bgStyle.top = '0';\n    bgStyle.left = '0';\n    bgStyle.width = '100%';\n    bgStyle.height = '100%';\n    bgStyle.cursor = 'row-resize';\n    this._private__cell.appendChild(backgroundElement);\n    const element = document.createElement('div');\n    const style = element.style;\n    style.position = 'absolute';\n    style.zIndex = '50';\n    style.top = '-4px';\n    style.height = '9px';\n    style.width = '100%';\n    style.backgroundColor = '';\n    style.cursor = 'row-resize';\n    this._private__cell.appendChild(element);\n    const handlers = {\n      _internal_mouseEnterEvent: this._private__mouseOverEvent.bind(this),\n      _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n      _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n      _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n      _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n      _internal_touchEndEvent: this._private__mouseUpEvent.bind(this)\n    };\n    this._private__mouseEventHandler = new MouseEventHandler(element, handlers, {\n      _internal_treatVertTouchDragAsPageScroll: () => false,\n      _internal_treatHorzTouchDragAsPageScroll: () => true\n    });\n    this._private__handle = {\n      _internal_element: element,\n      _internal_backgroundElement: backgroundElement\n    };\n  }\n  _private__updateBorderColor() {\n    this._private__cell.style.background = this._private__chartWidget._internal_options()['layout'].panes.separatorColor;\n  }\n  _private__mouseOverEvent(event) {\n    if (this._private__handle !== null) {\n      this._private__handle._internal_element.style.backgroundColor = this._private__chartWidget._internal_options()['layout'].panes.separatorHoverColor;\n    }\n  }\n  _private__mouseLeaveEvent(event) {\n    if (this._private__handle !== null && this._private__resizeInfo === null) {\n      this._private__handle._internal_element.style.backgroundColor = '';\n    }\n  }\n  _private__mouseDownEvent(event) {\n    if (this._private__handle === null) {\n      return;\n    }\n    const totalStretch = this._private__topPane._internal_state()._internal_stretchFactor() + this._private__bottomPane._internal_state()._internal_stretchFactor();\n    const totalHeight = this._private__topPane._internal_getSize().height + this._private__bottomPane._internal_getSize().height;\n    const pixelStretchFactor = totalStretch / totalHeight;\n    const minPaneStretch = 30 /* SeparatorConstants.MinPaneHeight */ * pixelStretchFactor;\n    if (totalStretch <= minPaneStretch * 2) {\n      // cannot resize panes that already have less than minimal height\n      // that's possible if there are many panes on the chart\n      return;\n    }\n    this._private__resizeInfo = {\n      _internal_startY: event.pageY,\n      _internal_prevStretchTopPane: this._private__topPane._internal_state()._internal_stretchFactor(),\n      _internal_maxPaneStretch: totalStretch - minPaneStretch,\n      _internal_totalStretch: totalStretch,\n      _internal_pixelStretchFactor: pixelStretchFactor,\n      _internal_minPaneStretch: minPaneStretch\n    };\n    this._private__handle._internal_backgroundElement.style.display = 'block';\n  }\n  _private__pressedMouseMoveEvent(event) {\n    const resizeInfo = this._private__resizeInfo;\n    if (resizeInfo === null) {\n      return;\n    }\n    const deltaY = event.pageY - resizeInfo._internal_startY;\n    const deltaStretchFactor = deltaY * resizeInfo._internal_pixelStretchFactor;\n    const upperPaneNewStretch = clamp(resizeInfo._internal_prevStretchTopPane + deltaStretchFactor, resizeInfo._internal_minPaneStretch, resizeInfo._internal_maxPaneStretch);\n    this._private__topPane._internal_state()._internal_setStretchFactor(upperPaneNewStretch);\n    this._private__bottomPane._internal_state()._internal_setStretchFactor(resizeInfo._internal_totalStretch - upperPaneNewStretch);\n    this._private__chartWidget._internal_model()._internal_fullUpdate();\n  }\n  _private__mouseUpEvent(event) {\n    if (this._private__resizeInfo === null || this._private__handle === null) {\n      return;\n    }\n    this._private__resizeInfo = null;\n    this._private__handle._internal_backgroundElement.style.display = 'none';\n  }\n}\nfunction distanceBetweenPoints(pos1, pos2) {\n  return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n  const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n  return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n  const lnDumpingCoeff = Math.log(dumpingCoeff);\n  return Math.log(1 /* Constants.EpsilonDistance */ * lnDumpingCoeff / -speed) / lnDumpingCoeff;\n}\nclass KineticAnimation {\n  constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n    this._private__position1 = null;\n    this._private__position2 = null;\n    this._private__position3 = null;\n    this._private__position4 = null;\n    this._private__animationStartPosition = null;\n    this._private__durationMsecs = 0;\n    this._private__speedPxPerMsec = 0;\n    this._private__minSpeed = minSpeed;\n    this._private__maxSpeed = maxSpeed;\n    this._private__dumpingCoeff = dumpingCoeff;\n    this._private__minMove = minMove;\n  }\n  _internal_addPosition(position, time) {\n    if (this._private__position1 !== null) {\n      if (this._private__position1._internal_time === time) {\n        this._private__position1._internal_position = position;\n        return;\n      }\n      if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n        return;\n      }\n    }\n    this._private__position4 = this._private__position3;\n    this._private__position3 = this._private__position2;\n    this._private__position2 = this._private__position1;\n    this._private__position1 = {\n      _internal_time: time,\n      _internal_position: position\n    };\n  }\n  _internal_start(position, time) {\n    if (this._private__position1 === null || this._private__position2 === null) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n      return;\n    }\n    // To calculate all the rest parameters we should calculate the speed af first\n    let totalDistance = 0;\n    const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n    const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n    // We're calculating weighted average speed\n    // Than more distance for a segment, than more its weight\n    const speedItems = [speed1];\n    const distanceItems = [distance1];\n    totalDistance += distance1;\n    if (this._private__position3 !== null) {\n      const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n      // stop at this moment if direction of the segment is opposite\n      if (Math.sign(speed2) === Math.sign(speed1)) {\n        const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n        speedItems.push(speed2);\n        distanceItems.push(distance2);\n        totalDistance += distance2;\n        if (this._private__position4 !== null) {\n          const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n          if (Math.sign(speed3) === Math.sign(speed1)) {\n            const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n            speedItems.push(speed3);\n            distanceItems.push(distance3);\n            totalDistance += distance3;\n          }\n        }\n      }\n    }\n    let resultSpeed = 0;\n    for (let i = 0; i < speedItems.length; ++i) {\n      resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n    }\n    if (Math.abs(resultSpeed) < this._private__minSpeed) {\n      return;\n    }\n    this._private__animationStartPosition = {\n      _internal_position: position,\n      _internal_time: time\n    };\n    this._private__speedPxPerMsec = resultSpeed;\n    this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n  }\n  _internal_getPosition(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const durationMsecs = time - startPosition._internal_time;\n    return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / Math.log(this._private__dumpingCoeff);\n  }\n  _internal_finished(time) {\n    return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n  }\n  _private__progressDuration(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const progress = time - startPosition._internal_time;\n    return Math.min(progress, this._private__durationMsecs);\n  }\n}\nconst svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"19\" fill=\"none\"><g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path fill=\"var(--stroke)\" d=\"M2 0H0v10h6v9h21.4l.5-1.3 6-15 1-2.7H23.7l-.5 1.3-.2.6a5 5 0 0 0-7-.9V0H2Zm20 17h4l5.2-13 .8-2h-7l-1 2.5-.2.5-1.5 3.8-.3.7V17Zm-.8-10a3 3 0 0 0 .7-2.7A3 3 0 1 0 16.8 7h4.4ZM14 7V2H2v6h6v9h4V7h2Z\"/><path fill=\"var(--fill)\" d=\"M14 2H2v6h6v9h6V2Zm12 15h-7l6-15h7l-6 15Zm-7-9a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/></g><defs><clipPath id=\"a\"><path fill=\"var(--stroke)\" d=\"M0 0h35v19H0z\"/></clipPath></defs></svg>`;\nconst css = `a#tv-attr-logo{--fill:#131722;--stroke:#fff;position:absolute;left:10px;bottom:10px;height:19px;width:35px;margin:0;padding:0;border:0;z-index:3;}a#tv-attr-logo[data-dark]{--fill:#D1D4DC;--stroke:#131722;}`;\n// This widget doesn't support dynamically responding to options changes\n// because it is expected that the `attributionLogo` option won't be changed\n// and this saves some bundle size.\nclass AttributionLogoWidget {\n  constructor(container, chart) {\n    this._private__element = undefined;\n    this._private__cssElement = undefined;\n    this._private__theme = undefined;\n    this._private__visible = false;\n    this._private__container = container;\n    this._private__chart = chart;\n    this._private__render();\n  }\n  _internal_update() {\n    this._private__render();\n  }\n  _internal_removeElement() {\n    if (this._private__element) {\n      this._private__container.removeChild(this._private__element);\n    }\n    if (this._private__cssElement) {\n      this._private__container.removeChild(this._private__cssElement);\n    }\n    this._private__element = undefined;\n    this._private__cssElement = undefined;\n  }\n  _private__shouldUpdate() {\n    return this._private__visible !== this._private__shouldBeVisible() || this._private__theme !== this._private__themeToUse();\n  }\n  _private__themeToUse() {\n    return this._private__chart._internal_model()._internal_colorParser()._internal_colorStringToGrayscale(this._private__chart._internal_options()['layout'].textColor) > 160 ? 'dark' : 'light';\n  }\n  _private__shouldBeVisible() {\n    return this._private__chart._internal_options()['layout'].attributionLogo;\n  }\n  _private__getUTMSource() {\n    const url = new URL(location.href);\n    if (!url.hostname) {\n      // ignore local testing\n      return '';\n    }\n    return '&utm_source=' + url.hostname + url.pathname;\n  }\n  _private__render() {\n    if (!this._private__shouldUpdate()) {\n      return;\n    }\n    this._internal_removeElement();\n    this._private__visible = this._private__shouldBeVisible();\n    if (this._private__visible) {\n      this._private__theme = this._private__themeToUse();\n      this._private__cssElement = document.createElement('style');\n      this._private__cssElement.innerText = css;\n      this._private__element = document.createElement('a');\n      this._private__element.href = `https://www.tradingview.com/?utm_medium=lwc-link&utm_campaign=lwc-chart${this._private__getUTMSource()}`;\n      this._private__element.title = 'Charting by TradingView';\n      this._private__element.id = 'tv-attr-logo';\n      this._private__element.target = '_blank';\n      this._private__element.innerHTML = svg;\n      this._private__element.toggleAttribute('data-dark', this._private__theme === 'dark');\n      this._private__container.appendChild(this._private__cssElement);\n      this._private__container.appendChild(this._private__element);\n    }\n  }\n}\nfunction createBoundCanvas(parentElement, size) {\n  const doc = ensureNotNull(parentElement.ownerDocument);\n  const canvas = doc.createElement('canvas');\n  parentElement.appendChild(canvas);\n  const binding = bindCanvasElementBitmapSizeTo(canvas, {\n    type: 'device-pixel-content-box',\n    options: {\n      allowResizeObserver: true\n    },\n    transform: (bitmapSize, canvasElementClientSize) => ({\n      width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n      height: Math.max(bitmapSize.height, canvasElementClientSize.height)\n    })\n  });\n  binding.resizeCanvasElement(size);\n  return binding;\n}\nfunction releaseCanvas(canvas) {\n  // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n  // Seems that iOS Safari stores canvas elements for some additional time internally.\n  // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n  // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n  canvas.width = 1;\n  canvas.height = 1;\n  canvas.getContext('2d')?.clearRect(0, 0, 1, 1);\n}\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n  if (renderer._internal_drawBackground) {\n    renderer._internal_drawBackground(target, isHovered, hitTestData);\n  }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n  renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourceViews(paneViewsGetter, drawRendererFn, source, pane) {\n  const views = paneViewsGetter(source, pane);\n  for (const view of views) {\n    const renderer = view._internal_renderer(pane);\n    if (renderer !== null) {\n      drawRendererFn(renderer);\n    }\n  }\n}\nfunction hasPriceScale(source) {\n  return source._internal_priceScale !== undefined;\n}\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n  return source => {\n    if (!hasPriceScale(source)) {\n      return [];\n    }\n    const psId = source._internal_priceScale()?._internal_id() ?? '';\n    if (psId !== priceScaleId) {\n      // exclude if source is using a different price scale.\n      return [];\n    }\n    return source._internal_pricePaneViews?.(zOrder) ?? [];\n  };\n}\nfunction recalculateOverlapping(views, direction, scaleHeight, rendererOptions) {\n  if (!views.length) {\n    return;\n  }\n  let currentGroupStart = 0;\n  const initLabelHeight = views[0]._internal_height(rendererOptions, true);\n  let spaceBeforeCurrentGroup = direction === 1 ? scaleHeight / 2 - (views[0]._internal_getFixedCoordinate() - initLabelHeight / 2) : views[0]._internal_getFixedCoordinate() - initLabelHeight / 2 - scaleHeight / 2;\n  spaceBeforeCurrentGroup = Math.max(0, spaceBeforeCurrentGroup);\n  for (let i = 1; i < views.length; i++) {\n    const view = views[i];\n    const prev = views[i - 1];\n    const height = prev._internal_height(rendererOptions, false);\n    const coordinate = view._internal_getFixedCoordinate();\n    const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n    const overlap = direction === 1 ? coordinate > prevFixedCoordinate - height : coordinate < prevFixedCoordinate + height;\n    if (overlap) {\n      const fixedCoordinate = prevFixedCoordinate - height * direction;\n      view._internal_setFixedCoordinate(fixedCoordinate);\n      const edgePoint = fixedCoordinate - direction * height / 2;\n      const outOfViewport = direction === 1 ? edgePoint < 0 : edgePoint > scaleHeight;\n      if (outOfViewport && spaceBeforeCurrentGroup > 0) {\n        // shift the whole group up or down\n        const desiredGroupShift = direction === 1 ? -1 - edgePoint : edgePoint - scaleHeight;\n        const possibleShift = Math.min(desiredGroupShift, spaceBeforeCurrentGroup);\n        for (let k = currentGroupStart; k < views.length; k++) {\n          views[k]._internal_setFixedCoordinate(views[k]._internal_getFixedCoordinate() + direction * possibleShift);\n        }\n        spaceBeforeCurrentGroup -= possibleShift;\n      }\n    } else {\n      currentGroupStart = i;\n      spaceBeforeCurrentGroup = direction === 1 ? prevFixedCoordinate - height - coordinate : coordinate - (prevFixedCoordinate + height);\n    }\n  }\n}\nfunction priceScaleCrosshairLabelVisible(crosshair) {\n  return crosshair.mode !== 2 /* CrosshairMode.Hidden */ && crosshair.horzLine.visible && crosshair.horzLine.labelVisible;\n}\nclass PriceAxisWidget {\n  constructor(pane, options, rendererOptionsProvider, side) {\n    this._private__priceScale = null;\n    this._private__size = null;\n    this._private__mousedown = false;\n    this._private__widthCache = new TextWidthCache(200);\n    this._private__font = null;\n    this._private__prevOptimalWidth = 0;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__pane = pane;\n    this._private__options = options;\n    this._private__layoutOptions = options['layout'];\n    this._private__rendererOptionsProvider = rendererOptionsProvider;\n    this._private__isLeft = side === 'left';\n    this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n    this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n    this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.left = '0';\n    this._private__cell.style.position = 'relative';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    const handler = {\n      _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n      _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n      _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n      _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n      _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n      _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n      _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this)\n    };\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n      _internal_treatVertTouchDragAsPageScroll: () => !this._private__options['handleScroll'].vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => true\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = null;\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_rendererOptions() {\n    const options = this._private__rendererOptionsProvider._internal_options();\n    const isFontChanged = this._private__font !== options._internal_font;\n    if (isFontChanged) {\n      this._private__widthCache._internal_reset();\n      this._private__font = options._internal_font;\n    }\n    return options;\n  }\n  _internal_optimalWidth() {\n    if (this._private__priceScale === null) {\n      return 0;\n    }\n    let tickMarkMaxWidth = 0;\n    const rendererOptions = this._internal_rendererOptions();\n    const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d', {\n      colorSpace: this._private__pane._internal_chart()._internal_options().layout.colorSpace\n    }));\n    ctx.save();\n    const tickMarks = this._private__priceScale._internal_marks();\n    ctx.font = this._private__baseFont();\n    if (tickMarks.length > 0) {\n      tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n    }\n    const views = this._private__backLabels();\n    for (let j = views.length; j--;) {\n      const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n      if (width > tickMarkMaxWidth) {\n        tickMarkMaxWidth = width;\n      }\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (firstValue !== null && this._private__size !== null && priceScaleCrosshairLabelVisible(this._private__options.crosshair)) {\n      const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n      const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n      tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n    }\n    ctx.restore();\n    const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n    const res = Math.ceil(rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner + rendererOptions._internal_paddingOuter + 5 /* Constants.LabelOffset */ + resultTickMarksMaxWidth);\n    // make it even, remove this after migration to perfect fancy canvas\n    return suggestPriceScaleWidth(res);\n  }\n  _internal_setSize(newSize) {\n    if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__topCanvasBinding.resizeCanvasElement(newSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n    }\n  }\n  _internal_getWidth() {\n    return ensureNotNull(this._private__size).width;\n  }\n  _internal_setPriceScale(priceScale) {\n    if (this._private__priceScale === priceScale) {\n      return;\n    }\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = priceScale;\n    priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n  }\n  _internal_priceScale() {\n    return this._private__priceScale;\n  }\n  _internal_reset() {\n    const pane = this._private__pane._internal_state();\n    const model = this._private__pane._internal_chart()._internal_model();\n    model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n  }\n  _internal_paint(type) {\n    if (this._private__size === null) {\n      return;\n    }\n    const canvasOptions = {\n      colorSpace: this._private__pane._internal_chart()._internal_options().layout.colorSpace\n    };\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__alignLabels();\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n        });\n        this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n        this._private__drawTickMarks(target);\n        this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n        this._private__drawBackLabels(target);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshairLabel(topTarget);\n      this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_update() {\n    // this call has side-effect - it regenerates marks on the price scale\n    this._private__priceScale?._internal_marks();\n  }\n  _private__mouseDownEvent(e) {\n    if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = true;\n    model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n  }\n  _private__pressedMouseMoveEvent(e) {\n    if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    model._internal_scalePriceTo(pane, priceScale, e.localY);\n  }\n  _private__mouseDownOutsideEvent() {\n    if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    if (this._private__mousedown) {\n      this._private__mousedown = false;\n      model._internal_endScalePrice(pane, priceScale);\n    }\n  }\n  _private__mouseUpEvent(e) {\n    if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = false;\n    model._internal_endScalePrice(pane, this._private__priceScale);\n  }\n  _private__mouseDoubleClickEvent(e) {\n    if (this._private__options['handleScale'].axisDoubleClickReset.price) {\n      this._internal_reset();\n    }\n  }\n  _private__mouseEnterEvent(e) {\n    if (this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    if (model._internal_options()['handleScale'].axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n      this._private__setCursor(1 /* CursorType.NsResize */);\n    }\n  }\n  _private__mouseLeaveEvent(e) {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n  _private__backLabels() {\n    const res = [];\n    const priceScale = this._private__priceScale === null ? undefined : this._private__priceScale;\n    const addViewsForSources = sources => {\n      for (let i = 0; i < sources.length; ++i) {\n        const source = sources[i];\n        const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n        for (let j = 0; j < views.length; j++) {\n          res.push(views[j]);\n        }\n      }\n    };\n    // calculate max and min coordinates for views on selection\n    // crosshair individually\n    addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n    return res;\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__pane._internal_state()._internal_model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, topColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio\n  }) {\n    if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n      return;\n    }\n    ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n    const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n    let left;\n    if (this._private__isLeft) {\n      left = bitmapSize.width - borderSize;\n    } else {\n      left = 0;\n    }\n    ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n  }\n  _private__drawTickMarks(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const tickMarks = this._private__priceScale._internal_marks();\n    const priceScaleOptions = this._private__priceScale._internal_options();\n    const rendererOptions = this._internal_rendererOptions();\n    const tickMarkLeftX = this._private__isLeft ? this._private__size.width - rendererOptions._internal_tickLength : 0;\n    if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.fillStyle = priceScaleOptions.borderColor;\n        const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n        const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n        const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n        ctx.beginPath();\n        for (const tickMark of tickMarks) {\n          ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      ctx.font = this._private__baseFont();\n      ctx.fillStyle = priceScaleOptions.textColor ?? this._private__layoutOptions.textColor;\n      ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      const textLeftX = this._private__isLeft ? Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) : Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n      const yMidCorrections = tickMarks.map(mark => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n      for (let i = tickMarks.length; i--;) {\n        const tickMark = tickMarks[i];\n        ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n      }\n    });\n  }\n  _private__alignLabels() {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    let center = this._private__size.height / 2;\n    const views = [];\n    const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n    const pane = this._private__pane;\n    const paneState = pane._internal_state();\n    const rendererOptions = this._internal_rendererOptions();\n    // if we are default price scale, append labels from no-scale\n    const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n    if (isDefault) {\n      this._private__pane._internal_state()._internal_orderedSources().forEach(source => {\n        if (paneState._internal_isOverlay(source)) {\n          orderedSources.push(source);\n        }\n      });\n    }\n    // we can use any, but let's use the first source as \"center\" one\n    const centerSource = this._private__priceScale._internal_dataSources()[0];\n    const priceScale = this._private__priceScale;\n    const updateForSources = sources => {\n      sources.forEach(source => {\n        const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n        // never align selected sources\n        sourceViews.forEach(view => {\n          view._internal_setFixedCoordinate(null);\n          if (view._internal_isVisible()) {\n            views.push(view);\n          }\n        });\n        if (centerSource === source && sourceViews.length > 0) {\n          center = sourceViews[0]._internal_coordinate();\n        }\n      });\n    };\n    // crosshair individually\n    updateForSources(orderedSources);\n    views.forEach(view => view._internal_setFixedCoordinate(view._internal_coordinate()));\n    const options = this._private__priceScale._internal_options();\n    if (!options.alignLabels) {\n      return;\n    }\n    this._private__fixLabelOverlap(views, rendererOptions, center);\n  }\n  _private__fixLabelOverlap(views, rendererOptions, center) {\n    if (this._private__size === null) {\n      return;\n    }\n    // split into two parts\n    const top = views.filter(view => view._internal_coordinate() <= center);\n    const bottom = views.filter(view => view._internal_coordinate() > center);\n    // sort top from center to top\n    top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n    // share center label\n    if (top.length && bottom.length) {\n      bottom.push(top[0]);\n    }\n    bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n    for (const view of views) {\n      const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n      const coordinate = view._internal_coordinate();\n      if (coordinate > -halfHeight && coordinate < halfHeight) {\n        view._internal_setFixedCoordinate(halfHeight);\n      }\n      if (coordinate > this._private__size.height - halfHeight && coordinate < this._private__size.height + halfHeight) {\n        view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n      }\n    }\n    recalculateOverlapping(top, 1, this._private__size.height, rendererOptions);\n    recalculateOverlapping(bottom, -1, this._private__size.height, rendererOptions);\n  }\n  _private__drawBackLabels(target) {\n    if (this._private__size === null) {\n      return;\n    }\n    const views = this._private__backLabels();\n    const rendererOptions = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(view => {\n      if (view._internal_isAxisLabelVisible()) {\n        const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n        renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n      }\n    });\n  }\n  _private__drawCrosshairLabel(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const views = []; // array of arrays\n    const pane = this._private__pane._internal_state();\n    const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n    if (v.length) {\n      views.push(v);\n    }\n    const ro = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(arr => {\n      arr.forEach(view => {\n        view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n      });\n    });\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n  }\n  _private__onMarksChanged() {\n    const width = this._internal_optimalWidth();\n    // avoid price scale is shrunk\n    // using < instead !== to avoid infinite changes\n    if (this._private__prevOptimalWidth < width) {\n      this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n    }\n    this._private__prevOptimalWidth = width;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n  }\n}\nfunction sourceBottomPaneViews$1(source, pane) {\n  return source._internal_bottomPaneViews?.(pane) ?? [];\n}\nfunction sourcePaneViews$1(source, pane) {\n  return source._internal_paneViews?.(pane) ?? [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n  return source._internal_labelPaneViews?.(pane) ?? [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n  return source._internal_topPaneViews?.(pane) ?? [];\n}\nclass PaneWidget {\n  constructor(chart, state) {\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__leftPriceAxisWidget = null;\n    this._private__rightPriceAxisWidget = null;\n    this._private__attributionLogoWidget = null;\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    this._private__clicked = new Delegate();\n    this._private__dblClicked = new Delegate();\n    this._private__prevPinchScale = 0;\n    this._private__longTap = false;\n    this._private__startTrackPoint = null;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__initCrosshairPosition = null;\n    this._private__scrollXAnimation = null;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__chart = chart;\n    this._private__state = state;\n    this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n    this._private__paneCell = document.createElement('td');\n    this._private__paneCell.style.padding = '0';\n    this._private__paneCell.style.position = 'relative';\n    const paneWrapper = document.createElement('div');\n    paneWrapper.style.width = '100%';\n    paneWrapper.style.height = '100%';\n    paneWrapper.style.position = 'relative';\n    paneWrapper.style.overflow = 'hidden';\n    this._private__leftAxisCell = document.createElement('td');\n    this._private__leftAxisCell.style.padding = '0';\n    this._private__rightAxisCell = document.createElement('td');\n    this._private__rightAxisCell.style.padding = '0';\n    this._private__paneCell.appendChild(paneWrapper);\n    this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__rowElement = document.createElement('tr');\n    this._private__rowElement.appendChild(this._private__leftAxisCell);\n    this._private__rowElement.appendChild(this._private__paneCell);\n    this._private__rowElement.appendChild(this._private__rightAxisCell);\n    this._internal_updatePriceAxisWidgetsStates();\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options()['handleScroll'].vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options()['handleScroll'].horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_destroy();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_destroy();\n    }\n    this._private__attributionLogoWidget = null;\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n      this._private__state._internal_destroy();\n    }\n    this._private__mouseEventHandler._internal_destroy();\n  }\n  _internal_state() {\n    return ensureNotNull(this._private__state);\n  }\n  _internal_setState(pane) {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = pane;\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n    }\n    this._internal_updatePriceAxisWidgetsStates();\n    if (this._private__chart._internal_paneWidgets().indexOf(this) === this._private__chart._internal_paneWidgets().length - 1) {\n      this._private__attributionLogoWidget = this._private__attributionLogoWidget ?? new AttributionLogoWidget(this._private__paneCell, this._private__chart);\n      this._private__attributionLogoWidget._internal_update();\n    } else {\n      this._private__attributionLogoWidget?._internal_removeElement();\n      this._private__attributionLogoWidget = null;\n    }\n  }\n  _internal_chart() {\n    return this._private__chart;\n  }\n  _internal_getElement() {\n    return this._private__rowElement;\n  }\n  _internal_updatePriceAxisWidgetsStates() {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__recreatePriceAxisWidgets();\n    if (this._private__model()._internal_serieses().length === 0) {\n      return;\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      const leftPriceScale = this._private__state._internal_leftPriceScale();\n      this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      const rightPriceScale = this._private__state._internal_rightPriceScale();\n      this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n    }\n  }\n  _internal_updatePriceAxisWidgets() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_update();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_update();\n    }\n  }\n  _internal_stretchFactor() {\n    return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n  }\n  _internal_setStretchFactor(stretchFactor) {\n    if (this._private__state) {\n      this._private__state._internal_setStretchFactor(stretchFactor);\n    }\n  }\n  _internal_mouseEnterEvent(event) {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n  }\n  _internal_mouseDownEvent(event) {\n    this._private__onMouseEvent();\n    this._private__mouseTouchDownEvent();\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseMoveEvent(event) {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n  }\n  _internal_mouseClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_mouseDoubleClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n  }\n  _internal_doubleTapEvent(event) {\n    this._internal_mouseDoubleClickEvent(event);\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    this._private__onMouseEvent();\n    this._private__pressedMouseTouchMoveEvent(event);\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseUpEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__longTap = false;\n    this._private__endScroll(event);\n  }\n  _internal_tapEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_longTapEvent(event) {\n    this._private__longTap = true;\n    if (this._private__startTrackPoint === null) {\n      const point = {\n        x: event.localX,\n        y: event.localY\n      };\n      this._private__startTrackingMode(point, point, event);\n    }\n  }\n  _internal_mouseLeaveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__state._internal_model()._internal_setHoveredSource(null);\n    this._private__clearCrosshairPosition();\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_dblClicked() {\n    return this._private__dblClicked;\n  }\n  _internal_pinchStartEvent() {\n    this._private__prevPinchScale = 1;\n    this._private__model()._internal_stopTimeScaleAnimation();\n  }\n  _internal_pinchEvent(middlePoint, scale) {\n    if (!this._private__chart._internal_options()['handleScale'].pinch) {\n      return;\n    }\n    const zoomScale = (scale - this._private__prevPinchScale) * 5;\n    this._private__prevPinchScale = scale;\n    this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n  }\n  _internal_touchStartEvent(event) {\n    this._private__longTap = false;\n    this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n    this._private__mouseTouchDownEvent();\n    const crosshair = this._private__model()._internal_crosshairSource();\n    if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n      this._private__initCrosshairPosition = {\n        x: crosshair._internal_appliedX(),\n        y: crosshair._internal_appliedY()\n      };\n      this._private__startTrackPoint = {\n        x: event.localX,\n        y: event.localY\n      };\n    }\n  }\n  _internal_touchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const x = event.localX;\n    const y = event.localY;\n    if (this._private__startTrackPoint !== null) {\n      // tracking mode: move crosshair\n      this._private__exitTrackingModeOnNextTry = false;\n      const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n      const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n      const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n      this._private__setCrosshairPosition(newX, newY, event);\n      return;\n    }\n    this._private__pressedMouseTouchMoveEvent(event);\n  }\n  _internal_touchEndEvent(event) {\n    if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n      this._private__exitTrackingModeOnNextTry = true;\n    }\n    this._private__tryExitTrackingMode();\n    this._private__endScroll(event);\n  }\n  _internal_hitTest(x, y) {\n    const state = this._private__state;\n    if (state === null) {\n      return null;\n    }\n    return hitTestPane(state, x, y);\n  }\n  _internal_setPriceAxisSize(width, position) {\n    const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n    ensureNotNull(priceAxisWidget)._internal_setSize(size$1({\n      width,\n      height: this._private__size.height\n    }));\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (equalSizes(this._private__size, newSize)) {\n      return;\n    }\n    this._private__size = newSize;\n    this._private__isSettingSize = true;\n    this._private__canvasBinding.resizeCanvasElement(newSize);\n    this._private__topCanvasBinding.resizeCanvasElement(newSize);\n    this._private__isSettingSize = false;\n    this._private__paneCell.style.width = newSize.width + 'px';\n    this._private__paneCell.style.height = newSize.height + 'px';\n  }\n  _internal_recalculatePriceScales() {\n    const pane = ensureNotNull(this._private__state);\n    pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n    pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n    for (const source of pane._internal_dataSources()) {\n      if (pane._internal_isOverlay(source)) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale !== null) {\n          pane._internal_recalculatePriceScale(priceScale);\n        }\n        // for overlay drawings price scale is owner's price scale\n        // however owner's price scale could not contain ds\n        source._internal_updateAllViews();\n      }\n    }\n    for (const primitive of pane._internal_primitives()) {\n      primitive._internal_updateAllViews();\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (this._private__state === null) {\n      return;\n    }\n    if (type > 1 /* InvalidationLevel.Cursor */) {\n      this._internal_recalculatePriceScales();\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_paint(type);\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_paint(type);\n    }\n    const canvasOptions = {\n      colorSpace: this._private__chart._internal_options().layout.colorSpace\n    };\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n        });\n        if (this._private__state) {\n          this._private__drawSources(target, sourceBottomPaneViews$1);\n          this._private__drawGrid(target);\n          this._private__drawSources(target, sourcePaneViews$1);\n          this._private__drawSources(target, sourceLabelPaneViews);\n        }\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshair(topTarget);\n      this._private__drawSources(topTarget, sourceTopPaneViews$1);\n      this._private__drawSources(topTarget, sourceLabelPaneViews);\n    }\n  }\n  _internal_leftPriceAxisWidget() {\n    return this._private__leftPriceAxisWidget;\n  }\n  _internal_rightPriceAxisWidget() {\n    return this._private__rightPriceAxisWidget;\n  }\n  _internal_drawAdditionalSources(target, paneViewsGetter) {\n    this._private__drawSources(target, paneViewsGetter);\n  }\n  _private__onStateDestroyed() {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = null;\n  }\n  _private__fireClickedDelegate(event) {\n    this._private__fireMouseClickDelegate(this._private__clicked, event);\n  }\n  _private__fireMouseClickDelegate(delegate, event) {\n    const x = event.localX;\n    const y = event.localY;\n    if (delegate._internal_hasListeners()) {\n      delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), {\n        x,\n        y\n      }, event);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, bottomColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawGrid(target) {\n    const state = ensureNotNull(this._private__state);\n    const paneView = state._internal_grid()._internal_paneView();\n    const renderer = paneView._internal_renderer(state);\n    if (renderer !== null) {\n      renderer._internal_draw(target, false);\n    }\n  }\n  _private__drawCrosshair(target) {\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n  }\n  _private__drawSources(target, paneViewsGetter) {\n    const state = ensureNotNull(this._private__state);\n    const sources = state._internal_orderedSources();\n    const panePrimitives = state._internal_primitives();\n    for (const panePrimitive of panePrimitives) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, panePrimitive);\n    }\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n    }\n    for (const panePrimitive of panePrimitives) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, panePrimitive);\n    }\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n    }\n  }\n  _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n    const state = ensureNotNull(this._private__state);\n    const hoveredSource = state._internal_model()._internal_hoveredSource();\n    const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n    const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_hitTestData : undefined;\n    const drawRendererFn = renderer => drawFn(renderer, target, isHovered, objecId);\n    drawSourceViews(paneViewsGetter, drawRendererFn, source, state);\n  }\n  _private__recreatePriceAxisWidgets() {\n    if (this._private__state === null) {\n      return;\n    }\n    const chart = this._private__chart;\n    const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n    const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n    if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n      this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n      this._private__leftPriceAxisWidget._internal_destroy();\n      this._private__leftPriceAxisWidget = null;\n    }\n    if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n      this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n      this._private__rightPriceAxisWidget._internal_destroy();\n      this._private__rightPriceAxisWidget = null;\n    }\n    const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n    if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n      this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n      this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n    }\n    if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n      this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n      this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n    }\n  }\n  _private__preventScroll(event) {\n    return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n  }\n  _private__correctXCoord(x) {\n    return Math.max(0, Math.min(x, this._private__size.width - 1));\n  }\n  _private__correctYCoord(y) {\n    return Math.max(0, Math.min(y, this._private__size.height - 1));\n  }\n  _private__setCrosshairPosition(x, y, event) {\n    this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n  }\n  _private__clearCrosshairPosition() {\n    this._private__model()._internal_clearCurrentPosition();\n  }\n  _private__tryExitTrackingMode() {\n    if (this._private__exitTrackingModeOnNextTry) {\n      this._private__startTrackPoint = null;\n      this._private__clearCrosshairPosition();\n    }\n  }\n  _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n    this._private__startTrackPoint = startTrackPoint;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n    const crosshair = this._private__model()._internal_crosshairSource();\n    this._private__initCrosshairPosition = {\n      x: crosshair._internal_appliedX(),\n      y: crosshair._internal_appliedY()\n    };\n  }\n  _private__model() {\n    return this._private__chart._internal_model();\n  }\n  _private__endScroll(event) {\n    if (!this._private__isScrolling) {\n      return;\n    }\n    const model = this._private__model();\n    const state = this._internal_state();\n    model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    model._internal_endScrollTime();\n    if (this._private__scrollXAnimation !== null) {\n      const startAnimationTime = performance.now();\n      const timeScale = model._internal_timeScale();\n      this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n      if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n        model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n      }\n    }\n  }\n  _private__onMouseEvent() {\n    this._private__startTrackPoint = null;\n  }\n  _private__mouseTouchDownEvent() {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__model()._internal_stopTimeScaleAnimation();\n    if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n      // If any focusable element except the page itself is focused, remove the focus\n      ensureNotNull(document.activeElement).blur();\n    } else {\n      // Clear selection\n      const selection = document.getSelection();\n      if (selection !== null) {\n        selection.removeAllRanges();\n      }\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n      return;\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__pressedMouseTouchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const model = this._private__model();\n    const timeScale = model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    const chartOptions = this._private__chart._internal_options();\n    const scrollOptions = chartOptions['handleScroll'];\n    const kineticScrollOptions = chartOptions.kineticScroll;\n    if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) && (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n      return;\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    const now = performance.now();\n    if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n      this._private__startScrollingPos = {\n        x: event.clientX,\n        y: event.clientY,\n        _internal_timestamp: now,\n        _internal_localX: event.localX,\n        _internal_localY: event.localY\n      };\n    }\n    if (this._private__startScrollingPos !== null && !this._private__isScrolling && (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n      if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n        const barSpacing = timeScale._internal_barSpacing();\n        this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n      } else {\n        this._private__scrollXAnimation = null;\n      }\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n      }\n      model._internal_startScrollTime(event.localX);\n      this._private__isScrolling = true;\n    }\n    if (this._private__isScrolling) {\n      // this allows scrolling not default price scales\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n      }\n      model._internal_scrollTimeTo(event.localX);\n      if (this._private__scrollXAnimation !== null) {\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n      }\n    }\n  }\n}\nclass PriceAxisStub {\n  constructor(side, options, params, borderVisible, bottomColor) {\n    this._private__invalidated = true;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n    this._private__isLeft = side === 'left';\n    this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n    this._private__options = options;\n    this._private__borderVisible = borderVisible;\n    this._private__bottomColor = bottomColor;\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n  }\n  _internal_destroy() {\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (!equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n      this._private__invalidated = true;\n    }\n  }\n  _internal_paint(type) {\n    if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n      return;\n    }\n    if (this._private__size.width === 0 || this._private__size.height === 0) {\n      return;\n    }\n    this._private__invalidated = false;\n    this._private__canvasBinding.applySuggestedBitmapSize();\n    const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, {\n      colorSpace: this._private__options.layout.colorSpace\n    });\n    if (target !== null) {\n      target.useBitmapCoordinateSpace(scope => {\n        this._private__drawBackground(scope);\n        this._private__drawBorder(scope);\n      });\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (!this._private__borderVisible()) {\n      return;\n    }\n    ctx.fillStyle = this._private__options.timeScale.borderColor;\n    const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n    const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n    const left = this._private__isLeft ? bitmapSize.width - horzBorderSize : 0;\n    ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n  }\n}\nfunction buildTimeAxisViewsGetter(zOrder) {\n  return source => source._internal_timePaneViews?.(zOrder) ?? [];\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n  constructor(chartWidget, horzScaleBehavior) {\n    this._private__leftStub = null;\n    this._private__rightStub = null;\n    this._private__rendererOptions = null;\n    this._private__mouseDown = false;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__sizeChanged = new Delegate();\n    this._private__widthCache = new TextWidthCache(5);\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__chart = chartWidget;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__options = chartWidget._internal_options()['layout'];\n    this._private__element = document.createElement('tr');\n    this._private__leftStubCell = document.createElement('td');\n    this._private__leftStubCell.style.padding = '0';\n    this._private__rightStubCell = document.createElement('td');\n    this._private__rightStubCell.style.padding = '0';\n    this._private__cell = document.createElement('td');\n    this._private__cell.style.height = '25px';\n    this._private__cell.style.padding = '0';\n    this._private__dv = document.createElement('div');\n    this._private__dv.style.width = '100%';\n    this._private__dv.style.height = '100%';\n    this._private__dv.style.position = 'relative';\n    this._private__dv.style.overflow = 'hidden';\n    this._private__cell.appendChild(this._private__dv);\n    this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__element.appendChild(this._private__leftStubCell);\n    this._private__element.appendChild(this._private__cell);\n    this._private__element.appendChild(this._private__rightStubCell);\n    this._private__recreateStubs();\n    this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => true,\n      _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options()['handleScroll'].horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_destroy();\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_destroy();\n    }\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__element;\n  }\n  _internal_leftStub() {\n    return this._private__leftStub;\n  }\n  _internal_rightStub() {\n    return this._private__rightStub;\n  }\n  _internal_mouseDownEvent(event) {\n    if (this._private__mouseDown) {\n      return;\n    }\n    this._private__mouseDown = true;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_startScaleTime(event.localX);\n  }\n  _internal_touchStartEvent(event) {\n    this._internal_mouseDownEvent(event);\n  }\n  _internal_mouseDownOutsideEvent() {\n    const model = this._private__chart._internal_model();\n    if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n      this._private__mouseDown = false;\n      if (this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n        model._internal_endScaleTime();\n      }\n    }\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_scaleTimeTo(event.localX);\n  }\n  _internal_touchMoveEvent(event) {\n    this._internal_pressedMouseMoveEvent(event);\n  }\n  _internal_mouseUpEvent() {\n    this._private__mouseDown = false;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_endScaleTime();\n  }\n  _internal_touchEndEvent() {\n    this._internal_mouseUpEvent();\n  }\n  _internal_mouseDoubleClickEvent() {\n    if (this._private__chart._internal_options()['handleScale'].axisDoubleClickReset.time) {\n      this._private__chart._internal_model()._internal_resetTimeScale();\n    }\n  }\n  _internal_doubleTapEvent() {\n    this._internal_mouseDoubleClickEvent();\n  }\n  _internal_mouseEnterEvent() {\n    if (this._private__chart._internal_model()._internal_options()['handleScale'].axisPressedMouseMove.time) {\n      this._private__setCursor(1 /* CursorType.EwResize */);\n    }\n  }\n  _internal_mouseLeaveEvent() {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_sizeChanged() {\n    return this._private__sizeChanged;\n  }\n  _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n    if (!equalSizes(this._private__size, timeAxisSize)) {\n      this._private__size = timeAxisSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${timeAxisSize.width}px`;\n      this._private__cell.style.height = `${timeAxisSize.height}px`;\n      this._private__sizeChanged._internal_fire(timeAxisSize);\n    }\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_setSize(size$1({\n        width: leftStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_setSize(size$1({\n        width: rightStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n  }\n  _internal_optimalHeight() {\n    const rendererOptions = this._private__getRendererOptions();\n    return Math.ceil(\n    // rendererOptions.offsetSize +\n    rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom + rendererOptions._internal_labelBottomOffset);\n  }\n  _internal_update() {\n    // this call has side-effect - it regenerates marks on the time scale\n    this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    const canvasOptions = {\n      colorSpace: this._private__options.colorSpace\n    };\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n          this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n        });\n        this._private__drawTickMarks(target);\n        this._private__drawAdditionalSources(target, sourcePaneViews);\n        // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n        // so let's don't call this code at all for now\n        // this._drawLabels(this._chart.model().dataSources(), target);\n      }\n      if (this._private__leftStub !== null) {\n        this._private__leftStub._internal_paint(type);\n      }\n      if (this._private__rightStub !== null) {\n        this._private__rightStub._internal_paint(type);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n      this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n    }\n  }\n  _private__drawAdditionalSources(target, axisViewsGetter) {\n    const sources = this._private__chart._internal_model()._internal_serieses();\n    for (const source of sources) {\n      drawSourceViews(axisViewsGetter, renderer => drawBackground(renderer, target, false, undefined), source, undefined);\n    }\n    for (const source of sources) {\n      drawSourceViews(axisViewsGetter, renderer => drawForeground(renderer, target, false, undefined), source, undefined);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    verticalPixelRatio\n  }) {\n    if (this._private__chart._internal_options().timeScale.borderVisible) {\n      ctx.fillStyle = this._private__lineColor();\n      const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n      ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n    }\n  }\n  _private__drawTickMarks(target) {\n    const timeScale = this._private__chart._internal_model()._internal_timeScale();\n    const tickMarks = timeScale._internal_marks();\n    if (!tickMarks || tickMarks.length === 0) {\n      return;\n    }\n    const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n    const rendererOptions = this._private__getRendererOptions();\n    const options = timeScale._internal_options();\n    if (options.borderVisible && options.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.strokeStyle = this._private__lineColor();\n        ctx.fillStyle = this._private__lineColor();\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.beginPath();\n        const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n        for (let index = tickMarks.length; index--;) {\n          const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n          ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const yText = rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = this._private__textColor();\n      // draw base marks\n      ctx.font = this._private__baseFont();\n      for (const tickMark of tickMarks) {\n        if (tickMark.weight < maxWeight) {\n          const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n          ctx.fillText(tickMark.label, coordinate, yText);\n        }\n      }\n      if (this._private__chart._internal_options().timeScale.allowBoldLabels) {\n        ctx.font = this._private__baseBoldFont();\n      }\n      for (const tickMark of tickMarks) {\n        if (tickMark.weight >= maxWeight) {\n          const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n          ctx.fillText(tickMark.label, coordinate, yText);\n        }\n      }\n    });\n  }\n  _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n    const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n    const labelWidthHalf = labelWidth / 2;\n    const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (leftTextCoordinate < 0) {\n      coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n    } else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n      coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n    }\n    return coordinate;\n  }\n  _private__drawLabels(sources, target) {\n    const rendererOptions = this._private__getRendererOptions();\n    for (const source of sources) {\n      for (const view of source._internal_timeAxisViews()) {\n        view._internal_renderer()._internal_draw(target, rendererOptions);\n      }\n    }\n  }\n  _private__lineColor() {\n    return this._private__chart._internal_options().timeScale.borderColor;\n  }\n  _private__textColor() {\n    return this._private__options.textColor;\n  }\n  _private__fontSize() {\n    return this._private__options.fontSize;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n  }\n  _private__baseBoldFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n  }\n  _private__getRendererOptions() {\n    if (this._private__rendererOptions === null) {\n      this._private__rendererOptions = {\n        _internal_borderSize: 1 /* Constants.BorderSize */,\n        _internal_baselineOffset: NaN,\n        _internal_paddingTop: NaN,\n        _internal_paddingBottom: NaN,\n        _internal_paddingHorizontal: NaN,\n        _internal_tickLength: 5 /* Constants.TickLength */,\n        _internal_fontSize: NaN,\n        _internal_font: '',\n        _internal_widthCache: new TextWidthCache(),\n        _internal_labelBottomOffset: 0\n      };\n    }\n    const rendererOptions = this._private__rendererOptions;\n    const newFont = this._private__baseFont();\n    if (rendererOptions._internal_font !== newFont) {\n      const fontSize = this._private__fontSize();\n      rendererOptions._internal_fontSize = fontSize;\n      rendererOptions._internal_font = newFont;\n      rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n      rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n      rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n      rendererOptions._internal_baselineOffset = 0;\n      rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n      rendererOptions._internal_widthCache._internal_reset();\n    }\n    return this._private__rendererOptions;\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n  }\n  _private__recreateStubs() {\n    const model = this._private__chart._internal_model();\n    const options = model._internal_options();\n    if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n      this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n      this._private__leftStub._internal_destroy();\n      this._private__leftStub = null;\n    }\n    if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n      this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n      this._private__rightStub._internal_destroy();\n      this._private__rightStub = null;\n    }\n    const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n    const params = {\n      _internal_rendererOptionsProvider: rendererOptionsProvider\n    };\n    const borderVisibleGetter = () => {\n      return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n    };\n    const bottomColorGetter = () => model._internal_backgroundBottomColor();\n    if (options.leftPriceScale.visible && this._private__leftStub === null) {\n      this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n    }\n    if (options.rightPriceScale.visible && this._private__rightStub === null) {\n      this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n    }\n  }\n}\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n  constructor(container, options, horzScaleBehavior) {\n    this._private__paneWidgets = [];\n    this._private__paneSeparators = [];\n    this._private__drawRafId = 0;\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__leftPriceAxisWidth = 0;\n    this._private__rightPriceAxisWidth = 0;\n    this._private__invalidateMask = null;\n    this._private__drawPlanned = false;\n    this._private__clicked = new Delegate();\n    this._private__dblClicked = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__observer = null;\n    this._private__cursorStyleOverride = null;\n    this._private__container = container;\n    this._private__options = options;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__element = document.createElement('div');\n    this._private__element.classList.add('tv-lightweight-charts');\n    this._private__element.style.overflow = 'hidden';\n    this._private__element.style.direction = 'ltr';\n    this._private__element.style.width = '100%';\n    this._private__element.style.height = '100%';\n    disableSelection(this._private__element);\n    this._private__tableElement = document.createElement('table');\n    this._private__tableElement.setAttribute('cellspacing', '0');\n    this._private__element.appendChild(this._private__tableElement);\n    this._private__onWheelBound = this._private__onMousewheel.bind(this);\n    if (shouldSubscribeMouseWheel(this._private__options)) {\n      this._private__setMouseWheelEventListener(true);\n    }\n    this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n    this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n    this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n    this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n    const usedObserver = options.autoSize && this._private__installObserver();\n    // observer could not fire event immediately for some cases\n    // so we have to set initial size manually\n    let width = this._private__options.width;\n    let height = this._private__options.height;\n    // ignore width/height options if observer has actually been used\n    // however respect options if installing resize observer failed\n    if (usedObserver || width === 0 || height === 0) {\n      const containerRect = container.getBoundingClientRect();\n      width = width || containerRect.width;\n      height = height || containerRect.height;\n    }\n    // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n    // or after but with adjustSize to properly update time scale\n    this._internal_resize(width, height);\n    this._private__syncGuiWithModel();\n    container.appendChild(this._private__element);\n    this._private__updateTimeAxisVisibility();\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneWidgets() {\n    return this._private__paneWidgets;\n  }\n  _internal_timeAxisWidget() {\n    return this._private__timeAxisWidget;\n  }\n  _internal_destroy() {\n    this._private__setMouseWheelEventListener(false);\n    if (this._private__drawRafId !== 0) {\n      window.cancelAnimationFrame(this._private__drawRafId);\n    }\n    this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__model._internal_destroy();\n    for (const paneWidget of this._private__paneWidgets) {\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n    }\n    this._private__paneWidgets = [];\n    for (const paneSeparator of this._private__paneSeparators) {\n      this._private__destroySeparator(paneSeparator);\n    }\n    this._private__paneSeparators = [];\n    ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n    if (this._private__element.parentElement !== null) {\n      this._private__element.parentElement.removeChild(this._private__element);\n    }\n    this._private__crosshairMoved._internal_destroy();\n    this._private__clicked._internal_destroy();\n    this._private__dblClicked._internal_destroy();\n    this._private__uninstallObserver();\n  }\n  _internal_resize(width, height, forceRepaint = false) {\n    if (this._private__height === height && this._private__width === width) {\n      return;\n    }\n    const sizeHint = suggestChartSize(size$1({\n      width,\n      height\n    }));\n    this._private__height = sizeHint.height;\n    this._private__width = sizeHint.width;\n    const heightStr = this._private__height + 'px';\n    const widthStr = this._private__width + 'px';\n    ensureNotNull(this._private__element).style.height = heightStr;\n    ensureNotNull(this._private__element).style.width = widthStr;\n    this._private__tableElement.style.height = heightStr;\n    this._private__tableElement.style.width = widthStr;\n    if (forceRepaint) {\n      this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n    } else {\n      this._private__model._internal_fullUpdate();\n    }\n  }\n  _internal_paint(invalidateMask) {\n    if (invalidateMask === undefined) {\n      invalidateMask = InvalidateMask._internal_full();\n    }\n    for (let i = 0; i < this._private__paneWidgets.length; i++) {\n      this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n    }\n    if (this._private__options.timeScale.visible) {\n      this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n    }\n  }\n  _internal_applyOptions(options) {\n    const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    // we don't need to merge options here because it's done in chart model\n    // and since both model and widget share the same object it will be done automatically for widget as well\n    // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n    this._private__model._internal_applyOptions(options);\n    const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n      this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n    }\n    if (options['layout']?.panes) {\n      this._private__applyPanesOptions();\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__applyAutoSizeOptions(options);\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_dblClicked() {\n    return this._private__dblClicked;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_takeScreenshot() {\n    if (this._private__invalidateMask !== null) {\n      this._private__drawImpl(this._private__invalidateMask, performance.now());\n      this._private__invalidateMask = null;\n    }\n    const screeshotBitmapSize = this._private__traverseLayout(null);\n    const screenshotCanvas = document.createElement('canvas');\n    screenshotCanvas.width = screeshotBitmapSize.width;\n    screenshotCanvas.height = screeshotBitmapSize.height;\n    const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n    this._private__traverseLayout(ctx);\n    return screenshotCanvas;\n  }\n  _internal_getPriceAxisWidth(position) {\n    if (position === \"left\" /* DefaultPriceScaleId.Left */ && !this._private__isLeftAxisVisible()) {\n      return 0;\n    }\n    if (position === \"right\" /* DefaultPriceScaleId.Right */ && !this._private__isRightAxisVisible()) {\n      return 0;\n    }\n    if (this._private__paneWidgets.length === 0) {\n      return 0;\n    }\n    // we don't need to worry about exactly pane widget here\n    // because all pane widgets have the same width of price axis widget\n    // see _adjustSizeImpl\n    const priceAxisWidget = position === \"left\" /* DefaultPriceScaleId.Left */ ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget() : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n    return ensureNotNull(priceAxisWidget)._internal_getWidth();\n  }\n  _internal_autoSizeActive() {\n    return this._private__options.autoSize && this._private__observer !== null;\n  }\n  _internal_element() {\n    return this._private__element;\n  }\n  _internal_setCursorStyle(style) {\n    this._private__cursorStyleOverride = style;\n    if (this._private__cursorStyleOverride) {\n      this._internal_element().style.setProperty('cursor', style);\n    } else {\n      this._internal_element().style.removeProperty('cursor');\n    }\n  }\n  _internal_getCursorOverrideStyle() {\n    return this._private__cursorStyleOverride;\n  }\n  _internal_paneSize(paneIndex) {\n    return ensureDefined(this._private__paneWidgets[paneIndex])._internal_getSize();\n  }\n  _private__applyPanesOptions() {\n    this._private__paneSeparators.forEach(separator => {\n      separator._internal_update();\n    });\n  }\n  // eslint-disable-next-line complexity\n  _private__applyAutoSizeOptions(options) {\n    if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n      warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n      return;\n    }\n    if (options.autoSize && !this._private__observer) {\n      // installing observer will override resize if successful\n      this._private__installObserver();\n    }\n    if (options.autoSize === false && this._private__observer !== null) {\n      this._private__uninstallObserver();\n    }\n    if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n      this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n    }\n  }\n  /**\n   * Traverses the widget's layout (pane and axis child widgets),\n   * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n   *\n   * @param ctx - if passed, used to draw the screenshot of widget\n   * @returns screenshot bitmap size\n   */\n  _private__traverseLayout(ctx) {\n    let totalWidth = 0;\n    let totalHeight = 0;\n    const firstPane = this._private__paneWidgets[0];\n    const drawPriceAxises = (position, targetX) => {\n      let targetY = 0;\n      for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n        const paneWidget = this._private__paneWidgets[paneIndex];\n        const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n        const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n        if (ctx !== null) {\n          priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n        }\n        targetY += bitmapSize.height;\n        if (paneIndex < this._private__paneWidgets.length - 1) {\n          const separator = this._private__paneSeparators[paneIndex];\n          const separatorBitmapSize = separator._internal_getBitmapSize();\n          if (ctx !== null) {\n            separator._internal_drawBitmap(ctx, targetX, targetY);\n          }\n          targetY += separatorBitmapSize.height;\n        }\n      }\n    };\n    // draw left price scale if exists\n    if (this._private__isLeftAxisVisible()) {\n      drawPriceAxises('left', 0);\n      const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += leftAxisBitmapWidth;\n    }\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      const bitmapSize = paneWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n      }\n      totalHeight += bitmapSize.height;\n      if (paneIndex < this._private__paneWidgets.length - 1) {\n        const separator = this._private__paneSeparators[paneIndex];\n        const separatorBitmapSize = separator._internal_getBitmapSize();\n        if (ctx !== null) {\n          separator._internal_drawBitmap(ctx, totalWidth, totalHeight);\n        }\n        totalHeight += separatorBitmapSize.height;\n      }\n    }\n    const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n    totalWidth += firstPaneBitmapWidth;\n    // draw right price scale if exists\n    if (this._private__isRightAxisVisible()) {\n      drawPriceAxises('right', totalWidth);\n      const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += rightAxisBitmapWidth;\n    }\n    const drawStub = (position, targetX, targetY) => {\n      const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n      stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n    };\n    // draw time scale and stubs\n    if (this._private__options.timeScale.visible) {\n      const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        let targetX = 0;\n        if (this._private__isLeftAxisVisible()) {\n          drawStub('left', targetX, totalHeight);\n          targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n        }\n        this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n        targetX += timeAxisBitmapSize.width;\n        if (this._private__isRightAxisVisible()) {\n          drawStub('right', targetX, totalHeight);\n        }\n      }\n      totalHeight += timeAxisBitmapSize.height;\n    }\n    return size$1({\n      width: totalWidth,\n      height: totalHeight\n    });\n  }\n  // eslint-disable-next-line complexity\n  _private__adjustSizeImpl() {\n    let totalStretch = 0;\n    let leftPriceAxisWidth = 0;\n    let rightPriceAxisWidth = 0;\n    for (const paneWidget of this._private__paneWidgets) {\n      if (this._private__isLeftAxisVisible()) {\n        leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n      }\n      if (this._private__isRightAxisVisible()) {\n        rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n      }\n      totalStretch += paneWidget._internal_stretchFactor();\n    }\n    leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n    rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n    const width = this._private__width;\n    const height = this._private__height;\n    const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n    const separatorCount = this._private__paneSeparators.length;\n    const separatorHeight = 1 /* SeparatorConstants.SeparatorHeight */;\n    const separatorsHeight = separatorHeight * separatorCount;\n    const timeAxisVisible = this._private__options.timeScale.visible;\n    let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n    timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n    const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n    const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n    const stretchPixels = totalPaneHeight / totalStretch;\n    let accumulatedHeight = 0;\n    const pixelRatio = window.devicePixelRatio || 1;\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n      let paneHeight = 0;\n      let calculatePaneHeight = 0;\n      if (paneIndex === this._private__paneWidgets.length - 1) {\n        calculatePaneHeight = Math.ceil((totalPaneHeight - accumulatedHeight) * pixelRatio) / pixelRatio;\n      } else {\n        calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels * pixelRatio) / pixelRatio;\n      }\n      paneHeight = Math.max(calculatePaneHeight, 2);\n      accumulatedHeight += paneHeight;\n      paneWidget._internal_setSize(size$1({\n        width: paneWidth,\n        height: paneHeight\n      }));\n      if (this._private__isLeftAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n      }\n      if (this._private__isRightAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n      }\n      if (paneWidget._internal_state()) {\n        this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n      }\n    }\n    this._private__timeAxisWidget._internal_setSizes(size$1({\n      width: timeAxisVisible ? paneWidth : 0,\n      height: timeAxisHeight\n    }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n    this._private__model._internal_setWidth(paneWidth);\n    if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n      this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n    }\n    if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n      this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n    }\n  }\n  _private__setMouseWheelEventListener(add) {\n    if (add) {\n      this._private__element.addEventListener('wheel', this._private__onWheelBound, {\n        passive: false\n      });\n      return;\n    }\n    this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n  }\n  _private__determineWheelSpeedAdjustment(event) {\n    switch (event.deltaMode) {\n      case event.DOM_DELTA_PAGE:\n        // one screen at time scroll mode\n        return 120;\n      case event.DOM_DELTA_LINE:\n        // one line at time scroll mode\n        return 32;\n    }\n    if (!windowsChrome) {\n      return 1;\n    }\n    // Chromium on Windows has a bug where the scroll speed isn't correctly\n    // adjusted for high density displays. We need to correct for this so that\n    // scroll speed is consistent between browsers.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n    return 1 / window.devicePixelRatio;\n  }\n  _private__onMousewheel(event) {\n    if ((event.deltaX === 0 || !this._private__options['handleScroll'].mouseWheel) && (event.deltaY === 0 || !this._private__options['handleScale'].mouseWheel)) {\n      return;\n    }\n    const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n    const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n    const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    if (deltaY !== 0 && this._private__options['handleScale'].mouseWheel) {\n      const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n      const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n      this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n    }\n    if (deltaX !== 0 && this._private__options['handleScroll'].mouseWheel) {\n      this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n    }\n  }\n  _private__drawImpl(invalidateMask, time) {\n    const invalidationType = invalidateMask._internal_fullInvalidation();\n    // actions for full invalidation ONLY (not shared with light)\n    if (invalidationType === 3 /* InvalidationLevel.Full */) {\n      this._private__updateGui();\n    }\n    // light or full invalidate actions\n    if (invalidationType === 3 /* InvalidationLevel.Full */ || invalidationType === 2 /* InvalidationLevel.Light */) {\n      this._private__applyMomentaryAutoScale(invalidateMask);\n      this._private__applyTimeScaleInvalidations(invalidateMask, time);\n      this._private__timeAxisWidget._internal_update();\n      this._private__paneWidgets.forEach(pane => {\n        pane._internal_updatePriceAxisWidgets();\n      });\n      // In the case a full invalidation has been postponed during the draw, reapply\n      // the timescale invalidations. A full invalidation would mean there is a change\n      // in the timescale width (caused by price scale changes) that needs to be drawn\n      // right away to avoid flickering.\n      if (this._private__invalidateMask?._internal_fullInvalidation() === 3 /* InvalidationLevel.Full */) {\n        this._private__invalidateMask._internal_merge(invalidateMask);\n        this._private__updateGui();\n        this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n        this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n        invalidateMask = this._private__invalidateMask;\n        this._private__invalidateMask = null;\n      }\n    }\n    this._internal_paint(invalidateMask);\n  }\n  _private__applyTimeScaleInvalidations(invalidateMask, time) {\n    for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n    }\n  }\n  _private__applyMomentaryAutoScale(invalidateMask) {\n    const panes = this._private__model._internal_panes();\n    for (let i = 0; i < panes.length; i++) {\n      if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n        panes[i]._internal_momentaryAutoScale();\n      }\n    }\n  }\n  _private__applyTimeScaleInvalidation(invalidation, time) {\n    const timeScale = this._private__model._internal_timeScale();\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        timeScale._internal_fitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        timeScale._internal_setLogicalRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        timeScale._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        timeScale._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        timeScale._internal_restoreDefault();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        if (!invalidation._internal_value._internal_finished(time)) {\n          timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n        }\n        break;\n    }\n  }\n  _private__invalidateHandler(invalidateMask) {\n    if (this._private__invalidateMask !== null) {\n      this._private__invalidateMask._internal_merge(invalidateMask);\n    } else {\n      this._private__invalidateMask = invalidateMask;\n    }\n    if (!this._private__drawPlanned) {\n      this._private__drawPlanned = true;\n      this._private__drawRafId = window.requestAnimationFrame(time => {\n        this._private__drawPlanned = false;\n        this._private__drawRafId = 0;\n        if (this._private__invalidateMask !== null) {\n          const mask = this._private__invalidateMask;\n          this._private__invalidateMask = null;\n          this._private__drawImpl(mask, time);\n          for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n            if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n              this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n  _private__updateGui() {\n    this._private__syncGuiWithModel();\n  }\n  _private__destroySeparator(separator) {\n    this._private__tableElement.removeChild(separator._internal_getElement());\n    separator._internal_destroy();\n  }\n  _private__syncGuiWithModel() {\n    const panes = this._private__model._internal_panes();\n    const targetPaneWidgetsCount = panes.length;\n    const actualPaneWidgetsCount = this._private__paneWidgets.length;\n    // Remove (if needed) pane widgets and separators\n    for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n      const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n      const paneSeparator = this._private__paneSeparators.pop();\n      if (paneSeparator !== undefined) {\n        this._private__destroySeparator(paneSeparator);\n      }\n    }\n    // Create (if needed) new pane widgets and separators\n    for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n      const paneWidget = new PaneWidget(this, panes[i]);\n      paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this, paneWidget), this);\n      paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this, paneWidget), this);\n      this._private__paneWidgets.push(paneWidget);\n      // create and insert separator\n      if (i > 0) {\n        const paneSeparator = new PaneSeparator(this, i - 1, i);\n        this._private__paneSeparators.push(paneSeparator);\n        this._private__tableElement.insertBefore(paneSeparator._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n      }\n      // insert paneWidget\n      this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n    }\n    for (let i = 0; i < targetPaneWidgetsCount; i++) {\n      const state = panes[i];\n      const paneWidget = this._private__paneWidgets[i];\n      if (paneWidget._internal_state() !== state) {\n        paneWidget._internal_setState(state);\n      } else {\n        paneWidget._internal_updatePriceAxisWidgetsStates();\n      }\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__adjustSizeImpl();\n  }\n  _private__getMouseEventParamsImpl(index, point, event, pane) {\n    const seriesData = new Map();\n    if (index !== null) {\n      const serieses = this._private__model._internal_serieses();\n      serieses.forEach(s => {\n        // TODO: replace with search left\n        const data = s._internal_bars()._internal_search(index);\n        if (data !== null) {\n          seriesData.set(s, data);\n        }\n      });\n    }\n    let clientTime;\n    if (index !== null) {\n      const timePoint = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)?.originalTime;\n      if (timePoint !== undefined) {\n        clientTime = timePoint;\n      }\n    }\n    const hoveredSource = this._internal_model()._internal_hoveredSource();\n    const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series ? hoveredSource._internal_source : undefined;\n    const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_externalId : undefined;\n    const paneIndex = this._private__getPaneIndex(pane);\n    return {\n      _internal_originalTime: clientTime,\n      _internal_index: index ?? undefined,\n      _internal_point: point ?? undefined,\n      _internal_paneIndex: paneIndex !== -1 ? paneIndex : undefined,\n      _internal_hoveredSeries: hoveredSeries,\n      _internal_seriesData: seriesData,\n      _internal_hoveredObject: hoveredObject,\n      _internal_touchMouseEventData: event ?? undefined\n    };\n  }\n  _private__getPaneIndex(pane) {\n    let paneIndex = -1;\n    if (pane) {\n      paneIndex = this._private__paneWidgets.indexOf(pane);\n    } else {\n      const crosshairPane = this._internal_model()._internal_crosshairSource()._internal_pane();\n      if (crosshairPane !== null) {\n        paneIndex = this._internal_model()._internal_panes().indexOf(crosshairPane);\n      }\n    }\n    return paneIndex;\n  }\n  _private__onPaneWidgetClicked(pane, time, point, event) {\n    this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event, pane));\n  }\n  _private__onPaneWidgetDblClicked(pane, time, point, event) {\n    this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event, pane));\n  }\n  _private__onPaneWidgetCrosshairMoved(time, point, event) {\n    this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__updateTimeAxisVisibility() {\n    const display = this._private__options.timeScale.visible ? '' : 'none';\n    this._private__timeAxisWidget._internal_getElement().style.display = display;\n  }\n  _private__isLeftAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n  }\n  _private__isRightAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n  }\n  _private__installObserver() {\n    // eslint-disable-next-line no-restricted-syntax\n    if (!('ResizeObserver' in window)) {\n      warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n      return false;\n    } else {\n      this._private__observer = new ResizeObserver(entries => {\n        // There is no need to check if entry.target === this._container since there is only\n        // a single element being observed.\n        // and we want to use the last entry (if multiple) because it would be most up to date\n        // (since the browser may batch multiple updates).\n        const containerEntry = entries[entries.length - 1];\n        if (!containerEntry) {\n          // this may be undefined if the entries array was empty.\n          return;\n        }\n        this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n      });\n      this._private__observer.observe(this._private__container, {\n        box: 'border-box'\n      });\n      return true;\n    }\n  }\n  _private__uninstallObserver() {\n    if (this._private__observer !== null) {\n      this._private__observer.disconnect();\n    }\n    this._private__observer = null;\n  }\n}\nfunction disableSelection(element) {\n  element.style.userSelect = 'none';\n  // eslint-disable-next-line deprecation/deprecation\n  element.style.webkitUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.msUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.MozUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n  return Boolean(options['handleScroll'].mouseWheel || options['handleScale'].mouseWheel);\n}\nfunction isWhitespaceData(data) {\n  return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n  return isFulfilledBarData(data) || isFulfilledLineData(data);\n}\nfunction isFulfilledBarData(data) {\n  return data.open !== undefined;\n}\nfunction isFulfilledLineData(data) {\n  return data.value !== undefined;\n}\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.lineColor !== undefined) {\n    res._internal_lineColor = item.lineColor;\n  }\n  if (item.topColor !== undefined) {\n    res._internal_topColor = item.topColor;\n  }\n  if (item.bottomColor !== undefined) {\n    res._internal_bottomColor = item.bottomColor;\n  }\n  return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.topLineColor !== undefined) {\n    res._internal_topLineColor = item.topLineColor;\n  }\n  if (item.bottomLineColor !== undefined) {\n    res._internal_bottomLineColor = item.bottomLineColor;\n  }\n  if (item.topFillColor1 !== undefined) {\n    res._internal_topFillColor1 = item.topFillColor1;\n  }\n  if (item.topFillColor2 !== undefined) {\n    res._internal_topFillColor2 = item.topFillColor2;\n  }\n  if (item.bottomFillColor1 !== undefined) {\n    res._internal_bottomFillColor1 = item.bottomFillColor1;\n  }\n  if (item.bottomFillColor2 !== undefined) {\n    res._internal_bottomFillColor2 = item.bottomFillColor2;\n  }\n  return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  if (item.borderColor !== undefined) {\n    res._internal_borderColor = item.borderColor;\n  }\n  if (item.wickColor !== undefined) {\n    res._internal_wickColor = item.wickColor;\n  }\n  return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n  const values = ensureDefined(dataToPlotRow)(item);\n  const max = Math.max(...values);\n  const min = Math.min(...values);\n  const last = values[values.length - 1];\n  const value = [last, max, min, last];\n  const {\n    time: excludedTime,\n    color,\n    ...data\n  } = item;\n  return {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: value,\n    _internal_originalTime: originalTime,\n    _internal_data: data,\n    _internal_color: color\n  };\n}\nfunction isSeriesPlotRow(row) {\n  return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n  if (bar.customValues !== undefined) {\n    plotRow._internal_customValues = bar.customValues;\n  }\n  return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n  if (customIsWhitespace) {\n    return customIsWhitespace(bar);\n  }\n  return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n  return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n    if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n      return wrapCustomValues({\n        _internal_time: time,\n        _internal_index: index,\n        _internal_originalTime: originalTime\n      }, bar);\n    }\n    return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n  };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n  const seriesPlotRowFnMap = {\n    Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n    Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n    Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n    Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n    Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Custom: wrapWhitespaceData(getCustomSeriesPlotRow)\n  };\n  return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n  return {\n    _internal_index: 0,\n    _internal_mapping: new Map(),\n    _internal_timePoint: timePoint\n  };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n  if (seriesRows === undefined || seriesRows.length === 0) {\n    return undefined;\n  }\n  return {\n    _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n    _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time)\n  };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n  const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n  const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n  if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n    return {\n      _internal_historicalUpdate: false,\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime && firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime\n    };\n  }\n  return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n  let result;\n  mergedPointData.forEach(v => {\n    if (result === undefined) {\n      result = v._internal_originalTime;\n    }\n  });\n  return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n  if (data._internal_originalTime === undefined) {\n    data._internal_originalTime = data.time;\n  }\n}\nclass DataLayer {\n  constructor(horzScaleBehavior) {\n    // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n    // it's just different kind of maps to make usages/perf better\n    this._private__pointDataByTimePoint = new Map();\n    this._private__seriesRowsBySeries = new Map();\n    this._private__seriesLastTimePoint = new Map();\n    // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n    this._private__sortedTimePoints = [];\n    this._private__horzScaleBehavior = horzScaleBehavior;\n  }\n  _internal_destroy() {\n    this._private__pointDataByTimePoint.clear();\n    this._private__seriesRowsBySeries.clear();\n    this._private__seriesLastTimePoint.clear();\n    this._private__sortedTimePoints = [];\n  }\n  _internal_setSeriesData(series, data) {\n    let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n    let isTimeScaleAffected = false;\n    // save previous series rows data before it's replaced inside this._setRowsToSeries\n    const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n    if (prevSeriesRows !== undefined) {\n      if (this._private__seriesRowsBySeries.size === 1) {\n        needCleanupPoints = false;\n        isTimeScaleAffected = true;\n        // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n        this._private__pointDataByTimePoint.clear();\n      } else {\n        // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n        // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n        for (const point of this._private__sortedTimePoints) {\n          if (point.pointData._internal_mapping.delete(series)) {\n            isTimeScaleAffected = true;\n          }\n        }\n      }\n    }\n    let seriesRows = [];\n    if (data.length !== 0) {\n      const originalTimes = data.map(d => d.time);\n      const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n      const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n      const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n      const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n      seriesRows = data.map((item, index) => {\n        const time = timeConverter(item.time);\n        const horzItemKey = this._private__horzScaleBehavior.key(time);\n        let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n        if (timePointData === undefined) {\n          // the indexes will be sync later\n          timePointData = createEmptyTimePointData(time);\n          this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n          isTimeScaleAffected = true;\n        }\n        const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n        timePointData._internal_mapping.set(series, row);\n        return row;\n      });\n    }\n    if (needCleanupPoints) {\n      // we deleted the old data from mapping and added the new ones\n      // so there might be empty points now, let's remove them first\n      this._private__cleanupPointsData();\n    }\n    this._private__setRowsToSeries(series, seriesRows);\n    let firstChangedPointIndex = -1;\n    if (isTimeScaleAffected) {\n      // then generate the time scale points\n      // timeWeight will be updates in _updateTimeScalePoints later\n      const newTimeScalePoints = [];\n      this._private__pointDataByTimePoint.forEach(pointData => {\n        newTimeScalePoints.push({\n          timeWeight: 0,\n          time: pointData._internal_timePoint,\n          pointData,\n          originalTime: timeScalePointTime(pointData._internal_mapping)\n        });\n      });\n      newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n      firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n    }\n    return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n  }\n  _internal_removeSeries(series) {\n    return this._internal_setSeriesData(series, []);\n  }\n  _internal_updateSeriesData(series, data, historicalUpdate) {\n    const extendedData = data;\n    saveOriginalTime(extendedData);\n    // convertStringToBusinessDay(data);\n    this._private__horzScaleBehavior.preprocessData(data);\n    const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n    const time = timeConverter(data.time);\n    const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n    if (!historicalUpdate && lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n    }\n    let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n    if (historicalUpdate && pointDataAtTime === undefined) {\n      throw new Error('Cannot update non-existing data point when historicalUpdate is true');\n    }\n    // if no point data found for the new data item\n    // that means that we need to update scale\n    const affectsTimeScale = pointDataAtTime === undefined;\n    if (pointDataAtTime === undefined) {\n      // the indexes will be sync later\n      pointDataAtTime = createEmptyTimePointData(time);\n      this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n    }\n    const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n    const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n    const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n    const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n    pointDataAtTime._internal_mapping.set(series, plotRow);\n    if (historicalUpdate) {\n      this._private__updateHistoricalSeriesRow(series, plotRow, pointDataAtTime._internal_index);\n    } else {\n      this._private__updateLastSeriesRow(series, plotRow);\n    }\n    const info = {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow),\n      _internal_historicalUpdate: historicalUpdate\n    };\n    // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n    if (!affectsTimeScale) {\n      return this._private__getUpdateResponse(series, -1, info);\n    }\n    const newPoint = {\n      timeWeight: 0,\n      time: pointDataAtTime._internal_timePoint,\n      pointData: pointDataAtTime,\n      originalTime: timeScalePointTime(pointDataAtTime._internal_mapping)\n    };\n    const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n    // yes, I know that this array is readonly and this change is intended to make it performative\n    // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n    // but this place is exceptional case due performance reasons, sorry\n    this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n    for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n      assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n    }\n    this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n    return this._private__getUpdateResponse(series, insertIndex, info);\n  }\n  _private__updateLastSeriesRow(series, plotRow) {\n    let seriesData = this._private__seriesRowsBySeries.get(series);\n    if (seriesData === undefined) {\n      seriesData = [];\n      this._private__seriesRowsBySeries.set(series, seriesData);\n    }\n    const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n    if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData.push(plotRow);\n      }\n    } else {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData[seriesData.length - 1] = plotRow;\n      } else {\n        seriesData.splice(-1, 1);\n      }\n    }\n    this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n  }\n  _private__updateHistoricalSeriesRow(series, plotRow, pointDataIndex) {\n    const seriesData = this._private__seriesRowsBySeries.get(series);\n    if (seriesData === undefined) {\n      return;\n    }\n    // binary search for actual index in array.\n    const index = lowerBound(seriesData, pointDataIndex, (row, currentIndex) => row._internal_index < currentIndex);\n    if (isSeriesPlotRow(plotRow)) {\n      seriesData[index] = plotRow;\n    } else {\n      seriesData.splice(index, 1);\n    }\n  }\n  _private__setRowsToSeries(series, seriesRows) {\n    if (seriesRows.length !== 0) {\n      this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n      this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n    } else {\n      this._private__seriesRowsBySeries.delete(series);\n      this._private__seriesLastTimePoint.delete(series);\n    }\n  }\n  _private__cleanupPointsData() {\n    // let's treat all current points as \"potentially removed\"\n    // we could create an array with actually potentially removed points\n    // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n    // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n    for (const point of this._private__sortedTimePoints) {\n      if (point.pointData._internal_mapping.size === 0) {\n        this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n      }\n    }\n  }\n  /**\n   * Sets new time scale and make indexes valid for all series\n   *\n   * @returns The index of the first changed point or `-1` if there is no change.\n   */\n  _private__replaceTimeScalePoints(newTimePoints) {\n    let firstChangedPointIndex = -1;\n    // search the first different point and \"syncing\" time weight by the way\n    for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n      const oldPoint = this._private__sortedTimePoints[index];\n      const newPoint = newTimePoints[index];\n      if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n        firstChangedPointIndex = index;\n        break;\n      }\n      // re-assign point's time weight for points if time is the same (and all prior times was the same)\n      newPoint.timeWeight = oldPoint.timeWeight;\n      assignIndexToPointData(newPoint.pointData, index);\n    }\n    if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n      // the common part of the prev and the new points are the same\n      // so the first changed point is the next after the common part\n      firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n    }\n    if (firstChangedPointIndex === -1) {\n      // if no time scale changed, then do nothing\n      return -1;\n    }\n    // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n    // but first we need to synchronize indexes and re-fill time weights\n    for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n      assignIndexToPointData(newTimePoints[index].pointData, index);\n    }\n    // re-fill time weights for point after the first changed one\n    this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n    this._private__sortedTimePoints = newTimePoints;\n    return firstChangedPointIndex;\n  }\n  _private__getBaseIndex() {\n    if (this._private__seriesRowsBySeries.size === 0) {\n      // if we have no data then 'reset' the base index to null\n      return null;\n    }\n    let baseIndex = 0;\n    this._private__seriesRowsBySeries.forEach(data => {\n      if (data.length !== 0) {\n        baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n      }\n    });\n    return baseIndex;\n  }\n  _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n    const dataUpdateResponse = {\n      _internal_series: new Map(),\n      _internal_timeScale: {\n        _internal_baseIndex: this._private__getBaseIndex()\n      }\n    };\n    if (firstChangedPointIndex !== -1) {\n      // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n      // but let's skip for now\n      this._private__seriesRowsBySeries.forEach((data, s) => {\n        dataUpdateResponse._internal_series.set(s, {\n          _internal_data: data,\n          _internal_info: s === updatedSeries ? info : undefined\n        });\n      });\n      // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n      // meaning the forEach above won't add the series to the data update response\n      // so we handle that case here\n      if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n        dataUpdateResponse._internal_series.set(updatedSeries, {\n          _internal_data: [],\n          _internal_info: info\n        });\n      }\n      dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n      dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n    } else {\n      const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n      // if no seriesData found that means that we just removed the series\n      dataUpdateResponse._internal_series.set(updatedSeries, {\n        _internal_data: seriesData || [],\n        _internal_info: info\n      });\n    }\n    return dataUpdateResponse;\n  }\n}\nfunction assignIndexToPointData(pointData, index) {\n  // first, nevertheless update index of point data (\"make it valid\")\n  pointData._internal_index = index;\n  // and then we need to sync indexes for all series\n  pointData._internal_mapping.forEach(seriesRow => {\n    seriesRow._internal_index = index;\n  });\n}\nfunction lowerBoundItemsCompare(item, time) {\n  return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n  return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n  const firstBar = range._internal_left();\n  const lastBar = range._internal_right();\n  const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n  const to = upperBound(items, lastBar, upperBoundItemsCompare);\n  if (!extendedRange) {\n    return {\n      from,\n      to\n    };\n  }\n  let extendedFrom = from;\n  let extendedTo = to;\n  if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n    extendedFrom = from - 1;\n  }\n  if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n    extendedTo = to + 1;\n  }\n  return {\n    from: extendedFrom,\n    to: extendedTo\n  };\n}\nclass SeriesPaneViewBase {\n  constructor(series, model, extendedVisibleRange) {\n    this._internal__invalidated = true;\n    this._internal__dataInvalidated = true;\n    this._internal__optionsInvalidated = true;\n    this._internal__items = [];\n    this._internal__itemsVisibleRange = null;\n    this._internal__series = series;\n    this._internal__model = model;\n    this._private__extendedVisibleRange = extendedVisibleRange;\n  }\n  _internal_update(updateType) {\n    this._internal__invalidated = true;\n    if (updateType === 'data') {\n      this._internal__dataInvalidated = true;\n    }\n    if (updateType === 'options') {\n      this._internal__optionsInvalidated = true;\n    }\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    this._private__makeValid();\n    return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n  }\n  _internal__updateOptions() {\n    this._internal__items = this._internal__items.map(item => ({\n      ...item,\n      ...this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time)\n    }));\n  }\n  _internal__clearVisibleRange() {\n    this._internal__itemsVisibleRange = null;\n  }\n  _private__makeValid() {\n    if (this._internal__dataInvalidated) {\n      this._internal__fillRawPoints();\n      this._internal__dataInvalidated = false;\n    }\n    if (this._internal__optionsInvalidated) {\n      this._internal__updateOptions();\n      this._internal__optionsInvalidated = false;\n    }\n    if (this._internal__invalidated) {\n      this._private__makeValidImpl();\n      this._internal__invalidated = false;\n    }\n  }\n  _private__makeValidImpl() {\n    const priceScale = this._internal__series._internal_priceScale();\n    const timeScale = this._internal__model._internal_timeScale();\n    this._internal__clearVisibleRange();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return;\n    }\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    if (this._internal__series._internal_bars()._internal_size() === 0) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n    this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n    this._internal__prepareRendererData();\n  }\n}\nclass CustomSeriesPaneRendererWrapper {\n  constructor(sourceRenderer, priceScale) {\n    this._private__sourceRenderer = sourceRenderer;\n    this._private__priceScale = priceScale;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n  }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n  constructor(series, model, paneView) {\n    super(series, model, false);\n    this._private__paneView = paneView;\n    this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), price => {\n      const firstValue = series._internal_firstValue();\n      if (firstValue === null) {\n        return null;\n      }\n      return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    });\n  }\n  _internal_priceValueBuilder(plotRow) {\n    return this._private__paneView.priceValueBuilder(plotRow);\n  }\n  _internal_isWhitespace(data) {\n    return this._private__paneView.isWhitespace(data);\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      return {\n        _internal_time: row._internal_index,\n        _internal_x: NaN,\n        ...colorer._internal_barStyle(row._internal_index),\n        _internal_originalData: row._internal_data\n      };\n    });\n  }\n  _internal__convertToCoordinates(priceScale, timeScale) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__prepareRendererData() {\n    this._private__paneView.update({\n      bars: this._internal__items.map(unwrapItemData),\n      barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      visibleRange: this._internal__itemsVisibleRange\n    }, this._internal__series._internal_options());\n  }\n}\nfunction unwrapItemData(item) {\n  return {\n    x: item._internal_x,\n    time: item._internal_time,\n    originalData: item._internal_originalData,\n    barColor: item._internal_barColor\n  };\n}\nconst customStyleDefaults = {\n  color: '#2196f3'\n};\nconst createPaneView$6 = (series, model, customPaneView) => {\n  const paneView = ensure(customPaneView);\n  return new SeriesCustomPaneView(series, model, paneView);\n};\nconst createCustomSeriesDefinition = paneView => {\n  const definition = {\n    type: 'Custom',\n    isBuiltIn: false,\n    defaultOptions: {\n      ...customStyleDefaults,\n      ...paneView.defaultOptions()\n    },\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView$6,\n    _internal_customPaneView: paneView\n  };\n  return definition;\n};\nconst isSeriesDefinition = value => {\n  return value._internal_createPaneView !== undefined;\n};\nfunction singleValueData(plotRow) {\n  const data = {\n    value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n  if (plotRow._internal_customValues !== undefined) {\n    data.customValues = plotRow._internal_customValues;\n  }\n  return data;\n}\nfunction lineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction areaData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_lineColor !== undefined) {\n    result.lineColor = plotRow._internal_lineColor;\n  }\n  if (plotRow._internal_topColor !== undefined) {\n    result.topColor = plotRow._internal_topColor;\n  }\n  if (plotRow._internal_bottomColor !== undefined) {\n    result.bottomColor = plotRow._internal_bottomColor;\n  }\n  return result;\n}\nfunction baselineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_topLineColor !== undefined) {\n    result.topLineColor = plotRow._internal_topLineColor;\n  }\n  if (plotRow._internal_bottomLineColor !== undefined) {\n    result.bottomLineColor = plotRow._internal_bottomLineColor;\n  }\n  if (plotRow._internal_topFillColor1 !== undefined) {\n    result.topFillColor1 = plotRow._internal_topFillColor1;\n  }\n  if (plotRow._internal_topFillColor2 !== undefined) {\n    result.topFillColor2 = plotRow._internal_topFillColor2;\n  }\n  if (plotRow._internal_bottomFillColor1 !== undefined) {\n    result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n  }\n  if (plotRow._internal_bottomFillColor2 !== undefined) {\n    result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n  }\n  return result;\n}\nfunction ohlcData(plotRow) {\n  const data = {\n    open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n    high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n    low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n    close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n  if (plotRow._internal_customValues !== undefined) {\n    data.customValues = plotRow._internal_customValues;\n  }\n  return data;\n}\nfunction barData(plotRow) {\n  const result = ohlcData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction candlestickData(plotRow) {\n  const result = ohlcData(plotRow);\n  const {\n    _internal_color: color,\n    _internal_borderColor: borderColor,\n    _internal_wickColor: wickColor\n  } = plotRow;\n  if (color !== undefined) {\n    result.color = color;\n  }\n  if (borderColor !== undefined) {\n    result.borderColor = borderColor;\n  }\n  if (wickColor !== undefined) {\n    result.wickColor = wickColor;\n  }\n  return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n  const seriesPlotRowToDataMap = {\n    Area: areaData,\n    Line: lineData,\n    Baseline: baselineData,\n    Histogram: lineData,\n    Bar: barData,\n    Candlestick: candlestickData,\n    Custom: customData\n  };\n  return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n  const time = plotRow._internal_originalTime;\n  return {\n    ...plotRow._internal_data,\n    time\n  };\n}\nconst crosshairOptionsDefaults = {\n  vertLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  horzLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  mode: 1 /* CrosshairMode.Magnet */\n};\nconst gridOptionsDefaults = {\n  vertLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  },\n  horzLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  }\n};\nconst layoutOptionsDefaults = {\n  background: {\n    type: \"solid\" /* ColorType.Solid */,\n    color: '#FFFFFF'\n  },\n  textColor: '#191919',\n  fontSize: 12,\n  fontFamily: defaultFontFamily,\n  panes: {\n    enableResize: true,\n    separatorColor: '#E0E3EB',\n    separatorHoverColor: 'rgba(178, 181, 189, 0.2)'\n  },\n  attributionLogo: true,\n  colorSpace: 'srgb',\n  colorParsers: []\n};\nconst priceScaleOptionsDefaults = {\n  autoScale: true,\n  mode: 0 /* PriceScaleMode.Normal */,\n  invertScale: false,\n  alignLabels: true,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  entireTextOnly: false,\n  visible: false,\n  ticksVisible: false,\n  scaleMargins: {\n    bottom: 0.1,\n    top: 0.2\n  },\n  minimumWidth: 0\n};\nconst timeScaleOptionsDefaults = {\n  rightOffset: 0,\n  barSpacing: 6,\n  minBarSpacing: 0.5,\n  maxBarSpacing: 0,\n  fixLeftEdge: false,\n  fixRightEdge: false,\n  lockVisibleTimeRangeOnResize: false,\n  rightBarStaysOnScroll: false,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  visible: true,\n  timeVisible: false,\n  secondsVisible: true,\n  shiftVisibleRangeOnNewBar: true,\n  allowShiftVisibleRangeOnWhitespaceReplacement: false,\n  ticksVisible: false,\n  uniformDistribution: false,\n  minimumHeight: 0,\n  allowBoldLabels: true,\n  ignoreWhitespaceIndices: false\n};\nfunction chartOptionsDefaults() {\n  return {\n    width: 0,\n    height: 0,\n    autoSize: false,\n    layout: layoutOptionsDefaults,\n    crosshair: crosshairOptionsDefaults,\n    grid: gridOptionsDefaults,\n    overlayPriceScales: {\n      ...priceScaleOptionsDefaults\n    },\n    leftPriceScale: {\n      ...priceScaleOptionsDefaults,\n      visible: false\n    },\n    rightPriceScale: {\n      ...priceScaleOptionsDefaults,\n      visible: true\n    },\n    timeScale: timeScaleOptionsDefaults,\n    localization: {\n      locale: isRunningOnClientSide ? navigator.language : '',\n      dateFormat: 'dd MMM \\'yy'\n    },\n    handleScroll: {\n      mouseWheel: true,\n      pressedMouseMove: true,\n      horzTouchDrag: true,\n      vertTouchDrag: true\n    },\n    handleScale: {\n      axisPressedMouseMove: {\n        time: true,\n        price: true\n      },\n      axisDoubleClickReset: {\n        time: true,\n        price: true\n      },\n      mouseWheel: true,\n      pinch: true\n    },\n    kineticScroll: {\n      mouse: false,\n      touch: true\n    },\n    trackingMode: {\n      exitMode: 1 /* TrackingModeExitMode.OnNextTap */\n    }\n  };\n}\nclass PaneApi {\n  constructor(chartWidget, seriesApiGetter, pane, chartApi) {\n    this._private__chartWidget = chartWidget;\n    this._private__pane = pane;\n    this._private__seriesApiGetter = seriesApiGetter;\n    this._internal__chartApi = chartApi;\n  }\n  getHeight() {\n    return this._private__pane._internal_height();\n  }\n  setHeight(height) {\n    const chartModel = this._private__chartWidget._internal_model();\n    const paneIndex = chartModel._internal_getPaneIndex(this._private__pane);\n    chartModel._internal_changePanesHeight(paneIndex, height);\n  }\n  paneIndex() {\n    return this._private__chartWidget._internal_model()._internal_getPaneIndex(this._private__pane);\n  }\n  moveTo(paneIndex) {\n    const currentIndex = this.paneIndex();\n    if (currentIndex === paneIndex) {\n      return;\n    }\n    assert(paneIndex >= 0 && paneIndex < this._private__chartWidget._internal_paneWidgets().length, 'Invalid pane index');\n    this._private__chartWidget._internal_model()._internal_swapPanes(currentIndex, paneIndex);\n  }\n  getSeries() {\n    return this._private__pane._internal_series().map(source => this._private__seriesApiGetter(source)) ?? [];\n  }\n  getHTMLElement() {\n    return this._private__chartWidget._internal_paneWidgets()[this.paneIndex()]._internal_getElement();\n  }\n  attachPrimitive(primitive) {\n    this._private__pane._internal_attachPrimitive(primitive);\n    if (primitive.attached) {\n      primitive.attached({\n        chart: this._internal__chartApi,\n        requestUpdate: () => this._private__pane._internal_model()._internal_fullUpdate()\n      });\n    }\n  }\n  detachPrimitive(primitive) {\n    this._private__pane._internal_detachPrimitive(primitive);\n  }\n}\nclass PriceScaleApi {\n  constructor(chartWidget, priceScaleId) {\n    this._private__chartWidget = chartWidget;\n    this._private__priceScaleId = priceScaleId;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n  }\n  options() {\n    return this._private__priceScale()._internal_options();\n  }\n  width() {\n    if (!isDefaultPriceScale(this._private__priceScaleId)) {\n      return 0;\n    }\n    return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n  }\n  _private__priceScale() {\n    return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n  assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n  if (data.length === 0) {\n    return;\n  }\n  let prevTime = bh.key(data[0].time);\n  for (let i = 1; i < data.length; ++i) {\n    const currentTime = bh.key(data[i].time);\n    const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n    assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n    prevTime = currentTime;\n  }\n}\nfunction checkSeriesValuesType(type, data) {\n  data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n  switch (type) {\n    case 'Bar':\n    case 'Candlestick':\n      return checkBarItem.bind(null, type);\n    case 'Area':\n    case 'Baseline':\n    case 'Line':\n    case 'Histogram':\n      return checkLineItem.bind(null, type);\n    case 'Custom':\n      return checkCustomItem.bind(null);\n  }\n}\nfunction checkBarItem(type, barItem) {\n  if (!isFulfilledData(barItem)) {\n    return;\n  }\n  ['open', 'high', 'low', 'close'].forEach(key => {\n    assert(typeof barItem[key] === 'number', `${type} series item data value of ${key} must be a number, got=${typeof barItem[key]}, value=${barItem[key]}`);\n    assert(isSafeValue(barItem[key]), `${type} series item data value of ${key} must be between ${MIN_SAFE_VALUE.toPrecision(16)} and ${MAX_SAFE_VALUE.toPrecision(16)}, got=${typeof barItem[key]}, value=${barItem[key]}`);\n  });\n}\nfunction checkLineItem(type, lineItem) {\n  if (!isFulfilledData(lineItem)) {\n    return;\n  }\n  assert(typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n  assert(isSafeValue(lineItem.value), `${type} series item data value must be between ${MIN_SAFE_VALUE.toPrecision(16)} and ${MAX_SAFE_VALUE.toPrecision(16)}, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n  // type: 'Custom',\n  // customItem: SeriesDataItemTypeMap[typeof type]\n) {\n  // Nothing to check yet...\n  return;\n}\nconst MIN_SAFE_VALUE = Number.MIN_SAFE_INTEGER / 100;\nconst MAX_SAFE_VALUE = Number.MAX_SAFE_INTEGER / 100;\nfunction isSafeValue(value) {\n  return value >= MIN_SAFE_VALUE && value <= MAX_SAFE_VALUE;\n}\nconst priceLineOptionsDefaults = {\n  color: '#FF0000',\n  price: 0,\n  lineStyle: 2 /* LineStyle.Dashed */,\n  lineWidth: 1,\n  lineVisible: true,\n  axisLabelVisible: true,\n  title: '',\n  axisLabelColor: '',\n  axisLabelTextColor: ''\n};\nclass PriceLine {\n  constructor(priceLine) {\n    this._private__priceLine = priceLine;\n  }\n  applyOptions(options) {\n    this._private__priceLine._internal_applyOptions(options);\n  }\n  options() {\n    return this._private__priceLine._internal_options();\n  }\n  _internal_priceLine() {\n    return this._private__priceLine;\n  }\n}\nclass SeriesApi {\n  constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior, paneApiGetter) {\n    this._private__dataChangedDelegate = new Delegate();\n    this._internal__series = series;\n    this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n    this._private__priceScaleApiProvider = priceScaleApiProvider;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._internal__chartApi = chartApi;\n    this._private__paneApiGetter = paneApiGetter;\n  }\n  _internal_destroy() {\n    this._private__dataChangedDelegate._internal_destroy();\n  }\n  priceFormatter() {\n    return this._internal__series._internal_formatter();\n  }\n  priceToCoordinate(price) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n  }\n  coordinateToPrice(coordinate) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n  }\n  barsInLogicalRange(range) {\n    if (range === null) {\n      return null;\n    }\n    // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n    const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n    const bars = this._internal__series._internal_bars();\n    if (bars._internal_isEmpty()) {\n      return null;\n    }\n    const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n    const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n    const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n    const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n    // this means that we request data in the data gap\n    // e.g. let's say we have series with data [0..10, 30..60]\n    // and we request bars info in range [15, 25]\n    // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n      return {\n        barsBefore: range.from - dataFirstIndex,\n        barsAfter: dataLastIndex - range.to\n      };\n    }\n    const barsBefore = dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex ? range.from - dataFirstIndex : dataFirstBarInRange._internal_index - dataFirstIndex;\n    const barsAfter = dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex ? dataLastIndex - range.to : dataLastIndex - dataLastBarInRange._internal_index;\n    const result = {\n      barsBefore,\n      barsAfter\n    };\n    // actually they can't exist separately\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n      result.from = dataFirstBarInRange._internal_originalTime;\n      result.to = dataLastBarInRange._internal_originalTime;\n    }\n    return result;\n  }\n  setData(data) {\n    checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n    this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n    this._private__onDataChanged('full');\n  }\n  update(bar, historicalUpdate = false) {\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n    this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar, historicalUpdate);\n    this._private__onDataChanged('update');\n  }\n  dataByIndex(logicalIndex, mismatchDirection) {\n    const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n    if (data === null) {\n      // actually it can be a whitespace\n      return null;\n    }\n    const creator = getSeriesDataCreator(this.seriesType());\n    return creator(data);\n  }\n  data() {\n    const seriesCreator = getSeriesDataCreator(this.seriesType());\n    const rows = this._internal__series._internal_bars()._internal_rows();\n    return rows.map(row => seriesCreator(row));\n  }\n  subscribeDataChanged(handler) {\n    this._private__dataChangedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeDataChanged(handler) {\n    this._private__dataChangedDelegate._internal_unsubscribe(handler);\n  }\n  applyOptions(options) {\n    this._internal__series._internal_applyOptions(options);\n  }\n  options() {\n    return clone(this._internal__series._internal_options());\n  }\n  priceScale() {\n    return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n  }\n  createPriceLine(options) {\n    checkPriceLineOptions(options);\n    const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n    const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n    return new PriceLine(priceLine);\n  }\n  removePriceLine(line) {\n    this._internal__series._internal_removePriceLine(line._internal_priceLine());\n  }\n  priceLines() {\n    return this._internal__series._internal_priceLines().map(priceLine => new PriceLine(priceLine));\n  }\n  seriesType() {\n    return this._internal__series._internal_seriesType();\n  }\n  attachPrimitive(primitive) {\n    // at this point we cast the generic to unknown because we\n    // don't want the model to know the types of the API (â—‘_â—‘)\n    this._internal__series._internal_attachPrimitive(primitive);\n    if (primitive.attached) {\n      primitive.attached({\n        chart: this._internal__chartApi,\n        series: this,\n        requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate(),\n        horzScaleBehavior: this._private__horzScaleBehavior\n      });\n    }\n  }\n  detachPrimitive(primitive) {\n    this._internal__series._internal_detachPrimitive(primitive);\n    if (primitive.detached) {\n      primitive.detached();\n    }\n    this._internal__series._internal_model()._internal_fullUpdate();\n  }\n  getPane() {\n    const series = this._internal__series;\n    const pane = ensureNotNull(this._internal__series._internal_model()._internal_paneForSource(series));\n    return this._private__paneApiGetter(pane);\n  }\n  moveToPane(paneIndex) {\n    this._internal__series._internal_model()._internal_moveSeriesToPane(this._internal__series, paneIndex);\n  }\n  _private__onDataChanged(scope) {\n    if (this._private__dataChangedDelegate._internal_hasListeners()) {\n      this._private__dataChangedDelegate._internal_fire(scope);\n    }\n  }\n}\nclass TimeScaleApi {\n  constructor(model, timeAxisWidget, horzScaleBehavior) {\n    this._private__timeRangeChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__sizeChanged = new Delegate();\n    this._private__model = model;\n    this._private__timeScale = model._internal_timeScale();\n    this._private__timeAxisWidget = timeAxisWidget;\n    this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n    this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n    this._private__horzScaleBehavior = horzScaleBehavior;\n  }\n  _internal_destroy() {\n    this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n    this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n    this._private__timeRangeChanged._internal_destroy();\n    this._private__logicalRangeChanged._internal_destroy();\n    this._private__sizeChanged._internal_destroy();\n  }\n  scrollPosition() {\n    return this._private__timeScale._internal_rightOffset();\n  }\n  scrollToPosition(position, animated) {\n    if (!animated) {\n      this._private__model._internal_setRightOffset(position);\n      return;\n    }\n    this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n  }\n  scrollToRealTime() {\n    this._private__timeScale._internal_scrollToRealTime();\n  }\n  getVisibleRange() {\n    const timeRange = this._private__timeScale._internal_visibleTimeRange();\n    if (timeRange === null) {\n      return null;\n    }\n    return {\n      from: timeRange.from.originalTime,\n      to: timeRange.to.originalTime\n    };\n  }\n  setVisibleRange(range) {\n    const convertedRange = {\n      from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n      to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to)\n    };\n    const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n    this._private__model._internal_setTargetLogicalRange(logicalRange);\n  }\n  getVisibleLogicalRange() {\n    const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n    if (logicalRange === null) {\n      return null;\n    }\n    return {\n      from: logicalRange._internal_left(),\n      to: logicalRange._internal_right()\n    };\n  }\n  setVisibleLogicalRange(range) {\n    assert(range.from <= range.to, 'The from index cannot be after the to index.');\n    this._private__model._internal_setTargetLogicalRange(range);\n  }\n  resetTimeScale() {\n    this._private__model._internal_resetTimeScale();\n  }\n  fitContent() {\n    this._private__model._internal_fitContent();\n  }\n  logicalToCoordinate(logical) {\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return timeScale._internal_indexToCoordinate(logical);\n    }\n  }\n  coordinateToLogical(x) {\n    if (this._private__timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return this._private__timeScale._internal_coordinateToIndex(x);\n    }\n  }\n  timeToIndex(time, findNearest) {\n    const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n    return this._private__timeScale._internal_timeToIndex(timePoint, findNearest);\n  }\n  timeToCoordinate(time) {\n    const timePointIndex = this.timeToIndex(time, false);\n    if (timePointIndex === null) {\n      return null;\n    }\n    return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n  }\n  coordinateToTime(x) {\n    const timeScale = this._private__model._internal_timeScale();\n    const timePointIndex = timeScale._internal_coordinateToIndex(x);\n    const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n    if (timePoint === null) {\n      return null;\n    }\n    return timePoint.originalTime;\n  }\n  width() {\n    return this._private__timeAxisWidget._internal_getSize().width;\n  }\n  height() {\n    return this._private__timeAxisWidget._internal_getSize().height;\n  }\n  subscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_subscribe(handler);\n  }\n  unsubscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_unsubscribe(handler);\n  }\n  applyOptions(options) {\n    this._private__timeScale._internal_applyOptions(options);\n  }\n  options() {\n    return {\n      ...clone(this._private__timeScale._internal_options()),\n      barSpacing: this._private__timeScale._internal_barSpacing()\n    };\n  }\n  _private__onVisibleBarsChanged() {\n    if (this._private__timeRangeChanged._internal_hasListeners()) {\n      this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n    }\n  }\n  _private__onVisibleLogicalRangeChanged() {\n    if (this._private__logicalRangeChanged._internal_hasListeners()) {\n      this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n    }\n  }\n  _private__onSizeChanged(size) {\n    this._private__sizeChanged._internal_fire(size.width, size.height);\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction patchPriceFormat(priceFormat) {\n  if (priceFormat === undefined || priceFormat.type === 'custom') {\n    return;\n  }\n  const priceFormatBuiltIn = priceFormat;\n  if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n    priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n  }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n  if (isBoolean(options['handleScale'])) {\n    const handleScale = options['handleScale'];\n    options['handleScale'] = {\n      axisDoubleClickReset: {\n        time: handleScale,\n        price: handleScale\n      },\n      axisPressedMouseMove: {\n        time: handleScale,\n        price: handleScale\n      },\n      mouseWheel: handleScale,\n      pinch: handleScale\n    };\n  } else if (options['handleScale'] !== undefined) {\n    const {\n      axisPressedMouseMove,\n      axisDoubleClickReset\n    } = options['handleScale'];\n    if (isBoolean(axisPressedMouseMove)) {\n      options['handleScale'].axisPressedMouseMove = {\n        time: axisPressedMouseMove,\n        price: axisPressedMouseMove\n      };\n    }\n    if (isBoolean(axisDoubleClickReset)) {\n      options['handleScale'].axisDoubleClickReset = {\n        time: axisDoubleClickReset,\n        price: axisDoubleClickReset\n      };\n    }\n  }\n  const handleScroll = options['handleScroll'];\n  if (isBoolean(handleScroll)) {\n    options['handleScroll'] = {\n      horzTouchDrag: handleScroll,\n      vertTouchDrag: handleScroll,\n      mouseWheel: handleScroll,\n      pressedMouseMove: handleScroll\n    };\n  }\n}\nfunction toInternalOptions(options) {\n  migrateHandleScaleScrollOptions(options);\n  return options;\n}\nclass ChartApi {\n  constructor(container, horzScaleBehavior, options) {\n    this._private__seriesMap = new Map();\n    this._private__seriesMapReversed = new Map();\n    this._private__clickedDelegate = new Delegate();\n    this._private__dblClickedDelegate = new Delegate();\n    this._private__crosshairMovedDelegate = new Delegate();\n    this._private__panes = new WeakMap();\n    this._private__dataLayer = new DataLayer(horzScaleBehavior);\n    const internalOptions = options === undefined ? clone(chartOptionsDefaults()) : merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n    this._internal__horzScaleBehavior = horzScaleBehavior;\n    this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n    this._private__chartWidget._internal_clicked()._internal_subscribe(paramSupplier => {\n      if (this._private__clickedDelegate._internal_hasListeners()) {\n        this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_dblClicked()._internal_subscribe(paramSupplier => {\n      if (this._private__dblClickedDelegate._internal_hasListeners()) {\n        this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_subscribe(paramSupplier => {\n      if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n        this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    const model = this._private__chartWidget._internal_model();\n    this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._internal__horzScaleBehavior);\n  }\n  remove() {\n    this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__timeScaleApi._internal_destroy();\n    this._private__chartWidget._internal_destroy();\n    this._private__seriesMap.clear();\n    this._private__seriesMapReversed.clear();\n    this._private__clickedDelegate._internal_destroy();\n    this._private__dblClickedDelegate._internal_destroy();\n    this._private__crosshairMovedDelegate._internal_destroy();\n    this._private__dataLayer._internal_destroy();\n  }\n  resize(width, height, forceRepaint) {\n    if (this.autoSizeActive()) {\n      // We return early here instead of checking this within the actual _chartWidget.resize method\n      // because this should only apply to external resize requests.\n      warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n      return;\n    }\n    this._private__chartWidget._internal_resize(width, height, forceRepaint);\n  }\n  addCustomSeries(customPaneView, options = {}, paneIndex = 0) {\n    const paneView = ensure(customPaneView);\n    const definition = createCustomSeriesDefinition(paneView);\n    return this._private__addSeriesImpl(definition, options, paneIndex);\n  }\n  addSeries(definition, options = {}, paneIndex = 0) {\n    return this._private__addSeriesImpl(definition, options, paneIndex);\n  }\n  removeSeries(seriesApi) {\n    const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n    const update = this._private__dataLayer._internal_removeSeries(series);\n    const model = this._private__chartWidget._internal_model();\n    model._internal_removeSeries(series);\n    this._private__sendUpdateToChart(update);\n    this._private__seriesMap.delete(seriesApi);\n    this._private__seriesMapReversed.delete(series);\n  }\n  _internal_applyNewData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n  }\n  _internal_updateData(series, data, historicalUpdate) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data, historicalUpdate));\n  }\n  subscribeClick(handler) {\n    this._private__clickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeClick(handler) {\n    this._private__clickedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeDblClick(handler) {\n    this._private__dblClickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeDblClick(handler) {\n    this._private__dblClickedDelegate._internal_unsubscribe(handler);\n  }\n  priceScale(priceScaleId) {\n    return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n  }\n  timeScale() {\n    return this._private__timeScaleApi;\n  }\n  applyOptions(options) {\n    {\n      const colorSpace = options.layout?.colorSpace;\n      if (colorSpace !== undefined && colorSpace !== this.options().layout.colorSpace) {\n        throw new Error(`colorSpace option should not be changed once the chart has been created.`);\n      }\n      const colorParsers = options.layout?.colorParsers;\n      if (colorParsers !== undefined && colorParsers !== this.options().layout.colorParsers) {\n        throw new Error(`colorParsers option should not be changed once the chart has been created.`);\n      }\n    }\n    this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n  }\n  options() {\n    return this._private__chartWidget._internal_options();\n  }\n  takeScreenshot() {\n    return this._private__chartWidget._internal_takeScreenshot();\n  }\n  removePane(index) {\n    this._private__chartWidget._internal_model()._internal_removePane(index);\n  }\n  swapPanes(first, second) {\n    this._private__chartWidget._internal_model()._internal_swapPanes(first, second);\n  }\n  autoSizeActive() {\n    return this._private__chartWidget._internal_autoSizeActive();\n  }\n  chartElement() {\n    return this._private__chartWidget._internal_element();\n  }\n  panes() {\n    return this._private__chartWidget._internal_model()._internal_panes().map(pane => this._private__getPaneApi(pane));\n  }\n  paneSize(paneIndex = 0) {\n    const size = this._private__chartWidget._internal_paneSize(paneIndex);\n    return {\n      height: size.height,\n      width: size.width\n    };\n  }\n  setCrosshairPosition(price, horizontalPosition, seriesApi) {\n    const series = this._private__seriesMap.get(seriesApi);\n    if (series === undefined) {\n      return;\n    }\n    const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n    if (pane === null) {\n      return;\n    }\n    this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n  }\n  clearCrosshairPosition() {\n    this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n  }\n  horzBehaviour() {\n    return this._internal__horzScaleBehavior;\n  }\n  _private__addSeriesImpl(definition, options = {}, paneIndex = 0) {\n    assert(isSeriesDefinition(definition));\n    patchPriceFormat(options.priceFormat);\n    if (definition.type === 'Candlestick') {\n      fillUpDownCandlesticksColors(options);\n    }\n    const strictOptions = merge(clone(seriesOptionsDefaults), clone(definition.defaultOptions), options);\n    const createPaneView = definition._internal_createPaneView;\n    const series = new Series(this._private__chartWidget._internal_model(), definition.type, strictOptions, createPaneView, definition._internal_customPaneView);\n    this._private__chartWidget._internal_model()._internal_addSeriesToPane(series, paneIndex);\n    const res = new SeriesApi(series, this, this, this, this._internal__horzScaleBehavior, pane => this._private__getPaneApi(pane));\n    this._private__seriesMap.set(res, series);\n    this._private__seriesMapReversed.set(series, res);\n    return res;\n  }\n  _private__sendUpdateToChart(update) {\n    const model = this._private__chartWidget._internal_model();\n    model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n    update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n    model._internal_timeScale()._internal_recalculateIndicesWithData();\n    model._internal_recalculateAllPanes();\n  }\n  _private__mapSeriesToApi(series) {\n    return ensureDefined(this._private__seriesMapReversed.get(series));\n  }\n  _private__convertMouseParams(param) {\n    const seriesData = new Map();\n    param._internal_seriesData.forEach((plotRow, series) => {\n      const seriesType = series._internal_seriesType();\n      const data = getSeriesDataCreator(seriesType)(plotRow);\n      if (seriesType !== 'Custom') {\n        assert(isFulfilledData(data));\n      } else {\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n      }\n      seriesData.set(this._private__mapSeriesToApi(series), data);\n    });\n    const hoveredSeries = param._internal_hoveredSeries === undefined || !this._private__seriesMapReversed.has(param._internal_hoveredSeries) ? undefined : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n    return {\n      time: param._internal_originalTime,\n      logical: param._internal_index,\n      point: param._internal_point,\n      paneIndex: param._internal_paneIndex,\n      hoveredSeries,\n      hoveredObjectId: param._internal_hoveredObject,\n      seriesData,\n      sourceEvent: param._internal_touchMouseEventData\n    };\n  }\n  _private__getPaneApi(pane) {\n    let result = this._private__panes.get(pane);\n    if (!result) {\n      result = new PaneApi(this._private__chartWidget, series => this._private__mapSeriesToApi(series), pane, this);\n      this._private__panes.set(pane, result);\n    }\n    return result;\n  }\n}\nfunction fetchHtmlElement(container) {\n  if (isString(container)) {\n    const element = document.getElementById(container);\n    assert(element !== null, `Cannot find element in DOM with id=${container}`);\n    return element;\n  }\n  return container;\n}\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n  const htmlElement = fetchHtmlElement(container);\n  const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n  horzScaleBehavior.setOptions(res.options());\n  return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n  return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n/**\n * Provides the default implementation of the horizontal scale (time-based) that can be used as a base for extending the horizontal scale with custom behavior.\n * This allows for the introduction of custom functionality without re-implementing the entire {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface.\n *\n * For further details, refer to the {@link createChartEx} chart constructor method.\n *\n * @returns An uninitialized class implementing the {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface\n */\nfunction defaultHorzScaleBehavior() {\n  return HorzScaleBehaviorTime;\n}\nclass LinePaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, true);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createRawItemBase(time, price) {\n    return {\n      _internal_time: time,\n      _internal_price: price,\n      _internal_x: NaN,\n      _internal_y: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n      return this._internal__createRawItem(row._internal_index, value, colorer);\n    });\n  }\n}\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n  if (visibleRange.to - visibleRange.from <= 0) {\n    return;\n  }\n  const {\n    horizontalPixelRatio,\n    verticalPixelRatio,\n    context\n  } = renderingScope;\n  let prevStyle = null;\n  const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n  const correction = tickWidth % 2 / 2;\n  const radius = pointMarkersRadius * verticalPixelRatio + correction;\n  for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n    const point = items[i];\n    if (point) {\n      const style = styleGetter(renderingScope, point);\n      if (style !== prevStyle) {\n        context.beginPath();\n        if (prevStyle !== null) {\n          context.fill();\n        }\n        context.fillStyle = style;\n        prevStyle = style;\n      }\n      const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n      const centerY = point._internal_y * verticalPixelRatio;\n      context.moveTo(centerX, centerY);\n      context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n    }\n  }\n  context.fill();\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n  if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n    return;\n  }\n  const {\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  } = renderingScope;\n  const firstItem = items[visibleRange.from];\n  let currentStyle = styleGetter(renderingScope, firstItem);\n  let currentStyleFirstItem = firstItem;\n  if (visibleRange.to - visibleRange.from < 2) {\n    const halfBarWidth = barWidth / 2;\n    ctx.beginPath();\n    const item1 = {\n      _internal_x: firstItem._internal_x - halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    const item2 = {\n      _internal_x: firstItem._internal_x + halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n    ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n    finishStyledArea(renderingScope, currentStyle, item1, item2);\n  } else {\n    const changeStyle = (newStyle, currentItem) => {\n      finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n      ctx.beginPath();\n      currentStyle = newStyle;\n      currentStyleFirstItem = currentItem;\n    };\n    let currentItem = currentStyleFirstItem;\n    ctx.beginPath();\n    ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n    for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n      currentItem = items[i];\n      const itemStyle = styleGetter(renderingScope, currentItem);\n      switch (lineType) {\n        case 0 /* LineType.Simple */:\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n          break;\n        case 1 /* LineType.WithSteps */:\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n          if (itemStyle !== currentStyle) {\n            changeStyle(itemStyle, currentItem);\n            ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n          }\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n          break;\n        case 2 /* LineType.Curved */:\n          {\n            const [cp1, cp2] = getControlPoints(items, i - 1, i);\n            ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            break;\n          }\n      }\n      if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n        changeStyle(itemStyle, currentItem);\n        ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n      }\n    }\n    if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n      finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n    }\n  }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n  return {\n    _internal_x: p1._internal_x - p2._internal_x,\n    _internal_y: p1._internal_y - p2._internal_y\n  };\n}\nfunction add(p1, p2) {\n  return {\n    _internal_x: p1._internal_x + p2._internal_x,\n    _internal_y: p1._internal_y + p2._internal_y\n  };\n}\nfunction divide(p1, n) {\n  return {\n    _internal_x: p1._internal_x / n,\n    _internal_y: p1._internal_y / n\n  };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n  const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n  const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n  const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n  const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n  return [cp1, cp2];\n}\nfunction finishStyledArea$1(scope, style) {\n  const ctx = scope.context;\n  ctx.strokeStyle = style;\n  ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineType: lineType,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_pointMarkersRadius: pointMarkersRadius\n    } = this._internal__data;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n    setLineStyle(ctx, lineStyle);\n    ctx.lineJoin = 'round';\n    const styleGetter = this._internal__strokeStyle.bind(this);\n    if (lineType !== undefined) {\n      walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea$1);\n    }\n    if (pointMarkersRadius) {\n      drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n    }\n  }\n}\nclass PaneRendererLine extends PaneRendererLineBase {\n  _internal__strokeStyle(renderingScope, item) {\n    return item._internal_lineColor;\n  }\n}\nclass SeriesLinePaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererLine();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return {\n      ...this._internal__createRawItemBase(time, price),\n      ...colorer._internal_barStyle(time)\n    };\n  }\n  _internal__prepareRendererData() {\n    const options = this._internal__series._internal_options();\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_lineWidth: options.lineWidth,\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nconst lineStyleDefaults = {\n  color: '#2196f3',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst createPaneView$5 = (series, model) => new SeriesLinePaneView(series, model);\nconst createLineSeries = () => {\n  const definition = {\n    type: 'Line',\n    isBuiltIn: true,\n    defaultOptions: lineStyleDefaults,\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView$5\n  };\n  return definition;\n};\nconst lineSeries = createLineSeries();\nfunction createDebouncedMicroTaskHandler(callback) {\n  let scheduled = false;\n  return function (...args) {\n    if (!scheduled) {\n      scheduled = true;\n      queueMicrotask(() => {\n        callback(...args);\n        scheduled = false;\n      });\n    }\n  };\n}\nfunction markWithGreaterWeight$1(a, b) {\n  return a.weight > b.weight ? a : b;\n}\nfunction toInternalHorzScaleItem(item) {\n  return item;\n}\nfunction fromInternalHorzScaleItem(item) {\n  return item;\n}\nclass YieldCurveHorzScaleBehavior {\n  constructor() {\n    this._private__pointsChangedDelegate = new Delegate();\n    this._private__invalidateWhitespace = createDebouncedMicroTaskHandler(() => this._private__pointsChangedDelegate._internal_fire(this._private__largestIndex));\n    this._private__largestIndex = 0;\n  }\n  /** Data changes might require that the whitespace be generated again */\n  _internal_whitespaceInvalidated() {\n    return this._private__pointsChangedDelegate;\n  }\n  _internal_destroy() {\n    this._private__pointsChangedDelegate._internal_destroy();\n  }\n  options() {\n    return this._private__options;\n  }\n  setOptions(options) {\n    this._private__options = options;\n  }\n  preprocessData(data) {\n    // No preprocessing needed for yield curve data\n  }\n  updateFormatter(options) {\n    if (!this._private__options) {\n      return;\n    }\n    this._private__options.localization = options;\n  }\n  createConverterToInternalObj(data) {\n    this._private__invalidateWhitespace();\n    return time => {\n      if (time > this._private__largestIndex) {\n        this._private__largestIndex = time;\n      }\n      return toInternalHorzScaleItem(time);\n    };\n  }\n  key(internalItem) {\n    return internalItem;\n  }\n  cacheKey(internalItem) {\n    return fromInternalHorzScaleItem(internalItem);\n  }\n  convertHorzItemToInternal(item) {\n    return toInternalHorzScaleItem(item);\n  }\n  formatHorzItem(item) {\n    return this._private__formatTime(item);\n  }\n  formatTickmark(item) {\n    return this._private__formatTime(item.time);\n  }\n  maxTickMarkWeight(marks) {\n    return marks.reduce(markWithGreaterWeight$1, marks[0]).weight;\n  }\n  fillWeightsForPoints(sortedTimePoints, startIndex) {\n    const timeWeight = time => {\n      if (time % 120 === 0) {\n        return 10;\n      }\n      if (time % 60 === 0) {\n        return 9;\n      }\n      if (time % 36 === 0) {\n        return 8;\n      }\n      if (time % 12 === 0) {\n        return 7;\n      }\n      if (time % 6 === 0) {\n        return 6;\n      }\n      if (time % 3 === 0) {\n        return 5;\n      }\n      if (time % 1 === 0) {\n        return 4;\n      }\n      return 0;\n    };\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n      sortedTimePoints[index].timeWeight = timeWeight(fromInternalHorzScaleItem(sortedTimePoints[index].time));\n    }\n    this._private__largestIndex = fromInternalHorzScaleItem(sortedTimePoints[sortedTimePoints.length - 1].time);\n    this._private__invalidateWhitespace();\n  }\n  _private__formatTime(months) {\n    if (this._private__options.localization?.timeFormatter) {\n      return this._private__options.localization.timeFormatter(months);\n    }\n    if (months < 12) {\n      return `${months}M`;\n    }\n    const years = Math.floor(months / 12);\n    const remainingMonths = months % 12;\n    if (remainingMonths === 0) {\n      return `${years}Y`;\n    }\n    return `${years}Y${remainingMonths}M`;\n  }\n}\nconst yieldChartOptionsDefaults = {\n  baseResolution: 1,\n  minimumTimeRange: 120,\n  startTimeRange: 0\n};\nfunction generateWhitespaceData({\n  _internal_start: start,\n  _internal_end: end,\n  _internal_resolution: resolution\n}) {\n  return Array.from({\n    length: Math.floor((end - start) / resolution) + 1\n  },\n  // eslint-disable-next-line quote-props\n  (item, i) => ({\n    'time': start + i * resolution\n  }));\n}\nfunction buildWhitespaceState(options, lastIndex) {\n  return {\n    _internal_start: Math.max(0, options.startTimeRange),\n    _internal_end: Math.max(0, options.minimumTimeRange, lastIndex || 0),\n    _internal_resolution: Math.max(1, options.baseResolution)\n  };\n}\nconst generateWhitespaceHash = ({\n  _internal_start: start,\n  _internal_end: end,\n  _internal_resolution: resolution\n}) => `${start}~${end}~${resolution}`;\nconst defaultOptions = {\n  yieldCurve: yieldChartOptionsDefaults,\n  // and add sensible default options for yield charts which\n  // are different from the usual defaults.\n  timeScale: {\n    ignoreWhitespaceIndices: true\n  },\n  leftPriceScale: {\n    visible: true\n  },\n  rightPriceScale: {\n    visible: false\n  },\n  localization: {\n    priceFormatter: value => {\n      return value.toFixed(3) + '%';\n    }\n  }\n};\nconst lineStyleDefaultOptionOverrides = {\n  lastValueVisible: false,\n  priceLineVisible: false\n};\nclass YieldChartApi extends ChartApi {\n  constructor(container, options) {\n    const fullOptions = merge(defaultOptions, options || {});\n    const horzBehaviour = new YieldCurveHorzScaleBehavior();\n    super(container, horzBehaviour, fullOptions);\n    horzBehaviour.setOptions(this.options());\n    this._initWhitespaceSeries();\n  }\n  addSeries(definition, options = {}, paneIndex = 0) {\n    if (definition.isBuiltIn && ['Area', 'Line'].includes(definition.type) === false) {\n      throw new Error('Yield curve only support Area and Line series');\n    }\n    const optionOverrides = {\n      ...lineStyleDefaultOptionOverrides,\n      ...options\n    };\n    return super.addSeries(definition, optionOverrides, paneIndex);\n  }\n  _initWhitespaceSeries() {\n    const horzBehaviour = this.horzBehaviour();\n    const whiteSpaceSeries = this.addSeries(lineSeries);\n    let currentWhitespaceHash;\n    function updateWhitespace(lastIndex) {\n      const newWhitespaceState = buildWhitespaceState(horzBehaviour.options().yieldCurve, lastIndex);\n      const newWhitespaceHash = generateWhitespaceHash(newWhitespaceState);\n      if (newWhitespaceHash !== currentWhitespaceHash) {\n        currentWhitespaceHash = newWhitespaceHash;\n        whiteSpaceSeries.setData(generateWhitespaceData(newWhitespaceState));\n      }\n    }\n    updateWhitespace(0);\n    horzBehaviour._internal_whitespaceInvalidated()._internal_subscribe(updateWhitespace);\n  }\n}\n\n/**\n * Creates a yield curve chart with the specified options.\n *\n * A yield curve chart differs from the default chart type\n * in the following ways:\n * - Horizontal scale is linearly spaced, and defined in monthly\n * time duration units\n * - Whitespace is ignored for the crosshair and grid lines\n *\n * @param container - ID of HTML element or element itself\n * @param options - The yield chart options.\n * @returns An interface to the created chart\n */\nfunction createYieldCurveChart(container, options) {\n  const htmlElement = fetchHtmlElement(container);\n  const chartApi = new YieldChartApi(htmlElement, options);\n  return chartApi;\n}\nfunction markWithGreaterWeight(a, b) {\n  return a.weight > b.weight ? a : b;\n}\nclass HorzScaleBehaviorPrice {\n  options() {\n    return this._private__options;\n  }\n  setOptions(options) {\n    this._private__options = options;\n  }\n  preprocessData(data) {}\n  updateFormatter(options) {\n    if (!this._private__options) {\n      return;\n    }\n    this._private__options.localization = options;\n  }\n  createConverterToInternalObj(data) {\n    return price => price;\n  }\n  key(internalItem) {\n    return internalItem;\n  }\n  cacheKey(internalItem) {\n    return internalItem;\n  }\n  convertHorzItemToInternal(item) {\n    return item;\n  }\n  formatHorzItem(item) {\n    return item.toFixed(this._private__precision());\n  }\n  formatTickmark(item, localizationOptions) {\n    return item.time.toFixed(this._private__precision());\n  }\n  maxTickMarkWeight(marks) {\n    return marks.reduce(markWithGreaterWeight, marks[0]).weight;\n  }\n  fillWeightsForPoints(sortedTimePoints, startIndex) {\n    const priceWeight = price => {\n      if (price === Math.ceil(price / 100) * 100) {\n        return 8;\n      }\n      if (price === Math.ceil(price / 50) * 50) {\n        return 7;\n      }\n      if (price === Math.ceil(price / 25) * 25) {\n        return 6;\n      }\n      if (price === Math.ceil(price / 10) * 10) {\n        return 5;\n      }\n      if (price === Math.ceil(price / 5) * 5) {\n        return 4;\n      }\n      if (price === Math.ceil(price)) {\n        return 3;\n      }\n      if (price * 2 === Math.ceil(price * 2)) {\n        return 1;\n      }\n      return 0;\n    };\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n      sortedTimePoints[index].timeWeight = priceWeight(sortedTimePoints[index].time);\n    }\n  }\n  _private__precision() {\n    return this._private__options.localization.precision;\n  }\n}\n\n/**\n * Creates an 'options' chart with price values on the horizontal scale.\n *\n * This function is used to create a specialized chart type where the horizontal scale\n * represents price values instead of time. It's particularly useful for visualizing\n * option chains, price distributions, or any data where price is the primary x-axis metric.\n *\n * @param container - The DOM element or its id where the chart will be rendered.\n * @param options - Optional configuration options for the price chart.\n * @returns An instance of IChartApiBase configured for price-based horizontal scaling.\n */\nfunction createOptionsChart(container, options) {\n  return createChartEx(container, new HorzScaleBehaviorPrice(), options);\n}\nfunction finishStyledArea(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n  const {\n    context,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  } = scope;\n  context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n  context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n  context.closePath();\n  context.fillStyle = style;\n  context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_lineType: lineType\n    } = this._internal__data;\n    const baseLevelCoordinate = this._internal__data._internal_baseLevelCoordinate ?? (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = lineWidth;\n    setLineStyle(ctx, lineStyle);\n    // walk lines with width=1 to have more accurate gradient's filling\n    ctx.lineWidth = 1;\n    walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea.bind(null, baseLevelCoordinate));\n  }\n}\nclass GradientStyleCache {\n  // eslint-disable-next-line complexity\n  _internal_get(scope, params) {\n    const cachedParams = this._private__params;\n    const {\n      _internal_topColor1: topColor1,\n      _internal_topColor2: topColor2,\n      _internal_bottomColor1: bottomColor1,\n      _internal_bottomColor2: bottomColor2,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_topCoordinate: topCoordinate,\n      _internal_bottomCoordinate: bottomCoordinate\n    } = params;\n    if (this._private__cachedValue === undefined || cachedParams === undefined || cachedParams._internal_topColor1 !== topColor1 || cachedParams._internal_topColor2 !== topColor2 || cachedParams._internal_bottomColor1 !== bottomColor1 || cachedParams._internal_bottomColor2 !== bottomColor2 || cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate || cachedParams._internal_topCoordinate !== topCoordinate || cachedParams._internal_bottomCoordinate !== bottomCoordinate) {\n      const {\n        verticalPixelRatio\n      } = scope;\n      const multiplier = baseLevelCoordinate || topCoordinate > 0 ? verticalPixelRatio : 1;\n      const top = topCoordinate * multiplier;\n      const bottom = bottomCoordinate === scope.bitmapSize.height ? bottomCoordinate : bottomCoordinate * multiplier;\n      const baseline = (baseLevelCoordinate ?? 0) * multiplier;\n      const gradient = scope.context.createLinearGradient(0, top, 0, bottom);\n      gradient.addColorStop(0, topColor1);\n      if (baseLevelCoordinate !== null && baseLevelCoordinate !== undefined) {\n        const range = bottom - top;\n        const baselineRatio = clamp((baseline - top) / range, 0, 1);\n        gradient.addColorStop(baselineRatio, topColor2);\n        gradient.addColorStop(baselineRatio, bottomColor1);\n      }\n      gradient.addColorStop(1, bottomColor2);\n      this._private__cachedValue = gradient;\n      this._private__params = params;\n    }\n    return this._private__cachedValue;\n  }\n}\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = new GradientStyleCache();\n  }\n  _internal__fillStyle(renderingScope, item) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    return this._private__fillCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topFillColor1,\n      _internal_topColor2: item._internal_topFillColor2,\n      _internal_bottomColor1: item._internal_bottomFillColor1,\n      _internal_bottomColor2: item._internal_bottomFillColor2,\n      _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n      _internal_topCoordinate: data._internal_topCoordinate ?? 0,\n      _internal_bottomCoordinate: data._internal_bottomCoordinate ?? renderingScope.bitmapSize.height\n    });\n  }\n}\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n  constructor() {\n    super(...arguments);\n    this._private__strokeCache = new GradientStyleCache();\n  }\n  _internal__strokeStyle(renderingScope, item) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    return this._private__strokeCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topLineColor,\n      _internal_topColor2: item._internal_topLineColor,\n      _internal_bottomColor1: item._internal_bottomLineColor,\n      _internal_bottomColor2: item._internal_bottomLineColor,\n      _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n      _internal_topCoordinate: data._internal_topCoordinate ?? 0,\n      _internal_bottomCoordinate: data._internal_bottomCoordinate ?? renderingScope.bitmapSize.height\n    });\n  }\n}\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n    this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n    this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return {\n      ...this._internal__createRawItemBase(time, price),\n      ...colorer._internal_barStyle(time)\n    };\n  }\n  _internal__prepareRendererData() {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    const options = this._internal__series._internal_options();\n    const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n    const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n    if (this._internal__itemsVisibleRange === null || this._internal__items.length === 0) {\n      return;\n    }\n    let topCoordinate;\n    let bottomCoordinate;\n    if (options.relativeGradient) {\n      topCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n      bottomCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n      for (let i = this._internal__itemsVisibleRange.from; i < this._internal__itemsVisibleRange.to; i++) {\n        const item = this._internal__items[i];\n        if (item._internal_y < topCoordinate) {\n          topCoordinate = item._internal_y;\n        }\n        if (item._internal_y > bottomCoordinate) {\n          bottomCoordinate = item._internal_y;\n        }\n      }\n    }\n    this._private__baselineAreaRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: options.lineWidth,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineType,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_topCoordinate: topCoordinate,\n      _internal_bottomCoordinate: bottomCoordinate,\n      _internal_invertFilledArea: false,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n    this._private__baselineLineRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: options.lineWidth,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_topCoordinate: topCoordinate,\n      _internal_bottomCoordinate: bottomCoordinate,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n  }\n}\nconst baselineStyleDefaults = {\n  baseValue: {\n    type: 'price',\n    price: 0\n  },\n  relativeGradient: false,\n  topFillColor1: 'rgba(38, 166, 154, 0.28)',\n  topFillColor2: 'rgba(38, 166, 154, 0.05)',\n  topLineColor: 'rgba(38, 166, 154, 1)',\n  bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n  bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n  bottomLineColor: 'rgba(239, 83, 80, 1)',\n  lineWidth: 3,\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst createPaneView$4 = (series, model) => new SeriesBaselinePaneView(series, model);\nconst createSeries$4 = () => {\n  const definition = {\n    type: 'Baseline',\n    isBuiltIn: true,\n    defaultOptions: baselineStyleDefaults,\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView$4\n  };\n  return definition;\n};\nconst baselineSeries = createSeries$4();\nclass PaneRendererArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = new GradientStyleCache();\n  }\n  _internal__fillStyle(renderingScope, item) {\n    return this._private__fillCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topColor,\n      _internal_topColor2: '',\n      _internal_bottomColor1: '',\n      _internal_bottomColor2: item._internal_bottomColor,\n      _internal_topCoordinate: this._internal__data?._internal_topCoordinate ?? 0,\n      _internal_bottomCoordinate: renderingScope.bitmapSize.height\n    });\n  }\n}\nclass SeriesAreaPaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__areaRenderer = new PaneRendererArea();\n    this._private__lineRenderer = new PaneRendererLine();\n    this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return {\n      ...this._internal__createRawItemBase(time, price),\n      ...colorer._internal_barStyle(time)\n    };\n  }\n  _internal__prepareRendererData() {\n    const options = this._internal__series._internal_options();\n    if (this._internal__itemsVisibleRange === null || this._internal__items.length === 0) {\n      return;\n    }\n    let topCoordinate;\n    if (options.relativeGradient) {\n      topCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n      for (let i = this._internal__itemsVisibleRange.from; i < this._internal__itemsVisibleRange.to; i++) {\n        const item = this._internal__items[i];\n        if (item._internal_y < topCoordinate) {\n          topCoordinate = item._internal_y;\n        }\n      }\n    }\n    this._private__areaRenderer._internal_setData({\n      _internal_lineType: options.lineType,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineWidth: options.lineWidth,\n      _internal_baseLevelCoordinate: null,\n      _internal_topCoordinate: topCoordinate,\n      _internal_invertFilledArea: options.invertFilledArea,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    });\n    this._private__lineRenderer._internal_setData({\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineWidth: options.lineWidth,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined\n    });\n  }\n}\nconst areaStyleDefaults = {\n  topColor: 'rgba( 46, 220, 135, 0.4)',\n  bottomColor: 'rgba( 40, 221, 100, 0)',\n  invertFilledArea: false,\n  relativeGradient: false,\n  lineColor: '#33D778',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst createPaneView$3 = (series, model) => new SeriesAreaPaneView(series, model);\nconst createSeries$3 = () => {\n  const definition = {\n    type: 'Area',\n    isBuiltIn: true,\n    defaultOptions: areaStyleDefaults,\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView$3\n  };\n  return definition;\n};\nconst areaSeries = createSeries$3();\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n  return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n  const barSpacingSpecialCaseFrom = 2.5;\n  const barSpacingSpecialCaseTo = 4;\n  const barSpacingSpecialCaseCoeff = 3;\n  if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n    return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n  }\n  // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n  const barSpacingReducingCoeff = 0.2;\n  const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n  const res = Math.floor(barSpacing * coeff * pixelRatio);\n  const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n  const optimal = Math.min(res, scaledBarSpacing);\n  return Math.max(Math.floor(pixelRatio), optimal);\n}\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__barWidth = 0;\n    this._private__barLineWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  // eslint-disable-next-line complexity\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make bars' width odd\n    // if this value is even, we have to make bars' width even\n    // in order of keeping crosshair-over-bar drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n      if (lineWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    // if scale is compressed, bar could become less than 1 CSS pixel\n    this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n    let prevColor = null;\n    const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n      const bar = this._private__data._internal_bars[i];\n      if (prevColor !== bar._internal_barColor) {\n        ctx.fillStyle = bar._internal_barColor;\n        prevColor = bar._internal_barColor;\n      }\n      const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n      const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n      const bodyLeft = bodyCenter - bodyWidthHalf;\n      const bodyWidth = this._private__barLineWidth;\n      const bodyRight = bodyLeft + bodyWidth - 1;\n      const high = Math.min(bar._internal_highY, bar._internal_lowY);\n      const low = Math.max(bar._internal_highY, bar._internal_lowY);\n      const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n      const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n      const bodyHeight = Math.max(bodyBottom - bodyTop, this._private__barLineWidth);\n      ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n      const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n      if (drawOpenClose) {\n        if (this._private__data._internal_openVisible) {\n          const openLeft = bodyCenter - sideWidth;\n          let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n          let openBottom = openTop + bodyWidth - 1;\n          if (openBottom > bodyTop + bodyHeight - 1) {\n            openBottom = bodyTop + bodyHeight - 1;\n            openTop = openBottom - bodyWidth + 1;\n          }\n          ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n        }\n        const closeRight = bodyCenter + sideWidth;\n        let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n        let closeBottom = closeTop + bodyWidth - 1;\n        if (closeBottom > bodyTop + bodyHeight - 1) {\n          closeBottom = bodyTop + bodyHeight - 1;\n          closeTop = closeBottom - bodyWidth + 1;\n        }\n        ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n      }\n    }\n  }\n  _private__calcBarWidth(pixelRatio) {\n    const limit = Math.floor(pixelRatio);\n    return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n  }\n}\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, false);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createDefaultItem(time, bar, colorer) {\n    return {\n      _internal_time: time,\n      _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n      _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n      _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n      _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_x: NaN,\n      _internal_openY: NaN,\n      _internal_highY: NaN,\n      _internal_lowY: NaN,\n      _internal_closeY: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => this._internal__createRawItem(row._internal_index, row, colorer));\n  }\n}\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererBars();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return {\n      ...this._internal__createDefaultItem(time, bar, colorer),\n      ...colorer._internal_barStyle(time)\n    };\n  }\n  _internal__prepareRendererData() {\n    const barStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_openVisible: barStyleProps.openVisible,\n      _internal_thinBars: barStyleProps.thinBars,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nconst barStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  openVisible: true,\n  thinBars: true\n};\nconst createPaneView$2 = (series, model) => new SeriesBarsPaneView(series, model);\nconst createSeries$2 = () => {\n  const definition = {\n    type: 'Bar',\n    isBuiltIn: true,\n    defaultOptions: barStyleDefaults,\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView$2\n  };\n  return definition;\n};\nconst barSeries = createSeries$2();\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    // scaled with pixelRatio\n    this._private__barWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    const {\n      horizontalPixelRatio\n    } = renderingScope;\n    // now we know pixelRatio and we could calculate barWidth effectively\n    this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make candlesticks' width odd\n    // if this value is even, we have to make candlesticks' width even\n    // in order of keeping crosshair-over-candlesticks drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const wickWidth = Math.floor(horizontalPixelRatio);\n      if (wickWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    const bars = this._private__data._internal_bars;\n    if (this._private__data._internal_wickVisible) {\n      this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    if (this._private__data._internal_borderVisible) {\n      this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n      this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n  }\n  _private__drawWicks(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevWickColor = '';\n    let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n    wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n    const wickOffset = Math.floor(wickWidth * 0.5);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barWickColor !== prevWickColor) {\n        ctx.fillStyle = bar._internal_barWickColor;\n        prevWickColor = bar._internal_barWickColor;\n      }\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const high = Math.round(bar._internal_highY * verticalPixelRatio);\n      const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n      const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n      let left = scaledX - wickOffset;\n      const right = left + wickWidth - 1;\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      const width = right - left + 1;\n      ctx.fillRect(left, high, width, top - high);\n      ctx.fillRect(left, bottom + 1, width, low - bottom);\n      prevEdge = right;\n    }\n  }\n  _private__calculateBorderWidth(pixelRatio) {\n    let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n    if (this._private__barWidth <= 2 * borderWidth) {\n      borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n    }\n    const res = Math.max(Math.floor(pixelRatio), borderWidth);\n    if (this._private__barWidth <= res * 2) {\n      // do not draw bodies, restore original value\n      return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n    }\n    return res;\n  }\n  _private__drawBorder(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBorderColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barBorderColor !== prevBorderColor) {\n        ctx.fillStyle = bar._internal_barBorderColor;\n        prevBorderColor = bar._internal_barBorderColor;\n      }\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      // this is important to calculate right before patching left\n      const right = left + this._private__barWidth - 1;\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n        fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n      } else {\n        const width = right - left + 1;\n        ctx.fillRect(left, top, width, bottom - top + 1);\n      }\n      prevEdge = right;\n    }\n  }\n  _private__drawCandles(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBarColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      let right = left + this._private__barWidth - 1;\n      if (bar._internal_barColor !== prevBarColor) {\n        const barColor = bar._internal_barColor;\n        ctx.fillStyle = barColor;\n        prevBarColor = barColor;\n      }\n      if (this._private__data._internal_borderVisible) {\n        left += borderWidth;\n        top += borderWidth;\n        right -= borderWidth;\n        bottom -= borderWidth;\n      }\n      if (top > bottom) {\n        continue;\n      }\n      ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n    }\n  }\n}\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererCandlesticks();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return {\n      ...this._internal__createDefaultItem(time, bar, colorer),\n      ...colorer._internal_barStyle(time)\n    };\n  }\n  _internal__prepareRendererData() {\n    const candlestickStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_wickVisible: candlestickStyleProps.wickVisible,\n      _internal_borderVisible: candlestickStyleProps.borderVisible,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nconst candlestickStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  wickVisible: true,\n  borderVisible: true,\n  borderColor: '#378658',\n  borderUpColor: '#26a69a',\n  borderDownColor: '#ef5350',\n  wickColor: '#737375',\n  wickUpColor: '#26a69a',\n  wickDownColor: '#ef5350'\n};\nconst createPaneView$1 = (series, model) => new SeriesCandlesticksPaneView(series, model);\nconst createSeries$1 = () => {\n  const definition = {\n    type: 'Candlestick',\n    isBuiltIn: true,\n    defaultOptions: candlestickStyleDefaults,\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView$1\n  };\n  return definition;\n};\nconst candlestickSeries = createSeries$1();\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__precalculatedCache = [];\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n    this._private__precalculatedCache = [];\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    if (!this._private__precalculatedCache.length) {\n      this._private__fillPrecalculatedCache(horizontalPixelRatio);\n    }\n    const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n    const histogramBase = Math.round(this._private__data._internal_histogramBase * verticalPixelRatio);\n    const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n    const bottomHistogramBase = topHistogramBase + tickWidth;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const y = Math.round(item._internal_y * verticalPixelRatio);\n      ctx.fillStyle = item._internal_barColor;\n      let top;\n      let bottom;\n      if (y <= topHistogramBase) {\n        top = y;\n        bottom = bottomHistogramBase;\n      } else {\n        top = topHistogramBase;\n        bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n      }\n      ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__fillPrecalculatedCache(pixelRatio) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      this._private__precalculatedCache = [];\n      return;\n    }\n    const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n    const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n    this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      // force cast to avoid ensureDefined call\n      const x = Math.round(item._internal_x * pixelRatio);\n      let left;\n      let right;\n      if (columnWidth % 2) {\n        const halfWidth = (columnWidth - 1) / 2;\n        left = x - halfWidth;\n        right = x + halfWidth;\n      } else {\n        // shift pixel to left\n        const halfWidth = columnWidth / 2;\n        left = x - halfWidth;\n        right = x + halfWidth - 1;\n      }\n      this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n        _internal_left: left,\n        _internal_right: right,\n        _internal_roundedCenter: x,\n        _internal_center: item._internal_x * pixelRatio,\n        _internal_time: item._internal_time\n      };\n    }\n    // correct positions\n    for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n      if (current._internal_time !== prev._internal_time + 1) {\n        continue;\n      }\n      if (current._internal_left - prev._internal_right !== spacing + 1) {\n        // have to align\n        if (prev._internal_roundedCenter > prev._internal_center) {\n          // prev wasshifted to left, so add pixel to right\n          prev._internal_right = current._internal_left - spacing - 1;\n        } else {\n          // extend current to left\n          current._internal_left = prev._internal_right + spacing + 1;\n        }\n      }\n    }\n    let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      // this could happen if barspacing < 1\n      if (current._internal_right < current._internal_left) {\n        current._internal_right = current._internal_left;\n      }\n      const width = current._internal_right - current._internal_left + 1;\n      minWidth = Math.min(width, minWidth);\n    }\n    if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n      for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n        const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n        const width = current._internal_right - current._internal_left + 1;\n        if (width > minWidth) {\n          if (current._internal_roundedCenter > current._internal_center) {\n            current._internal_right -= 1;\n          } else {\n            current._internal_left += 1;\n          }\n        }\n      }\n    }\n  }\n}\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererHistogram();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return {\n      ...this._internal__createRawItemBase(time, price),\n      ...colorer._internal_barStyle(time)\n    };\n  }\n  _internal__prepareRendererData() {\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value)\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nconst histogramStyleDefaults = {\n  color: '#26a69a',\n  base: 0\n};\nconst createPaneView = (series, model) => new SeriesHistogramPaneView(series, model);\nconst createSeries = () => {\n  const definition = {\n    type: 'Histogram',\n    isBuiltIn: true,\n    defaultOptions: histogramStyleDefaults,\n    /**\n     * @internal\n     */\n    _internal_createPaneView: createPaneView\n  };\n  return definition;\n};\nconst histogramSeries = createSeries();\nclass PanePrimitiveWrapper {\n  constructor(pane, primitive) {\n    this._private__pane = pane;\n    this._private__primitive = primitive;\n    this._private__attach();\n  }\n  detach() {\n    this._private__pane.detachPrimitive(this._private__primitive);\n  }\n  getPane() {\n    return this._private__pane;\n  }\n  applyOptions(options) {\n    this._private__primitive._internal_applyOptions?.(options);\n  }\n  _private__attach() {\n    this._private__pane.attachPrimitive(this._private__primitive);\n  }\n}\nconst textWatermarkOptionsDefaults = {\n  visible: true,\n  horzAlign: 'center',\n  vertAlign: 'center',\n  lines: []\n};\nconst textWatermarkLineOptionsDefaults = {\n  color: 'rgba(0, 0, 0, 0.5)',\n  fontSize: 48,\n  fontFamily: defaultFontFamily,\n  fontStyle: '',\n  text: ''\n};\nclass TextWatermarkRenderer {\n  constructor(options) {\n    this._private__metricsCache = new Map();\n    this._private__data = options;\n  }\n  draw(target) {\n    target.useMediaCoordinateSpace(scope => {\n      if (!this._private__data.visible) {\n        return;\n      }\n      const {\n        context: ctx,\n        mediaSize\n      } = scope;\n      let textHeight = 0;\n      for (const line of this._private__data.lines) {\n        if (line.text.length === 0) {\n          continue;\n        }\n        ctx.font = line._internal_font;\n        const textWidth = this._private__metrics(ctx, line.text);\n        if (textWidth > mediaSize.width) {\n          line._internal_zoom = mediaSize.width / textWidth;\n        } else {\n          line._internal_zoom = 1;\n        }\n        textHeight += line.lineHeight * line._internal_zoom;\n      }\n      let vertOffset = 0;\n      switch (this._private__data.vertAlign) {\n        case 'top':\n          vertOffset = 0;\n          break;\n        case 'center':\n          vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n          break;\n        case 'bottom':\n          vertOffset = Math.max(mediaSize.height - textHeight, 0);\n          break;\n      }\n      for (const line of this._private__data.lines) {\n        ctx.save();\n        ctx.fillStyle = line.color;\n        let horzOffset = 0;\n        switch (this._private__data.horzAlign) {\n          case 'left':\n            ctx.textAlign = 'left';\n            horzOffset = line.lineHeight / 2;\n            break;\n          case 'center':\n            ctx.textAlign = 'center';\n            horzOffset = mediaSize.width / 2;\n            break;\n          case 'right':\n            ctx.textAlign = 'right';\n            horzOffset = mediaSize.width - 1 - line.lineHeight / 2;\n            break;\n        }\n        ctx.translate(horzOffset, vertOffset);\n        ctx.textBaseline = 'top';\n        ctx.font = line._internal_font;\n        ctx.scale(line._internal_zoom, line._internal_zoom);\n        ctx.fillText(line.text, 0, line._internal_vertOffset);\n        ctx.restore();\n        vertOffset += line.lineHeight * line._internal_zoom;\n      }\n    });\n  }\n  _private__metrics(ctx, text) {\n    const fontCache = this._private__fontCache(ctx.font);\n    let result = fontCache.get(text);\n    if (result === undefined) {\n      result = ctx.measureText(text).width;\n      fontCache.set(text, result);\n    }\n    return result;\n  }\n  _private__fontCache(font) {\n    let fontCache = this._private__metricsCache.get(font);\n    if (fontCache === undefined) {\n      fontCache = new Map();\n      this._private__metricsCache.set(font, fontCache);\n    }\n    return fontCache;\n  }\n}\nclass TextWatermarkPaneView {\n  constructor(options) {\n    this._private__options = buildRendererOptions$1(options);\n  }\n  _internal_update(options) {\n    this._private__options = buildRendererOptions$1(options);\n  }\n  renderer() {\n    return new TextWatermarkRenderer(this._private__options);\n  }\n}\nfunction buildRendererLineOptions(lineOption) {\n  return {\n    ...lineOption,\n    _internal_font: makeFont(lineOption.fontSize, lineOption.fontFamily, lineOption.fontStyle),\n    lineHeight: lineOption.lineHeight || lineOption.fontSize * 1.2,\n    _internal_vertOffset: 0,\n    _internal_zoom: 0\n  };\n}\nfunction buildRendererOptions$1(options) {\n  return {\n    ...options,\n    lines: options.lines.map(buildRendererLineOptions)\n  };\n}\nfunction mergeLineOptionsWithDefaults(options) {\n  return {\n    ...textWatermarkLineOptionsDefaults,\n    ...options\n  };\n}\nfunction mergeOptionsWithDefaults$1(options) {\n  return {\n    ...textWatermarkOptionsDefaults,\n    ...options,\n    lines: options.lines?.map(mergeLineOptionsWithDefaults) ?? []\n  };\n}\nclass TextWatermark {\n  constructor(options) {\n    this._private__options = mergeOptionsWithDefaults$1(options);\n    this._private__paneViews = [new TextWatermarkPaneView(this._private__options)];\n  }\n  updateAllViews() {\n    this._private__paneViews.forEach(pw => pw._internal_update(this._private__options));\n  }\n  paneViews() {\n    return this._private__paneViews;\n  }\n  attached({\n    requestUpdate\n  }) {\n    this._internal_requestUpdate = requestUpdate;\n  }\n  detached() {\n    this._internal_requestUpdate = undefined;\n  }\n  _internal_applyOptions(options) {\n    this._private__options = mergeOptionsWithDefaults$1({\n      ...this._private__options,\n      ...options\n    });\n    if (this._internal_requestUpdate) {\n      this._internal_requestUpdate();\n    }\n  }\n}\n/**\n * Creates an image watermark.\n *\n * @param pane - Target pane.\n * @param options - Watermark options.\n *\n * @returns Image watermark wrapper.\n *\n * @example\n * ```js\n * import { createTextWatermark } from 'lightweight-charts';\n *\n * const firstPane = chart.panes()[0];\n * const textWatermark = createTextWatermark(firstPane, {\n * \t  horzAlign: 'center',\n * \t  vertAlign: 'center',\n * \t  lines: [\n * \t    {\n * \t      text: 'Hello',\n * \t      color: 'rgba(255,0,0,0.5)',\n * \t      fontSize: 100,\n * \t      fontStyle: 'bold',\n * \t    },\n * \t    {\n * \t      text: 'This is a text watermark',\n * \t      color: 'rgba(0,0,255,0.5)',\n * \t      fontSize: 50,\n * \t      fontStyle: 'italic',\n * \t      fontFamily: 'monospace',\n * \t    },\n * \t  ],\n * });\n * // to change options\n * textWatermark.applyOptions({ horzAlign: 'left' });\n * // to remove watermark from the pane\n * textWatermark.detach();\n * ```\n */\nfunction createTextWatermark(pane, options) {\n  return new PanePrimitiveWrapper(pane, new TextWatermark(options));\n}\nconst imageWatermarkOptionsDefaults = {\n  alpha: 1,\n  padding: 0\n};\nclass ImageWatermarkRenderer {\n  constructor(data) {\n    this._private__data = data;\n  }\n  draw(target) {\n    target.useMediaCoordinateSpace(scope => {\n      const ctx = scope.context;\n      const pos = this._private__determinePlacement(this._private__data, scope.mediaSize);\n      if (!pos || !this._private__data._internal_imgElement) {\n        return;\n      }\n      ctx.globalAlpha = this._private__data.alpha ?? 1;\n      ctx.drawImage(this._private__data._internal_imgElement, pos._internal_x, pos._internal_y, pos._internal_width, pos._internal_height);\n    });\n  }\n  _private__determinePlacement(data, paneSize) {\n    const {\n      maxHeight,\n      maxWidth,\n      _internal_imgHeight: imgHeight,\n      _internal_imgWidth: imgWidth,\n      padding\n    } = data;\n    const plotCentreX = Math.round(paneSize.width / 2);\n    const plotCentreY = Math.round(paneSize.height / 2);\n    const paddingSize = padding ?? 0;\n    let availableWidth = paneSize.width - 2 * paddingSize;\n    let availableHeight = paneSize.height - 2 * paddingSize;\n    if (maxHeight) {\n      availableHeight = Math.min(availableHeight, maxHeight);\n    }\n    if (maxWidth) {\n      availableWidth = Math.min(availableWidth, maxWidth);\n    }\n    const scaleX = availableWidth / imgWidth;\n    const scaleY = availableHeight / imgHeight;\n    const scaleToUse = Math.min(scaleX, scaleY);\n    const drawWidth = imgWidth * scaleToUse;\n    const drawHeight = imgHeight * scaleToUse;\n    const x = plotCentreX - 0.5 * drawWidth;\n    const y = plotCentreY - 0.5 * drawHeight;\n    return {\n      _internal_x: x,\n      _internal_y: y,\n      _internal_height: drawHeight,\n      _internal_width: drawWidth\n    };\n  }\n}\nclass ImageWatermarkPaneView {\n  constructor(options) {\n    this._private__image = null;\n    this._private__imageWidth = 0; // don't draw until loaded\n    this._private__imageHeight = 0;\n    this._private__options = options;\n    this._private__rendererOptions = buildRendererOptions(this._private__options, this._private__image, this._private__imageWidth, this._private__imageHeight);\n  }\n  _internal_stateUpdate(state) {\n    if (state._internal_imageWidth !== undefined) {\n      this._private__imageWidth = state._internal_imageWidth;\n    }\n    if (state._internal_imageHeight !== undefined) {\n      this._private__imageHeight = state._internal_imageHeight;\n    }\n    if (state._internal_image !== undefined) {\n      this._private__image = state._internal_image;\n    }\n    this._internal_update();\n  }\n  _internal_optionsUpdate(options) {\n    this._private__options = options;\n    this._internal_update();\n  }\n  zOrder() {\n    return 'bottom';\n  }\n  _internal_update() {\n    this._private__rendererOptions = buildRendererOptions(this._private__options, this._private__image, this._private__imageWidth, this._private__imageHeight);\n  }\n  renderer() {\n    return new ImageWatermarkRenderer(this._private__rendererOptions);\n  }\n}\nfunction buildRendererOptions(options, imgElement, imgWidth, imgHeight) {\n  return {\n    ...options,\n    _internal_imgElement: imgElement,\n    _internal_imgWidth: imgWidth,\n    _internal_imgHeight: imgHeight\n  };\n}\nfunction mergeOptionsWithDefaults(options) {\n  return {\n    ...imageWatermarkOptionsDefaults,\n    ...options\n  };\n}\nclass ImageWatermark {\n  constructor(imageUrl, options) {\n    this._private__imgElement = null;\n    this._private__imageUrl = imageUrl;\n    this._private__options = mergeOptionsWithDefaults(options);\n    this._private__paneViews = [new ImageWatermarkPaneView(this._private__options)];\n  }\n  updateAllViews() {\n    this._private__paneViews.forEach(pw => pw._internal_update());\n  }\n  paneViews() {\n    return this._private__paneViews;\n  }\n  attached(attachedParams) {\n    const {\n      requestUpdate\n    } = attachedParams;\n    this._private__requestUpdate = requestUpdate;\n    this._private__imgElement = new Image();\n    this._private__imgElement.onload = () => {\n      const imageHeight = this._private__imgElement?.naturalHeight ?? 1;\n      const imageWidth = this._private__imgElement?.naturalWidth ?? 1;\n      this._private__paneViews.forEach(pv => pv._internal_stateUpdate({\n        _internal_imageHeight: imageHeight,\n        _internal_imageWidth: imageWidth,\n        _internal_image: this._private__imgElement\n      }));\n      if (this._private__requestUpdate) {\n        this._private__requestUpdate();\n      }\n    };\n    this._private__imgElement.src = this._private__imageUrl;\n  }\n  detached() {\n    this._private__requestUpdate = undefined;\n    this._private__imgElement = null;\n  }\n  _internal_applyOptions(options) {\n    this._private__options = mergeOptionsWithDefaults({\n      ...this._private__options,\n      ...options\n    });\n    this._private__updateOptions();\n    if (this._internal_requestUpdate) {\n      this._internal_requestUpdate();\n    }\n  }\n  _internal_requestUpdate() {\n    if (this._private__requestUpdate) {\n      this._private__requestUpdate();\n    }\n  }\n  _private__updateOptions() {\n    this._private__paneViews.forEach(pw => pw._internal_optionsUpdate(this._private__options));\n  }\n}\n/**\n * Creates an image watermark.\n *\n * @param pane - Target pane.\n * @param imageUrl - Image URL.\n * @param options - Watermark options.\n *\n * @returns Image watermark wrapper.\n *\n * @example\n * ```js\n * import { createImageWatermark } from 'lightweight-charts';\n *\n * const firstPane = chart.panes()[0];\n * const imageWatermark = createImageWatermark(firstPane, '/images/my-image.png', {\n *   alpha: 0.5,\n *   padding: 20,\n * });\n * // to change options\n * imageWatermark.applyOptions({ padding: 10 });\n * // to remove watermark from the pane\n * imageWatermark.detach();\n * ```\n */\nfunction createImageWatermark(pane, imageUrl, options) {\n  return new PanePrimitiveWrapper(pane, new ImageWatermark(imageUrl, options));\n}\nclass SeriesPrimitiveAdapter {\n  constructor(series, primitive) {\n    this._internal__series = series;\n    this._internal__primitive = primitive;\n    this._private__attach();\n  }\n  detach() {\n    this._internal__series.detachPrimitive(this._internal__primitive);\n  }\n  getSeries() {\n    return this._internal__series;\n  }\n  applyOptions(options) {\n    if (this._internal__primitive && this._internal__primitive._internal_applyOptions) {\n      this._internal__primitive._internal_applyOptions(options);\n    }\n  }\n  _private__attach() {\n    this._internal__series.attachPrimitive(this._internal__primitive);\n  }\n}\nfunction size(barSpacing, coeff) {\n  const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n  return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n  switch (shape) {\n    case 'arrowDown':\n    case 'arrowUp':\n      return size(originalSize, 1);\n    case 'circle':\n      return size(originalSize, 0.8);\n    case 'square':\n      return size(originalSize, 0.7);\n  }\n}\nfunction calculateShapeHeight(barSpacing) {\n  return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n  return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction calculateAdjustedMargin(margin, hasSide, hasInBar) {\n  if (hasSide) {\n    return margin;\n  } else if (hasInBar) {\n    return Math.ceil(margin / 2);\n  }\n  return 0;\n}\nfunction drawArrow(up, ctx, coords, size) {\n  const arrowSize = shapeSize('arrowUp', size);\n  const halfArrowSize = (arrowSize - 1) / 2 * coords._internal_pixelRatio;\n  const baseSize = ceiledOdd(size / 2);\n  const halfBaseSize = (baseSize - 1) / 2 * coords._internal_pixelRatio;\n  ctx.beginPath();\n  if (up) {\n    ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x, coords._internal_y - halfArrowSize);\n    ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y + halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y + halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n  } else {\n    ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x, coords._internal_y + halfArrowSize);\n    ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y - halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y - halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n  }\n  ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n  const arrowSize = shapeSize('arrowUp', size);\n  const halfArrowSize = (arrowSize - 1) / 2;\n  const baseSize = ceiledOdd(size / 2);\n  const halfBaseSize = (baseSize - 1) / 2;\n  const triangleTolerance = 3;\n  const rectTolerance = 2;\n  const baseLeft = centerX - halfBaseSize - rectTolerance;\n  const baseRight = centerX + halfBaseSize + rectTolerance;\n  const baseTop = up ? centerY : centerY - halfArrowSize;\n  const baseBottom = up ? centerY + halfArrowSize : centerY;\n  if (x >= baseLeft && x <= baseRight && y >= baseTop - rectTolerance && y <= baseBottom + rectTolerance) {\n    return true;\n  }\n  const isInTriangleBounds = () => {\n    const headLeft = centerX - halfArrowSize - triangleTolerance;\n    const headRight = centerX + halfArrowSize + triangleTolerance;\n    const headTop = up ? centerY - halfArrowSize - triangleTolerance : centerY;\n    const headBottom = up ? centerY : centerY + halfArrowSize + triangleTolerance;\n    if (x < headLeft || x > headRight || y < headTop || y > headBottom) {\n      return false;\n    }\n    const dx = Math.abs(x - centerX);\n    const dy = up ? Math.abs(y - centerY) // up arrow\n    : Math.abs(y - centerY); // down arrow\n    return dy + triangleTolerance >= dx / 2;\n  };\n  return isInTriangleBounds();\n}\nfunction drawCircle(ctx, coords, size) {\n  const circleSize = shapeSize('circle', size);\n  const halfSize = (circleSize - 1) / 2;\n  ctx.beginPath();\n  ctx.arc(coords._internal_x, coords._internal_y, halfSize * coords._internal_pixelRatio, 0, 2 * Math.PI, false);\n  ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n  const circleSize = shapeSize('circle', size);\n  const tolerance = 2 + circleSize / 2;\n  const xOffset = centerX - x;\n  const yOffset = centerY - y;\n  const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n  return dist <= tolerance;\n}\nfunction drawSquare(ctx, coords, size) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) * coords._internal_pixelRatio / 2;\n  const left = coords._internal_x - halfSize;\n  const top = coords._internal_y - halfSize;\n  ctx.fillRect(left, top, squareSize * coords._internal_pixelRatio, squareSize * coords._internal_pixelRatio);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) / 2;\n  const left = centerX - halfSize;\n  const top = centerY - halfSize;\n  return x >= left && x <= left + squareSize && y >= top && y <= top + squareSize;\n}\nfunction drawText(ctx, text, x, y, horizontalPixelRatio, verticalPixelRatio) {\n  ctx.save();\n  ctx.scale(horizontalPixelRatio, verticalPixelRatio);\n  ctx.fillText(text, x, y);\n  ctx.restore();\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n  const halfHeight = textHeight / 2;\n  return x >= textX && x <= textX + textWidth && y >= textY - halfHeight && y <= textY + halfHeight;\n}\nclass SeriesMarkersRenderer {\n  constructor() {\n    this._private__data = null;\n    this._private__textWidthCache = new TextWidthCache();\n    this._private__fontSize = -1;\n    this._private__fontFamily = '';\n    this._private__font = '';\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_setParams(fontSize, fontFamily) {\n    if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n      this._private__fontSize = fontSize;\n      this._private__fontFamily = fontFamily;\n      this._private__font = makeFont(fontSize, fontFamily);\n      this._private__textWidthCache._internal_reset();\n    }\n  }\n  _internal_hitTest(x, y) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return null;\n    }\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (item && hitTestItem(item, x, y)) {\n        return {\n          zOrder: 'normal',\n          externalId: item._internal_externalId ?? ''\n        };\n      }\n    }\n    return null;\n  }\n  draw(target) {\n    target.useBitmapCoordinateSpace(scope => {\n      this._internal__drawImpl(scope);\n    });\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    ctx.textBaseline = 'middle';\n    ctx.font = this._private__font;\n    for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n      const item = this._private__data._internal_items[index];\n      if (item._internal_text !== undefined) {\n        item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n        item._internal_text._internal_height = this._private__fontSize;\n        item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n      }\n      drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio);\n    }\n  }\n}\nfunction bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio) {\n  const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n  const correction = tickWidth % 2 / 2;\n  return {\n    _internal_x: Math.round(item._internal_x * horizontalPixelRatio) + correction,\n    _internal_y: item._internal_y * verticalPixelRatio,\n    _internal_pixelRatio: horizontalPixelRatio\n  };\n}\nfunction drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio) {\n  ctx.fillStyle = item._internal_color;\n  if (item._internal_text !== undefined) {\n    drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y, horizontalPixelRatio, verticalPixelRatio);\n  }\n  drawShape(item, ctx, bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio));\n}\nfunction drawShape(item, ctx, coordinates) {\n  if (item._internal_size === 0) {\n    return;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      drawArrow(false, ctx, coordinates, item._internal_size);\n      return;\n    case 'arrowUp':\n      drawArrow(true, ctx, coordinates, item._internal_size);\n      return;\n    case 'circle':\n      drawCircle(ctx, coordinates, item._internal_size);\n      return;\n    case 'square':\n      drawSquare(ctx, coordinates, item._internal_size);\n      return;\n  }\n  ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n  if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n    return true;\n  }\n  return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n  if (item._internal_size === 0) {\n    return false;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'arrowUp':\n      return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'circle':\n      return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'square':\n      return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, series, chart) {\n  const timeScale = chart.timeScale();\n  let inBarPrice;\n  let highPrice;\n  let lowPrice;\n  if (isValueData(seriesData)) {\n    inBarPrice = seriesData.value;\n    highPrice = seriesData.value;\n    lowPrice = seriesData.value;\n  } else if (isOhlcData(seriesData)) {\n    inBarPrice = seriesData.close;\n    highPrice = seriesData.high;\n    lowPrice = seriesData.low;\n  } else {\n    return;\n  }\n  const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n  const shapeSize = calculateShapeHeight(timeScale.options().barSpacing) * sizeMultiplier;\n  const halfSize = shapeSize / 2;\n  rendererItem._internal_size = shapeSize;\n  switch (marker.position) {\n    case 'inBar':\n      {\n        rendererItem._internal_y = ensureNotNull(series.priceToCoordinate(inBarPrice));\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n        }\n        return;\n      }\n    case 'aboveBar':\n      {\n        rendererItem._internal_y = ensureNotNull(series.priceToCoordinate(highPrice)) - halfSize - offsets._internal_aboveBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n        offsets._internal_aboveBar += shapeSize + shapeMargin;\n        return;\n      }\n    case 'belowBar':\n      {\n        rendererItem._internal_y = ensureNotNull(series.priceToCoordinate(lowPrice)) + halfSize + offsets._internal_belowBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n        offsets._internal_belowBar += shapeSize + shapeMargin;\n        return;\n      }\n  }\n  ensureNever(marker.position);\n}\nfunction isValueData(data) {\n  // eslint-disable-next-line no-restricted-syntax\n  return 'value' in data && typeof data.value === 'number';\n}\nfunction isOhlcData(data) {\n  // eslint-disable-next-line no-restricted-syntax\n  return 'open' in data && 'high' in data && 'low' in data && 'close' in data;\n}\nclass SeriesMarkersPaneView {\n  constructor(series, chart) {\n    this._private__markers = [];\n    this._private__invalidated = true;\n    this._private__dataInvalidated = true;\n    this._private__renderer = new SeriesMarkersRenderer();\n    this._private__series = series;\n    this._private__chart = chart;\n    this._private__data = {\n      _internal_items: [],\n      _internal_visibleRange: null\n    };\n  }\n  renderer() {\n    if (!this._private__series.options().visible) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__makeValid();\n    }\n    const layout = this._private__chart.options()['layout'];\n    this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n    this._private__renderer._internal_setData(this._private__data);\n    return this._private__renderer;\n  }\n  _internal_setMarkers(markers) {\n    this._private__markers = markers;\n    this._internal_update('data');\n  }\n  _internal_update(updateType) {\n    this._private__invalidated = true;\n    if (updateType === 'data') {\n      this._private__dataInvalidated = true;\n    }\n  }\n  _internal__makeValid() {\n    const timeScale = this._private__chart.timeScale();\n    const seriesMarkers = this._private__markers;\n    if (this._private__dataInvalidated) {\n      this._private__data._internal_items = seriesMarkers.map(marker => ({\n        _internal_time: marker.time,\n        _internal_x: 0,\n        _internal_y: 0,\n        _internal_size: 0,\n        _internal_shape: marker.shape,\n        _internal_color: marker.color,\n        _internal_externalId: marker.id,\n        _internal_internalId: marker._internal_internalId,\n        _internal_text: undefined\n      }));\n      this._private__dataInvalidated = false;\n    }\n    const layoutOptions = this._private__chart.options()['layout'];\n    this._private__data._internal_visibleRange = null;\n    const visibleBars = timeScale.getVisibleLogicalRange();\n    if (visibleBars === null) {\n      return;\n    }\n    const visibleBarsRange = new RangeImpl(Math.floor(visibleBars.from), Math.ceil(visibleBars.to));\n    const firstValue = this._private__series.data()[0];\n    if (firstValue === null) {\n      return;\n    }\n    if (this._private__data._internal_items.length === 0) {\n      return;\n    }\n    let prevTimeIndex = NaN;\n    const shapeMargin$1 = shapeMargin(timeScale.options().barSpacing);\n    const offsets = {\n      _internal_aboveBar: shapeMargin$1,\n      _internal_belowBar: shapeMargin$1\n    };\n    this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBarsRange, true);\n    for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n      const marker = seriesMarkers[index];\n      if (marker.time !== prevTimeIndex) {\n        // new bar, reset stack counter\n        offsets._internal_aboveBar = shapeMargin$1;\n        offsets._internal_belowBar = shapeMargin$1;\n        prevTimeIndex = marker.time;\n      }\n      const rendererItem = this._private__data._internal_items[index];\n      rendererItem._internal_x = ensureNotNull(timeScale.logicalToCoordinate(marker.time));\n      if (marker.text !== undefined && marker.text.length > 0) {\n        rendererItem._internal_text = {\n          _internal_content: marker.text,\n          _internal_x: 0,\n          _internal_y: 0,\n          _internal_width: 0,\n          _internal_height: 0\n        };\n      }\n      const dataAt = ensureNotNull(this._private__series.dataByIndex(marker.time, -1));\n      if (dataAt === null) {\n        continue;\n      }\n      fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, this._private__series, this._private__chart);\n    }\n    this._private__invalidated = false;\n  }\n}\nclass SeriesMarkersPrimitive {\n  constructor() {\n    this._private__paneView = null;\n    this._private__markers = [];\n    this._private__indexedMarkers = [];\n    this._private__dataChangedHandler = null;\n    this._private__series = null;\n    this._private__chart = null;\n    this._private__autoScaleMarginsInvalidated = true;\n    this._private__autoScaleMargins = null;\n    this._private__markersPositions = null;\n    this._private__cachedBarSpacing = null;\n  }\n  attached(param) {\n    this._private__recalculateMarkers();\n    this._private__chart = param.chart;\n    this._private__series = param.series;\n    this._private__paneView = new SeriesMarkersPaneView(this._private__series, ensureNotNull(this._private__chart));\n    this._private__requestUpdate = param.requestUpdate;\n    this._private__series.subscribeDataChanged(scope => this._private__onDataChanged(scope));\n    this._internal_requestUpdate();\n  }\n  _internal_requestUpdate() {\n    if (this._private__requestUpdate) {\n      this._private__requestUpdate();\n    }\n  }\n  detached() {\n    if (this._private__series && this._private__dataChangedHandler) {\n      this._private__series.unsubscribeDataChanged(this._private__dataChangedHandler);\n    }\n    this._private__chart = null;\n    this._private__series = null;\n    this._private__paneView = null;\n    this._private__dataChangedHandler = null;\n  }\n  _internal_setMarkers(markers) {\n    this._private__markers = markers;\n    this._private__recalculateMarkers();\n    this._private__autoScaleMarginsInvalidated = true;\n    this._private__markersPositions = null;\n    this._internal_requestUpdate();\n  }\n  _internal_markers() {\n    return this._private__markers;\n  }\n  paneViews() {\n    return this._private__paneView ? [this._private__paneView] : [];\n  }\n  updateAllViews() {\n    this._private__updateAllViews();\n  }\n  hitTest(x, y) {\n    if (this._private__paneView) {\n      return this._private__paneView.renderer()?._internal_hitTest(x, y) ?? null;\n    }\n    return null;\n  }\n  autoscaleInfo(startTimePoint, endTimePoint) {\n    if (this._private__paneView) {\n      const margins = this._private__getAutoScaleMargins();\n      if (margins) {\n        return {\n          priceRange: null,\n          margins: margins\n        };\n      }\n    }\n    return null;\n  }\n  _private__getAutoScaleMargins() {\n    const chart = ensureNotNull(this._private__chart);\n    const barSpacing = chart.timeScale().options().barSpacing;\n    if (this._private__autoScaleMarginsInvalidated || barSpacing !== this._private__cachedBarSpacing) {\n      this._private__cachedBarSpacing = barSpacing;\n      if (this._private__markers.length > 0) {\n        const shapeMargin$1 = shapeMargin(barSpacing);\n        const marginValue = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n        const positions = this._private__getMarkerPositions();\n        this._private__autoScaleMargins = {\n          above: calculateAdjustedMargin(marginValue, positions.aboveBar, positions.inBar),\n          below: calculateAdjustedMargin(marginValue, positions.belowBar, positions.inBar)\n        };\n      } else {\n        this._private__autoScaleMargins = null;\n      }\n      this._private__autoScaleMarginsInvalidated = false;\n    }\n    return this._private__autoScaleMargins;\n  }\n  _private__getMarkerPositions() {\n    if (this._private__markersPositions === null) {\n      this._private__markersPositions = this._private__markers.reduce((acc, marker) => {\n        if (!acc[marker.position]) {\n          acc[marker.position] = true;\n        }\n        return acc;\n      }, {\n        inBar: false,\n        aboveBar: false,\n        belowBar: false\n      });\n    }\n    return this._private__markersPositions;\n  }\n  _private__recalculateMarkers() {\n    if (!this._private__chart || !this._private__series) {\n      return;\n    }\n    const timeScale = this._private__chart.timeScale();\n    if (timeScale.getVisibleLogicalRange() == null || !this._private__series || this._private__series?.data().length === 0) {\n      this._private__indexedMarkers = [];\n      return;\n    }\n    const seriesData = this._private__series?.data();\n    const firstDataIndex = timeScale.timeToIndex(ensureNotNull(seriesData[0].time), true);\n    this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n      const timePointIndex = timeScale.timeToIndex(marker.time, true);\n      const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n      const seriesDataByIndex = ensureNotNull(this._private__series).dataByIndex(timePointIndex, searchMode);\n      // @TODO think about should we expose the series' `.search()` method\n      const finalIndex = timeScale.timeToIndex(ensureNotNull(seriesDataByIndex).time, false);\n      return {\n        time: finalIndex,\n        position: marker.position,\n        shape: marker.shape,\n        color: marker.color,\n        id: marker.id,\n        _internal_internalId: index,\n        text: marker.text,\n        size: marker.size,\n        _internal_originalTime: marker.time\n      };\n    });\n  }\n  _private__updateAllViews(updateType) {\n    if (this._private__paneView) {\n      this._private__recalculateMarkers();\n      this._private__paneView._internal_setMarkers(this._private__indexedMarkers);\n      this._private__paneView._internal_update(updateType);\n    }\n  }\n  _private__onDataChanged(scope) {\n    this._internal_requestUpdate();\n  }\n}\nclass SeriesMarkersPrimitiveWrapper extends SeriesPrimitiveAdapter {\n  constructor(series, primitive, markers) {\n    super(series, primitive);\n    if (markers) {\n      this.setMarkers(markers);\n    }\n  }\n  setMarkers(markers) {\n    this._internal__primitive._internal_setMarkers(markers);\n  }\n  markers() {\n    return this._internal__primitive._internal_markers();\n  }\n}\n/**\n * A function to create a series markers primitive.\n *\n * @param series - The series to which the primitive will be attached.\n *\n * @param markers - An array of markers to be displayed on the series.\n *\n * @example\n * ```js\n * import { createSeriesMarkers } from 'lightweight-charts';\n *\n *\tconst seriesMarkers = createSeriesMarkers(\n *\t\tseries,\n *\t\t[\n *\t\t\t{\n *\t\t\t\tcolor: 'green',\n *\t\t\t\tposition: 'inBar',\n * \t\t\t\tshape: 'arrowDown',\n *\t\t\t\ttime: 1556880900,\n *\t\t\t},\n *\t\t]\n *\t);\n *  // and then you can modify the markers\n *  // set it to empty array to remove all markers\n *  seriesMarkers.setMarkers([]);\n *\n *  // `seriesMarkers.markers()` returns current markers\n * ```\n */\nfunction createSeriesMarkers(series, markers) {\n  const wrapper = new SeriesMarkersPrimitiveWrapper(series, new SeriesMarkersPrimitive());\n  if (markers) {\n    wrapper.setMarkers(markers);\n  }\n  return wrapper;\n}\nclass ExpiringMarkerManager {\n  constructor(updateCallback) {\n    this._private__markers = new Map();\n    this._private__updateCallback = updateCallback;\n  }\n  _internal_setMarker(marker, key, timeout) {\n    this._internal_clearMarker(key);\n    if (timeout !== undefined) {\n      const timeoutId = window.setTimeout(() => {\n        this._private__markers.delete(key);\n        this._private__triggerUpdate();\n      }, timeout);\n      const markerWithTimeout = {\n        ...marker,\n        _internal_timeoutId: timeoutId,\n        _internal_expiresAt: Date.now() + timeout\n      };\n      this._private__markers.set(key, markerWithTimeout);\n    } else {\n      // For markers without timeout, we set timeoutId and expiresAt to undefined\n      this._private__markers.set(key, {\n        ...marker,\n        _internal_timeoutId: undefined,\n        _internal_expiresAt: undefined\n      });\n    }\n    this._private__triggerUpdate();\n  }\n  _internal_clearMarker(key) {\n    const marker = this._private__markers.get(key);\n    if (marker && marker._internal_timeoutId !== undefined) {\n      window.clearTimeout(marker._internal_timeoutId);\n    }\n    this._private__markers.delete(key);\n    this._private__triggerUpdate();\n  }\n  _internal_clearAllMarkers() {\n    for (const [point] of this._private__markers) {\n      this._internal_clearMarker(point);\n    }\n  }\n  _internal_getMarkers() {\n    const now = Date.now();\n    const activeMarkers = [];\n    for (const [time, marker] of this._private__markers) {\n      if (!marker._internal_expiresAt || marker._internal_expiresAt > now) {\n        activeMarkers.push({\n          time: marker.time,\n          sign: marker.sign,\n          value: marker.value\n        });\n      } else {\n        this._internal_clearMarker(time);\n      }\n    }\n    return activeMarkers;\n  }\n  _internal_setUpdateCallback(callback) {\n    this._private__updateCallback = callback;\n  }\n  _private__triggerUpdate() {\n    if (this._private__updateCallback) {\n      this._private__updateCallback();\n    }\n  }\n}\nconst upDownMarkersPluginOptionDefaults = {\n  positiveColor: '#22AB94',\n  negativeColor: '#F7525F',\n  updateVisibilityDuration: 5000\n};\nclass MarkersPrimitiveRenderer {\n  constructor(data, neutralColor, negativeColor, positiveColor) {\n    this._private__data = data;\n    this._private__neutralColor = neutralColor;\n    this._private__negativeColor = negativeColor;\n    this._private__positiveColor = positiveColor;\n  }\n  draw(target) {\n    target.useBitmapCoordinateSpace(scope => {\n      const ctx = scope.context;\n      const tickWidth = Math.max(1, Math.floor(scope.horizontalPixelRatio));\n      const correction = tickWidth % 2 / 2;\n      const rad = 4 /* Constants.Radius */ * scope.verticalPixelRatio + correction;\n      this._private__data.forEach(item => {\n        const centreX = Math.round(item._internal_x * scope.horizontalPixelRatio) + correction;\n        ctx.beginPath();\n        const color = this._private__getColor(item._internal_sign);\n        ctx.fillStyle = color;\n        ctx.arc(centreX, item._internal_y * scope.verticalPixelRatio, rad, 0, 2 * Math.PI, false);\n        ctx.fill();\n        if (item._internal_sign) {\n          ctx.strokeStyle = color;\n          ctx.lineWidth = Math.floor(2 /* Constants.ArrowLineWidth */ * scope.horizontalPixelRatio);\n          ctx.beginPath();\n          ctx.moveTo((item._internal_x - 4.7 /* Constants.ArrowSize */) * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign) * scope.verticalPixelRatio);\n          ctx.lineTo(item._internal_x * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign - 7 /* Constants.ArrowOffset */ * item._internal_sign * 0.5 /* Constants.VerticalScale */) * scope.verticalPixelRatio);\n          ctx.lineTo((item._internal_x + 4.7 /* Constants.ArrowSize */) * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign) * scope.verticalPixelRatio);\n          ctx.stroke();\n        }\n      });\n    });\n  }\n  _private__getColor(sign) {\n    if (sign === 0) {\n      return this._private__neutralColor;\n    }\n    return sign > 0 ? this._private__positiveColor : this._private__negativeColor;\n  }\n}\nfunction isAreaStyleOptions(opts, seriesType) {\n  return seriesType === 'Area';\n}\nfunction getNeutralColor(opts, seriesType) {\n  if (isAreaStyleOptions(opts, seriesType)) {\n    return opts.lineColor;\n  }\n  return opts.color;\n}\nclass MarkersPrimitivePaneView {\n  constructor(series, timeScale, options) {\n    this._private__data = [];\n    this._private__series = series;\n    this._private__timeScale = timeScale;\n    this._private__options = options;\n  }\n  _internal_update(markers) {\n    this._private__data = markers.map(marker => {\n      const y = this._private__series.priceToCoordinate(marker.value);\n      if (y === null) {\n        return null;\n      }\n      const x = ensureNotNull(this._private__timeScale.timeToCoordinate(marker.time));\n      return {\n        _internal_x: x,\n        _internal_y: y,\n        _internal_sign: marker.sign\n      };\n    }).filter(notNull);\n  }\n  renderer() {\n    const options = this._private__series.options();\n    const seriesType = this._private__series.seriesType();\n    const neutralColor = getNeutralColor(options, seriesType);\n    return new MarkersPrimitiveRenderer(this._private__data, neutralColor, this._private__options.negativeColor, this._private__options.positiveColor);\n  }\n}\nfunction isLineData(item, type) {\n  return type === 'Line' || type === 'Area';\n}\nclass UpDownMarkersPrimitive {\n  constructor(options) {\n    this._private__chart = undefined;\n    this._private__series = undefined;\n    this._private__paneViews = [];\n    this._private__horzScaleBehavior = null;\n    this._private__managedDataPoints = new Map();\n    this._private__markersManager = new ExpiringMarkerManager(() => this._internal_requestUpdate());\n    this._private__options = {\n      ...upDownMarkersPluginOptionDefaults,\n      ...options\n    };\n  }\n  _internal_applyOptions(options) {\n    this._private__options = {\n      ...this._private__options,\n      ...options\n    };\n    this._internal_requestUpdate();\n  }\n  _internal_setMarkers(markers) {\n    this._private__markersManager._internal_clearAllMarkers();\n    const horzBehaviour = this._private__horzScaleBehavior;\n    if (!horzBehaviour) {\n      return;\n    }\n    markers.forEach(marker => {\n      this._private__markersManager._internal_setMarker(marker, horzBehaviour.key(marker.time));\n    });\n  }\n  _internal_markers() {\n    return this._private__markersManager._internal_getMarkers();\n  }\n  _internal_requestUpdate() {\n    this._private__requestUpdate?.();\n  }\n  attached(params) {\n    const {\n      chart,\n      series,\n      requestUpdate,\n      horzScaleBehavior\n    } = params;\n    this._private__chart = chart;\n    this._private__series = series;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    const seriesType = this._private__series.seriesType();\n    if (seriesType !== 'Area' && seriesType !== 'Line') {\n      throw new Error('UpDownMarkersPrimitive is only supported for Area and Line series types');\n    }\n    this._private__paneViews = [new MarkersPrimitivePaneView(this._private__series, this._private__chart.timeScale(), this._private__options)];\n    this._private__requestUpdate = requestUpdate;\n    this._internal_requestUpdate();\n  }\n  detached() {\n    this._private__chart = undefined;\n    this._private__series = undefined;\n    this._private__requestUpdate = undefined;\n  }\n  _internal_chart() {\n    return ensureDefined(this._private__chart);\n  }\n  _internal_series() {\n    return ensureDefined(this._private__series);\n  }\n  updateAllViews() {\n    this._private__paneViews.forEach(pw => pw._internal_update(this._internal_markers()));\n  }\n  paneViews() {\n    return this._private__paneViews;\n  }\n  _internal_setData(data) {\n    if (!this._private__series) {\n      throw new Error('Primitive not attached to series');\n    }\n    const seriesType = this._private__series.seriesType();\n    this._private__managedDataPoints.clear();\n    const horzBehaviour = this._private__horzScaleBehavior;\n    if (horzBehaviour) {\n      data.forEach(d => {\n        if (isFulfilledData(d) && isLineData(d, seriesType)) {\n          this._private__managedDataPoints.set(horzBehaviour.key(d.time), d.value);\n        }\n      });\n    }\n    ensureDefined(this._private__series).setData(data);\n  }\n  _internal_update(data, historicalUpdate) {\n    if (!this._private__series || !this._private__horzScaleBehavior) {\n      throw new Error('Primitive not attached to series');\n    }\n    const seriesType = this._private__series.seriesType();\n    const horzKey = this._private__horzScaleBehavior.key(data.time);\n    if (isWhitespaceData(data)) {\n      this._private__managedDataPoints.delete(horzKey);\n    }\n    if (isFulfilledData(data) && isLineData(data, seriesType)) {\n      const existingPrice = this._private__managedDataPoints.get(horzKey);\n      if (existingPrice) {\n        this._private__markersManager._internal_setMarker({\n          time: data.time,\n          value: data.value,\n          sign: getSign(data.value, existingPrice)\n        }, horzKey, this._private__options.updateVisibilityDuration);\n      }\n    }\n    ensureDefined(this._private__series).update(data, historicalUpdate);\n  }\n  _internal_clearMarkers() {\n    this._private__markersManager._internal_clearAllMarkers();\n  }\n}\nfunction getSign(newValue, oldValue) {\n  if (newValue === oldValue) {\n    return 0;\n  }\n  return newValue - oldValue > 0 ? 1 : -1;\n}\nclass SeriesUpDownMarkerPrimitiveWrapper extends SeriesPrimitiveAdapter {\n  setData(data) {\n    return this._internal__primitive._internal_setData(data);\n  }\n  update(data, historicalUpdate) {\n    return this._internal__primitive._internal_update(data, historicalUpdate);\n  }\n  markers() {\n    return this._internal__primitive._internal_markers();\n  }\n  setMarkers(markers) {\n    return this._internal__primitive._internal_setMarkers(markers);\n  }\n  clearMarkers() {\n    return this._internal__primitive._internal_clearMarkers();\n  }\n}\n/**\n * Creates and attaches the Series Up Down Markers Plugin.\n *\n * @param series - Series to which attach the Up Down Markers Plugin\n * @param options - options for the Up Down Markers Plugin\n *\n * @returns Api for Series Up Down Marker Plugin. {@link ISeriesUpDownMarkerPluginApi}\n *\n * @example\n * ```js\n * import { createUpDownMarkers, createChart, LineSeries } from 'lightweight-charts';\n *\n * const chart = createChart('container');\n * const lineSeries = chart.addSeries(LineSeries);\n * const upDownMarkers = createUpDownMarkers(lineSeries, {\n *     positiveColor: '#22AB94',\n *     negativeColor: '#F7525F',\n *     updateVisibilityDuration: 5000,\n * });\n * // to add some data\n * upDownMarkers.setData(\n *     [\n *         { time: '2020-02-02', value: 12.34 },\n *         //... more line series data\n *     ]\n * );\n * // ... Update some values\n * upDownMarkers.update({ time: '2020-02-02', value: 13.54 }, true);\n * // to remove plugin from the series\n * upDownMarkers.detach();\n * ```\n */\nfunction createUpDownMarkers(series, options = {}) {\n  const wrapper = new SeriesUpDownMarkerPrimitiveWrapper(series, new UpDownMarkersPrimitive(options));\n  return wrapper;\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = {\n  ...seriesOptionsDefaults,\n  ...customStyleDefaults$1\n};\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n  return \"5.0.2\";\n}\nexport { areaSeries as AreaSeries, barSeries as BarSeries, baselineSeries as BaselineSeries, candlestickSeries as CandlestickSeries, ColorType, CrosshairMode, histogramSeries as HistogramSeries, LastPriceAnimationMode, lineSeries as LineSeries, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, createImageWatermark, createOptionsChart, createSeriesMarkers, createTextWatermark, createUpDownMarkers, createYieldCurveChart, customSeriesDefaultOptions, defaultHorzScaleBehavior, isBusinessDay, isUTCTimestamp, version };","map":{"version":3,"names":["size","size$1","bindCanvasElementBitmapSizeTo","equalSizes","tryCreateCanvasRenderingTarget2D","customStyleDefaults$1","color","seriesOptionsDefaults","title","visible","lastValueVisible","priceLineVisible","priceLineSource","priceLineWidth","priceLineColor","priceLineStyle","baseLineVisible","baseLineWidth","baseLineColor","baseLineStyle","priceFormat","type","precision","minMove","LineType","LineStyle","setLineStyle","ctx","style","dashPatterns","lineWidth","dashPattern","setLineDash","drawHorizontalLine","y","left","right","beginPath","correction","moveTo","lineTo","stroke","drawVerticalLine","x","top","bottom","strokeInPixel","drawFunction","save","translate","restore","assert","condition","message","Error","ensureDefined","value","undefined","ensureNotNull","ensure","ensureNever","Delegate","constructor","_private__listeners","_internal_subscribe","callback","linkedObject","singleshot","listener","_internal_callback","_internal_linkedObject","_internal_singleshot","push","_internal_unsubscribe","index","findIndex","splice","_internal_unsubscribeAll","filter","_internal_fire","param1","param2","param3","listenersSnapshot","forEach","_internal_hasListeners","length","_internal_destroy","merge","dst","sources","src","i","Object","prototype","hasOwnProperty","call","includes","Array","isArray","isNumber","isFinite","isInteger","isString","isBoolean","clone","object","o","c","p","v","notNull","t","undefinedIfNull","defaultFontFamily","makeFont","family","PriceAxisRendererOptionsProvider","chartModel","_private__rendererOptions","_internal_borderSize","_internal_tickLength","_internal_fontSize","NaN","_internal_font","_internal_fontFamily","_internal_color","_internal_paneBackgroundColor","_internal_paddingBottom","_internal_paddingInner","_internal_paddingOuter","_internal_paddingTop","_internal_baselineOffset","_private__chartModel","_internal_options","rendererOptions","currentFontSize","_private__fontSize","currentFontFamily","_private__fontFamily","_private__textColor","_private__paneBackgroundColor","textColor","_internal_backgroundTopColor","fontSize","fontFamily","normalizeRgbComponent","component","Math","round","normalizeAlphaComponent","min","max","rgbaToGrayscale","rgbValue","redComponentGrayscaleWeight","greenComponentGrayscaleWeight","blueComponentGrayscaleWeight","getRgbStringViaBrowser","element","document","createElement","display","body","appendChild","computed","window","getComputedStyle","removeChild","ColorParser","customParsers","initialCache","_private__rgbaCache","Map","_private__customParsers","_internal_applyAlpha","alpha","originRgba","_private__parseColor","originAlpha","_internal_generateContrastColors","background","rgba","_internal_background","_internal_foreground","_internal_colorStringToGrayscale","_internal_gradientColorAtPercent","topColor","bottomColor","percent","topR","topG","topB","topA","bottomR","bottomG","bottomB","bottomA","resultRgba","cached","get","match","parser","result","set","parseInt","parseFloat","CompositeRenderer","_private__renderers","_internal_setRenderers","renderers","_internal_draw","target","isHovered","hitTestData","r","BitmapCoordinatesPaneRenderer","useBitmapCoordinateSpace","scope","_internal__drawImpl","PaneRendererMarks","arguments","_internal__data","_internal_setData","data","context","horizontalPixelRatio","verticalPixelRatio","_internal_visibleRange","visibleRange","tickWidth","floor","draw","radiusMedia","to","from","point","_internal_items","centerX","_internal_x","centerY","_internal_y","radius","arc","PI","fill","_internal_lineWidth","fillStyle","_internal_backColor","_internal_radius","_internal_lineColor","createEmptyMarkerData","_internal_time","_internal_price","rangeForSinglePoint","CrosshairMarksPaneView","crosshair","pane","_private__compositeRenderer","_private__markersRenderers","_private__markersData","_private__invalidated","_private__crosshair","_private__pane","_internal_update","updateType","_private__createMarkerRenderersIfNeeded","_internal_renderer","_private__updateImpl","serieses","_internal_orderedSources","map","res","forceHidden","mode","_internal_visible","_internal_orderedSeries","timePointIndex","_internal_appliedIndex","timeScale","_internal_timeScale","s","seriesData","_internal_markerDataAtIndex","firstValue","_internal_firstValue","_internal_backgroundColor","_internal_borderWidth","_internal_priceScale","_internal_priceToCoordinate","_internal_value","_internal_borderColor","_internal_backgroundColorAtYPercentFromTop","_internal_height","_internal_indexToCoordinate","CrosshairRenderer","_private__data","bitmapSize","vertLinesVisible","_internal_vertLine","horzLinesVisible","_internal_horzLine","lineCap","strokeStyle","_internal_lineStyle","height","width","CrosshairPaneView","source","_private__rendererData","_private__renderer","_private__source","crosshairOptions","_internal_model","_internal_horzLineVisible","_internal_vertLineVisible","horzLine","vertLine","_internal_appliedX","_internal_appliedY","fillRectInnerBorder","borderWidth","fillRect","clearRect","w","h","clearColor","globalCompositeOperation","changeBorderRadius","borderRadius","offset","drawRoundRect","radii","roundRect","arcTo","drawRoundRectWithBorder","backgroundColor","outerBorderRadius","borderColor","halfBorderWidth","closePath","clearRectWithGradient","gradient","createLinearGradient","addColorStop","PriceAxisViewRenderer","commonData","_private__commonData","useSecondLine","textWidthCache","align","_internal_text","geometry","font","geom","_private__calculateGeometry","gb","_internal_bitmap","_internal_alignRight","_internal_xOutside","_internal_yTop","_internal_totalWidth","_internal_totalHeight","_internal_horzBorder","_internal_xInside","_internal_tickVisible","_internal_yMid","_internal_xTick","_internal_tickHeight","_internal_borderVisible","_internal_right","_internal_yBottom","useMediaCoordinateSpace","gm","_internal_media","textAlign","textBaseline","fillText","_internal_xText","_internal_textMidCorrection","mediaSize","tickSize","_internal_moveTextToInvisibleTick","horzBorder","_internal_separatorVisible","paddingTop","_internal_additionalPaddingTop","paddingBottom","_internal_additionalPaddingBottom","paddingInner","paddingOuter","text","actualTextHeight","textMidCorrection","_internal_yMidCorrection","textWidth","ceil","_internal_measureText","totalHeight","totalWidth","tickHeightBitmap","totalHeightBitmap","horzBorderBitmap","totalWidthBitmap","tickSizeBitmap","yMid","_internal_fixedCoordinate","_internal_coordinate","yMidBitmap","yTopBitmap","yBottomBitmap","alignRight","xInside","xInsideBitmap","xOutsideBitmap","xTickBitmap","xText","PriceAxisView","ctor","_private__commonRendererData","_private__axisRendererData","_private__paneRendererData","_private__axisRenderer","_private__paneRenderer","_private__updateRendererDataIfNeeded","_internal_getFixedCoordinate","_internal_setFixedCoordinate","_internal_isVisible","_internal_isAxisLabelVisible","priceScale","ticksVisible","_internal_paneRenderer","_internal__updateRendererData","CrosshairPriceAxisView","valueProvider","_private__priceScale","_private__valueProvider","axisRendererData","paneRendererData","commonRendererData","options","labelVisible","_internal_isEmpty","colors","_internal_colorParser","labelBackgroundColor","additionalPadding","_internal_formatPrice","optimizationReplacementRe","radius$1","TimeAxisViewRenderer","_internal_widthCache","horzMargin","_internal_paddingHorizontal","labelWidth","labelWidthHalf","timeScaleWidth","_internal_width","coordinate","x1","abs","x2","y1","y2","x1scaled","y1scaled","x2scaled","y2scaled","radiusScaled","tickX","tickTop","tickBottom","tickOffset","yText","textYCorrection","CrosshairTimeAxisView","model","_private__model","currentTime","_internal_indexToTimeScalePoint","_internal_formatDateTime","DataSource","_internal__priceScale","_private__zorder","_internal_zorder","_internal_setZorder","zorder","_internal_setPriceScale","_internal_labelPaneViews","_internal_timeAxisViews","CrosshairMode","Crosshair","_private__price","_private__index","_private__visible","_private__priceAxisViews","_private__subscribed","_private__crosshairPaneViewCache","WeakMap","_private__markersPaneViewCache","_private__x","_private__y","_private__originX","_private__originY","_private__options","valuePriceProvider","rawPriceProvider","rawCoordinateProvider","rawPrice","_internal_defaultPriceScale","price","_internal_coordinateToPrice","valueTimeProvider","rawIndexProvider","time","_internal_indexToTime","Number","_private__currentPosPriceProvider","currentPosTimeProvider","_private__timeAxisView","_internal_saveOriginCoord","_internal_clearOriginCoord","_internal_originCoordX","_internal_originCoordY","_internal_setPosition","_private__tryToUpdateViews","_internal_clearPosition","_private__setIndexToLastSeriesBarIndex","_internal_updateAllViews","_internal_paneViews","crosshairPaneView","markersPaneView","_internal_priceAxisViews","clear","views","_private__createPriceAxisViewOnDemand","_internal_pane","_internal_panes","_private__priceScaleByPane","_private__tryToUpdateData","newIndex","newPrice","newPane","oldX","oldY","oldPrice","oldIndex","oldPane","isNaN","lastIndexes","_internal_serieses","_internal_bars","_internal_lastIndex","lastBarIndex","view","isDefaultPriceScale","priceScaleId","mergePaneInvalidation","beforeValue","newValue","level","_internal_level","autoScale","_internal_autoScale","InvalidateMask","globalLevel","_private__invalidatedPanes","_private__timeScaleInvalidations","_private__globalLevel","_internal_invalidatePane","paneIndex","invalidation","prevValue","_internal_fullInvalidation","_internal_invalidateForPane","paneInvalidation","_internal_setFitContent","_internal_stopTimeScaleAnimation","_internal_type","_internal_applyRange","range","_internal_setTimeScaleAnimation","animation","_private__removeTimeScaleAnimation","_internal_resetTimeScale","_internal_setBarSpacing","barSpacing","_internal_setRightOffset","_internal_timeScaleInvalidations","_internal_merge","other","tsInvalidation","_private__applyTimeScaleInvalidation","_internal_light","_internal_full","inv","formatterOptions","_internal_decimalSign","_internal_decimalSignFractional","numberToStringWithLeadingZero","TypeError","toString","dummyString","slice","PriceFormatter","_private__minMove","_private__calculateDecimal","format","sign","_private__formatAsDecimal","_internal__fractionalLength","base","intPart","fracString","fracLength","fracPart","toFixed","PercentageFormatter","VolumeFormatter","_private__precision","vol","_private__formatNumber","pow","replace","String","e","p1","defaultReplacementRe","TextWidthCache","_private__actualSize","_private__usageTick","_private__oldestTick","_private__tick2Labels","_private__cache","_private__maxSize","_internal_reset","_private__getMetrics","metrics","actualBoundingBoxAscent","actualBoundingBoxDescent","re","cacheString","has","_internal_metrics","oldestValue","delete","measureText","_internal_tick","PanePriceAxisViewRenderer","_private__priceAxisViewRenderer","_private__align","_private__textWidthCache","_internal_setParams","priceAxisViewRenderer","PanePriceAxisView","priceAxisView","dataSource","_private__priceAxisView","_private__dataSource","_internal_paneForSource","_internal_isOverlay","_internal_defaultVisiblePriceScale","position","_internal_priceScalePosition","_internal_priceAxisRendererOptions","HorizontalLineRenderer","_internal_hitTest","itemY","_internal_externalId","externalId","_internal_hitTestData","SeriesHorizontalLinePaneView","series","_internal__lineRendererData","_internal__lineRenderer","_internal__series","_internal__model","_internal__updateImpl","SeriesHorizontalBaseLinePaneView","_internal_mode","seriesOptions","SeriesLastPriceAnimationRenderer","_internal_data","_internal_center","_internal_seriesLineColor","centerPointRadius","_internal_seriesLineWidth","_internal_fillColor","_internal_strokeColor","animationStagesData","_internal_start","_internal_end","_internal_startRadius","_internal_endRadius","_internal_startFillAlpha","_internal_endFillAlpha","_internal_startStrokeAlpha","_internal_endStrokeAlpha","stage","startRadius","endRadius","SeriesLastPriceAnimationPaneView","_private__stageInvalidated","_private__startTime","performance","now","_private__endTime","_private__series","_internal_onDataCleared","_internal_onNewRealtimeDataReceived","lastPriceAnimation","timeToAnimationEnd","_internal_invalidateStage","_internal_animationActive","_private__updateRendererDataStage","_internal_visibleStrictRange","lastValue","_internal_lastValueData","_internal_noData","_internal_contains","_internal_index","lastValuePoint","seriesLineColor","seriesLineWidth","_private__animationData","_private__duration","rendererData","_private__color","startAlpha","endAlpha","durationSinceStart","lineColor","globalStage","currentStageData","stageData","subStage","SeriesPriceLinePaneView","lastValueData","_internal_priceLineColor","SeriesPriceAxisView","showSeriesLastValue","showSymbolLabel","_internal_title","showPriceAndPercentage","seriesLastValueMode","_internal__axisText","_internal__paneText","lastValueColor","_internal_isPercentage","_internal_formattedPriceAbsolute","_internal_formattedPricePercentage","trim","computeFiniteResult","method","valueOne","valueTwo","fallback","firstFinite","secondFinite","PriceRangeImpl","minValue","maxValue","_private__minValue","_private__maxValue","_internal_equals","pr","_internal_clone","_internal_minValue","_internal_maxValue","_internal_length","anotherRange","Infinity","_internal_scaleAroundCenter","coeff","delta","center","maxDelta","minDelta","_internal_shift","_internal_toRaw","_internal_fromRaw","raw","AutoscaleInfoImpl","priceRange","margins","_private__priceRange","_private__margins","_internal_priceRange","_internal_margins","CustomPriceLinePaneView","priceLine","_private__priceLine","lineOptions","lineVisible","_internal_yCoord","lineStyle","id","CustomPriceLinePriceAxisView","axisLabelVisible","showPaneLabel","_private__formatPrice","axisLabelColor","axisLabelTextColor","CustomPriceLine","_private__priceLineView","_private__panePriceAxisView","_internal_applyOptions","_internal_lightUpdate","_internal_paneView","_internal_labelPaneView","_internal_priceAxisView","PriceDataSource","barStyleFnMap","Bar","findBar","barStyle","barIndex","precomputedBars","upColor","downColor","currentBar","isUp","_internal_barColor","Candlestick","candlestickStyle","borderUpColor","borderDownColor","wickUpColor","wickDownColor","_internal_barBorderColor","_internal_barWickColor","_internal_wickColor","Custom","customStyle","Area","areaStyle","_internal_topColor","_internal_bottomColor","Baseline","baselineStyle","isAboveBaseline","baseValue","topLineColor","bottomLineColor","_internal_topLineColor","_internal_bottomLineColor","_internal_topFillColor1","topFillColor1","_internal_topFillColor2","topFillColor2","_internal_bottomFillColor1","bottomFillColor1","_internal_bottomFillColor2","bottomFillColor2","Line","Histogram","histogramStyle","SeriesBarColorer","_private__findBar","_internal_valueAt","_private__styleGetter","_internal_seriesType","_internal_barStyle","boundCompare","lower","arr","compare","start","count","count2","mid","lowerBound","bind","upperBound","MismatchDirection","CHUNK_SIZE","PlotList","_private__items","_private__minMaxCache","_private__rowSearchCache","_private__indices","_internal_last","_internal_size","_internal_firstIndex","_private__indexAt","_private__search","_internal_search","searchMode","pos","_private__valueAt","_internal_rows","_internal_minMaxOnRangeCached","end","plots","plot","plotMinMax","_private__minMaxOnRangeCachedImpl","mergeMinMax","plotRows","plotRow","_internal_indices","exactPos","_private__bsearch","_private__searchNearestLeft","_private__searchNearestRight","nearestLeftPos","_private__lowerbound","nearestRightPos","_private__upperbound","a","b","_private__plotMinMax","startIndex","endIndexExclusive","plotIndex","values","_internal_min","_internal_max","firstIndex","lastIndex","cachedLow","cachedHigh","endIndex","minMaxCache","chunkIndex","chunkMinMax","chunkStart","chunkEnd","first","second","createSeriesPlotList","PrimitiveRendererWrapper","baseRenderer","_private__baseRenderer","_internal_drawBackground","drawBackground","PrimitivePaneViewWrapper","paneView","_private__paneView","renderer","_internal_base","_internal_wrapper","wrapper","_internal_zOrder","zOrder","PrimitiveWrapper","primitive","_private__paneViewsCache","_internal__primitive","_internal_primitive","updateAllViews","paneViews","pw","hitTest","PanePrimitiveWrapper$1","PanePrimitiveWrapper","SeriesPrimitiveRendererWrapper","SeriesPrimitivePaneViewWrapper","getAxisViewData","baseView","fixedCoordinate","backColor","tickVisible","SeriesPrimitiveTimeAxisViewWrapper","_private__baseView","_private__timeScale","SeriesPrimitivePriceAxisViewWrapper","SeriesPrimitiveWrapper","_private__timeAxisViewsCache","_private__priceAxisViewsCache","_private__priceAxisPaneViewsCache","_private__timeAxisPaneViewsCache","timeAxisViews","aw","priceAxisViews","_internal_priceAxisPaneViews","priceAxisPaneViews","_internal_timeAxisPaneViews","timeAxisPaneViews","_internal_autoscaleInfo","startTimePoint","endTimePoint","autoscaleInfo","extractPrimitivePaneViews","primitives","extractor","destination","primitivePaneViewsExtractor","primitivePricePaneViewsExtractor","primitiveTimePaneViewsExtractor","lineBasedSeries","Series","seriesType","createPaneView","customPaneView","_private__customPriceLines","_private__baseHorizontalLineView","_private__lastPriceAnimationPaneView","_private__barColorerCache","_private__animationTimeoutId","_private__primitives","_private__seriesType","_private__recreateFormatter","clearTimeout","lastBarColor","globalLast","noDataRes","visibleBars","bar","lastBar","endBar","barColorer","_internal_barColorer","_internal_formatPriceAbsolute","_internal_formatPricePercentage","targetPriceScaleId","_internal_moveSeriesToScale","_internal_fullUpdate","_internal_updateSource","_internal_updateCrosshair","updateInfo","_internal_lastBarUpdatedOrNewBarsAddedToTheRight","sourcePane","_internal_recalculatePane","_internal_createPriceLine","_internal_removePriceLine","line","indexOf","_internal_priceLines","_internal_firstBar","_internal_timePoint","_internal_left","_internal_dataAt","prices","_internal_open","_internal_high","_internal_low","_internal_close","_internal_topPaneViews","animationPaneView","setTimeout","_internal_cursorUpdate","unshift","_private__isOverlay","priceLineViews","_internal_bottomPaneViews","_private__extractPaneViews","_internal_pricePaneViews","_internal_timePaneViews","_internal_primitiveHitTest","customPriceLine","autoscaleInfoProvider","_private__autoscaleInfoImpl","_internal_minMove","_internal_formatter","_private__formatter","getValue","crosshairMarkerVisible","_private__markerRadius","_private__markerBorderColor","_private__markerBorderWidth","_private__markerBackgroundColor","_internal_attachPrimitive","_internal_detachPrimitive","_internal_customSeriesPlotValuesBuilder","_internal_priceValueBuilder","_internal_customSeriesWhitespaceCheck","_internal_isWhitespace","_internal_fulfilledIndices","_internal_id","barsMinMax","rangeWithBase","primitiveAutoscale","primitiveRange","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBorderWidth","crosshairMarkerBackgroundColor","formatter","_internal_updateFormatter","Magnet","_internal_align","defaultPriceScale","_internal_dataSources","ds","candidates","reduce","acc","ps","bars","firstPrice","concat","sort","nearest","GridRenderer","_internal_vertLinesVisible","_internal_vertLinesColor","_internal_vertLineStyle","timeMark","_internal_timeMarks","_internal_coord","_internal_horzLinesVisible","_internal_horzLinesColor","_internal_horzLineStyle","priceMark","_internal_priceMarks","GridPaneView","gridOptions","grid","horzLines","vertLines","_internal_marks","tm","coord","Grid","defLogFormula","_internal_logicalOffset","_internal_coordOffset","fromPercent","toPercent","toPercentRange","minPercent","maxPercent","fromIndexedTo100","toIndexedTo100","toIndexedTo100Range","toLog","logFormula","m","log10","fromLog","logical","convertPriceRangeToLog","canConvertPriceRangeFromLog","convertPriceRangeFromLog","logFormulaForPriceRange","diff","digits","logicalOffset","coordOffset","logFormulasAreSame","f1","f2","clamp","minVal","maxVal","isBaseDecimal","current","greaterOrEqual","epsilon","equal","ceiledEven","ceiled","ceiledOdd","PriceTickSpanCalculator","integralDividers","_private__base","_private__integralDividers","_private__fractionalDividers","baseRest","_internal_tickSpan","high","low","maxTickSpan","minMovement","resultTickSpan","resultTickSpanLargerMinMovement","resultTickSpanLargerMaxTickSpan","resultTickSpanLarger1","haveToContinue","TICK_DENSITY","PriceTickMarkBuilder","coordinateToLogicalFunc","logicalToCoordinateFunc","_private__marks","_private__coordinateToLogicalFunc","_private__logicalToCoordinateFunc","scaleHeight","markHeight","_private__tickMarkHeight","spanCalculator1","spanCalculator2","spanCalculator3","spans","_internal_rebuildTickMarks","extraTopBottomMargin","entireTextOnly","_private__fontHeight","minCoord","maxCoord","span","mod","prevCoord","targetIndex","_internal_label","_internal_formatLogical","_internal_isLog","sortSources","s1","s2","PriceScaleMode","percentageFormatter","defaultPriceFormatter","PriceScale","layoutOptions","localizationOptions","colorParser","_private__height","_private__internalHeightCache","_private__priceRangeSnapshot","_private__invalidatedForRange","_internal_isValid","_internal_visibleBars","_private__marginAbove","_private__marginBelow","_private__onMarksChanged","_private__modeChanged","_private__dataSources","_private__cachedOrderedSources","_private__marksCache","_private__scaleStartPoint","_private__scrollStartPoint","_private__logFormula","_private__id","_private__layoutOptions","_private__localizationOptions","_private__colorParser","_private__markBuilder","_private__coordinateToLogical","_private__logicalToCoordinate","_internal_setMode","scaleMargins","_private__invalidateInternalHeightCache","_internal_isAutoScale","_internal_isIndexedTo100","_internal_isInverted","invertScale","newMode","oldMode","_internal_setPriceRange","modeChanged","_private__onIsInvertedChanged","_internal_modeChanged","_internal_setHeight","_internal_internalHeight","_private__topMarginPx","_private__bottomMarginPx","_private__makeSureItIsValid","newPriceRange","isForceSetValue","oldPriceRange","_internal_invertedCoordinate","_internal_pointsArrayToCoordinates","points","bh","ih","isInverted","hmm","fromIndex","toIndex","transformFn","_private__getCoordinateTransformer","invCoordinate","_internal_barPricesToCoordinates","pricesList","openLogical","highLogical","lowLogical","closeLogical","_internal_openY","_internal_highY","_internal_lowY","_internal_closeY","_internal_logicalToPrice","_internal_addDataSource","_internal_invalidateSourcesCache","_internal_removeDataSource","firstValueIsNull","_internal_firstValueIsNull","marks","_internal_onMarksChanged","_internal_startScale","_internal_scaleTo","scaleCoeff","_internal_endScale","_internal_startScroll","_internal_scrollTo","priceUnitsPerPixel","pixelDelta","priceDelta","_internal_endScroll","_private__formatPercentage","_private__formatterSource","_internal_sourcesForAutoScale","_internal_recalculatePriceRange","formatterSource","_private__recalculatePriceRangeImpl","marginAbove","marginBelow","autoScaleInfo","sourceRange","above","below","extendValue","rawRange","newLogFormula","rawSnapshot","_private__formatValue","fallbackFormatter","priceFormatter","percentage","isSeries","DEFAULT_STRETCH_FACTOR","MIN_PANE_HEIGHT","Pane","_private__overlaySourcesByScaleId","_private__width","_private__stretchFactor","_private__destroyed","_private__grid","_private__leftPriceScale","_private__createPriceScale","leftPriceScale","_private__rightPriceScale","rightPriceScale","_private__onPriceScaleModeChanged","_internal_applyScaleOptions","localization","overlayPriceScales","sourceArrays","_internal_priceScaleById","_internal_priceScalesOptionsChanged","detached","_internal_stretchFactor","_internal_setStretchFactor","factor","_internal_setWidth","_internal_updateAllSources","_internal_series","targetScaleId","targetZOrder","_private__getZOrderMinMax","_internal_maxZOrder","_private__insertDataSource","overlaySources","overlayIndex","_internal_recalculatePriceScale","_internal_leftPriceScale","_internal_rightPriceScale","_internal_startScalePrice","_internal_scalePriceTo","_internal_endScalePrice","_internal_startScrollPrice","_internal_scrollPriceTo","_internal_endScrollPrice","_private__recalculatePriceScaleImpl","_internal_resetPriceScale","_internal_momentaryAutoScale","_internal_recalculate","_internal_onDestroyed","_internal_grid","_internal_primitives","sourceForAutoScale","_internal_minZOrder","minZOrder","maxZOrder","j","actualOptions","comparePrimitiveZOrder","item","reference","findBestPrimitiveHitTest","bestPrimitiveHit","bestHitSource","primitiveHitResults","hitResult","_internal_hit","_internal_source","convertPrimitiveHitResult","primitiveHit","_internal_object","_internal_cursorStyle","cursorStyle","hitTestPaneView","_internal_view","isDataSource","hitTestPane","isBackground","sourceResult","FormattedLabelsCache","horzScaleBehavior","_private__format","_private__horzScaleBehavior","_internal_format","tickMark","cacheKey","tick","_internal_string","str","RangeImpl","_private__left","_private__right","_internal_count","areRangesEqual","TickMarks","_private__marksByWeight","_private__uniformDistribution","_internal_setUniformDistribution","val","_internal_setTimeScalePoints","newPoints","firstChangedPointIndex","_private__removeMarksSinceIndex","marksForWeight","timeWeight","weight","originalTime","_internal_build","spacing","maxWidth","checkIndicesForData","indicesWithDataMap","indicesWithDataId","maxIndexesPerMark","_internal_maxIndexesPerMark","_internal_indicesWithDataId","_internal_checkIndicesForData","_private__buildMarksImpl","sinceIndex","weightsToClear","canBeIncluded","mark","keys","prevMarks","prevMarksLength","prevMarksPointer","currentWeight","currentWeightLength","rightIndex","leftIndex","currentIndex","lastMark","TimeScaleVisibleRange","logicalRange","_private__logicalRange","_internal_strictRange","_internal_logicalRange","_internal_invalid","defaultTickMarkMaxCharacterLength","markWithGreaterWeight$2","TimeScale","_private__baseIndexOrNull","_private__points","_private__tickMarks","_private__formattedByWeight","_private__visibleRange","_private__visibleRangeInvalidated","_private__visibleBarsChanged","_private__logicalRangeChanged","_private__optionsApplied","_private__commonTransitionStartState","_private__timeMarksCache","_private__indicesWithData","_private__indicesWithDataUpdateId","_private__labels","_private__rightOffset","rightOffset","_private__barSpacing","_private__updateDateTimeFormatter","uniformDistribution","_internal_recalculateIndicesWithData","_internal_applyLocalizationOptions","_private__invalidateTickMarks","fixLeftEdge","_private__doFixLeftEdge","fixRightEdge","_private__doFixRightEdge","minBarSpacing","maxBarSpacing","ignoreWhitespaceIndices","_internal_timeToIndex","findNearest","key","_internal_hasPoints","_private__updateVisibleRange","_internal_visibleLogicalRange","_internal_visibleTimeRange","_internal_timeRangeForLogicalRange","_private__firstIndex","_private__lastIndex","_internal_logicalRangeForTimeRange","newWidth","previousVisibleRange","oldWidth","lockVisibleTimeRangeOnResize","newBarSpacing","_private__correctBarSpacing","_private__correctOffset","baseIndex","_internal_baseIndex","deltaFromRight","_internal_indexesToCoordinates","indexFrom","indexTo","_internal_coordinateToIndex","considerIgnoreWhitespace","_private__coordinateToFloatIndex","_private__shouldConsiderIndex","_private__findNearestIndexWithData","_internal_recalculateAllPanes","_internal_barSpacing","_private__setBarSpacing","_internal_rightOffset","pixelsPer8Characters","pixelsPerCharacter","maxLabelWidth","tickMarkMaxCharacterLength","indexPerLabel","firstBar","items","earliestIndexOfSecondLabel","indexOfSecondLastLabel","isAllScalingAndScrollingDisabled","_private__isAllScalingAndScrollingDisabled","isLeftEdgeFixed","isRightEdgeFixed","label","_private__formatLabel","needAlignCoordinate","_internal_restoreDefault","_internal_setBaseIndex","_internal_zoom","zoomPoint","scale","floatIndexAtZoomPoint","rightBarStaysOnScroll","_private__saveCommonTransitionsStartState","startLengthFromRight","currentLengthFromRight","_private__clearCommonTransitionsStartState","shiftInLogical","_internal_scrollToRealTime","_internal_scrollToOffsetAnimated","animationDuration","RangeError","animationStart","_internal_finished","_internal_getPosition","animationProgress","finishAnimation","_internal_visibleBarsChanged","_internal_logicalRangeChanged","_internal_optionsApplied","_internal_setVisibleRange","_internal_fitContent","last","_internal_setLogicalRange","barRange","timeScalePoint","timeFormatter","formatHorzItem","handleScroll","handleScale","horzTouchDrag","mouseWheel","pressedMouseMove","vertTouchDrag","axisDoubleClickReset","axisPressedMouseMove","pinch","_private__rightOffsetForCoordinate","oldBarSpacing","_private__resetTimeMarksCache","_private__setVisibleRange","newBarsLength","rightBorder","leftBorder","_private__minBarSpacing","_private__maxBarSpacing","minRightOffset","_private__minRightOffset","maxRightOffset","_private__maxRightOffset","barsEstimation","_private__formatLabelImpl","formatTickmark","newVisibleRange","oldVisibleRange","updateFormatter","leftEdgeOffset","gen","testNearestIntegers","maxIndex","next","num","rounded","isRoundedDown","TrackingModeExitMode","isPanePrimitive","ChartModel","invalidateHandler","_private__panes","_private__serieses","_private__hoveredSource","_private__priceScalesOptionsChanged","_private__crosshairMoved","_private__gradientColorsCache","_private__invalidateHandler","layout","colorParsers","_private__rendererOptionsProvider","_private__magnet","_private__getOrCreatePane","_private__backgroundTopColor","_private__getBackgroundColor","_private__backgroundBottomColor","_private__invalidate","_private__invalidationMaskForSource","_internal_hoveredSource","_internal_setHoveredSource","prevSource","_internal_applyPriceScaleOptions","_internal_findPriceScale","_internal_crosshairSource","_internal_crosshairMoved","_internal_setPaneHeight","_internal_removePane","_internal_changePanesHeight","targetPane","totalStretch","maxPaneHeight","pixelStretchFactor","oldHeight","otherPanesChange","panesCount","newPaneHeight","newStretchFactor","_internal_swapPanes","firstPane","secondPane","_private__paneInvalidationMask","_internal_startScaleTime","_internal_zoomTime","pointX","_internal_scrollChart","_internal_startScrollTime","_internal_scrollTimeTo","_internal_endScrollTime","_internal_scaleTimeTo","_internal_endScaleTime","_internal_setAndSaveCurrentPosition","event","skipEvent","_private__updateHoveredSourceOnChange","_internal_setAndSaveSyntheticPosition","horizontalPosition","_internal_clearCurrentPosition","_internal_updateTimeScale","newBaseIndex","oldFirstTime","newFirstTime","currentBaseIndex","isLastSeriesBarVisible","isLeftBarShiftToLeft","isSeriesPointsAdded","isSeriesPointsAddedToRight","allowShiftWhenReplacingWhitespace","allowShiftVisibleRangeOnWhitespaceReplacement","replacedExistingWhitespace","needShiftVisibleRangeOnNewBar","shiftVisibleRangeOnNewBar","compensationShift","find","_internal_rendererOptionsProvider","_internal_addSeriesToPane","_private__addSeriesToPane","_internal_removeSeries","seriesIndex","paneImpl","_private__cleanupIfPaneIsEmpty","mask","_internal_setTargetLogicalRange","_internal_defaultVisiblePriceScaleId","_internal_moveSeriesToPane","newPaneIndex","fromPaneIndex","_private__seriesPaneIndex","previousPane","_internal_backgroundBottomColor","_internal_colors","cachedValue","_internal_getPaneIndex","invalidateType","side","fillUpDownCandlesticksColors","wickColor","LastPriceAnimationMode","precisionByMinMove","fractPart","PriceLineSource","ColorType","isBusinessDay","isUTCTimestamp","TickMarkType","getMonth","date","getUTCMonth","getDay","getUTCDate","getYear","getUTCFullYear","dd","MMMM","locale","Date","toLocaleString","month","MMM","MM","yy","yyyy","formatDate","DateFormatter","dateFormat","_private__dateFormat","_private__locale","TimeFormatter","_private__formatStr","getUTCHours","getUTCMinutes","getUTCSeconds","defaultParams","_internal_dateFormat","_internal_timeFormat","_internal_dateTimeSeparator","_internal_locale","DateTimeFormatter","params","formatterParams","_private__dateFormatter","_private__timeFormatter","_private__separator","dateTime","defaultTickMarkFormatter","timePoint","tickMarkType","formatOptions","year","day","hour12","hour","minute","_internal_businessDay","_internal_timestamp","UTC","localDateFromUtc","getUTCMilliseconds","hours","minutes","seconds","intradayWeightDivisors","_internal_divisor","_internal_weight","weightByTime","currentDate","prevDate","getTime","cast","fillWeightsForPoints","sortedTimePoints","prevTime","totalTimeDiff","currentPoint","averageTimeDiff","approxPrevDate","businessDayConverter","businessDay","stringToBusinessDay","timestampConverter","selectTimeConverter","validDateRegex","convertTime","test","d","convertStringToBusinessDay","convertStringsToBusinessDays","weightToTickMarkType","timeVisible","secondsVisible","HorzScaleBehaviorTime","setOptions","preprocessData","createConverterToInternalObj","convertHorzItemToInternal","_private__dateTimeFormatter","tp","tickMarkFormatter","tickMarkString","maxTickMarkWeight","tickMarks","maxWeight","_internal_applyDefaults","isRunningOnClientSide","isFF","navigator","userAgent","toLowerCase","isIOS","platform","isChrome","chrome","isWindows","userAgentData","isChromiumBased","brands","some","brand","warn","msg","console","suggestChartSize","originalSize","integerWidth","integerHeight","suggestTimeScaleHeight","originalHeight","suggestPriceScaleWidth","originalWidth","preventScrollByWheelClick","el","addEventListener","button","preventDefault","MouseEventHandler","handler","_private__clickCount","_private__clickTimeoutId","_private__clickPosition","NEGATIVE_INFINITY","POSITIVE_INFINITY","_private__tapCount","_private__tapTimeoutId","_private__tapPosition","_private__longTapTimeoutId","_private__longTapActive","_private__mouseMoveStartPosition","_private__touchMoveStartPosition","_private__touchMoveExceededManhattanDistance","_private__cancelClick","_private__cancelTap","_private__unsubscribeOutsideMouseEvents","_private__unsubscribeOutsideTouchEvents","_private__unsubscribeMobileSafariEvents","_private__unsubscribeMousemove","_private__unsubscribeRootMouseEvents","_private__unsubscribeRootTouchEvents","_private__startPinchMiddlePoint","_private__startPinchDistance","_private__pinchPrevented","_private__preventTouchDragProcess","_private__mousePressed","_private__lastTouchEventTimeStamp","_private__activeTouchId","_private__acceptMouseLeave","_private__onFirefoxOutsideMouseUp","mouseUpEvent","_private__mouseUpHandler","_private__onMobileSafariDoubleClick","dblClickEvent","_private__firesTouchEvents","compatEvent","_private__makeCompatEvent","_internal_manhattanDistance","manhattanDistance","_private__touchMouseMoveWithDownInfo","getPosition","_private__processTouchEvent","_private__handler","_internal_doubleTapEvent","_private__resetTapTimeout","_private__processMouseEvent","_internal_mouseDoubleClickEvent","_private__resetClickTimeout","_private__target","_private__init","_private__clearLongTapTimeout","_private__mouseEnterHandler","enterEvent","boundMouseMoveHandler","_private__mouseMoveHandler","removeEventListener","_internal_mouseEnterEvent","moveEvent","_internal_mouseMoveEvent","_private__touchMoveHandler","touch","touchWithId","changedTouches","eventTimeStamp","moveInfo","_internal_xOffset","xOffset","_internal_yOffset","yOffset","correctedXOffset","isVertDrag","_internal_treatVertTouchDragAsPageScroll","isHorzDrag","_internal_treatHorzTouchDragAsPageScroll","_internal_touchMoveEvent","_private__mouseMoveWithDownHandler","_internal_pressedMouseMoveEvent","currentPosition","startPosition","_private__touchEndHandler","touchEndEvent","touches","_internal_touchEndEvent","_internal_tapEvent","rootElement","ownerDocument","documentElement","_internal_mouseUpEvent","_internal_mouseClickEvent","_private__touchStartHandler","downEvent","identifier","boundTouchMoveWithDownHandler","boundTouchEndHandler","passive","_private__longTapHandler","_internal_touchStartEvent","_private__mouseDownHandler","boundMouseMoveWithDownHandler","boundMouseUpHandler","_internal_mouseDownEvent","doc","outsideHandler","_internal_mouseDownOutsideEvent","composed","contains","composedPath","_private__mouseLeaveHandler","_private__initPinch","_internal_pinchStartEvent","_internal_pinchEvent","_internal_pinchEndEvent","_private__checkPinchState","currentDistance","getDistance","_private__stopPinch","_private__startPinch","box","getBoundingClientRect","clientX","clientY","_internal_mouseLeaveEvent","_internal_longTapEvent","sourceCapabilities","firesTouchEvents","eventLike","pageX","pageY","screenX","screenY","localX","localY","ctrlKey","altKey","shiftKey","metaKey","_internal_isTouch","startsWith","_internal_srcType","_internal_target","_internal_preventDefault","p2","xDiff","yDiff","sqrt","cancelable","timeStamp","PaneSeparator","chartWidget","topPaneIndex","bottomPaneIndex","_private__handle","_private__mouseEventHandler","_private__resizeEnabled","_private__resizeInfo","_private__chartWidget","_private__topPane","_internal_paneWidgets","_private__bottomPane","_private__rowElement","_private__cell","padding","margin","setAttribute","_private__updateBorderColor","panes","enableResize","_private__addResizableHandle","_internal_getElement","_internal_getSize","_internal_getBitmapSize","devicePixelRatio","_internal_drawBitmap","separatorColor","_internal_backgroundElement","_internal_element","backgroundElement","bgStyle","zIndex","cursor","handlers","_private__mouseOverEvent","_private__mouseLeaveEvent","_private__mouseDownEvent","_private__pressedMouseMoveEvent","_private__mouseUpEvent","separatorHoverColor","_internal_state","minPaneStretch","_internal_startY","_internal_prevStretchTopPane","_internal_maxPaneStretch","_internal_totalStretch","_internal_pixelStretchFactor","_internal_minPaneStretch","resizeInfo","deltaY","deltaStretchFactor","upperPaneNewStretch","distanceBetweenPoints","pos1","pos2","_internal_position","speedPxPerMSec","maxSpeed","speed","durationMSec","dumpingCoeff","lnDumpingCoeff","log","KineticAnimation","minSpeed","_private__position1","_private__position2","_private__position3","_private__position4","_private__animationStartPosition","_private__durationMsecs","_private__speedPxPerMsec","_private__minSpeed","_private__maxSpeed","_private__dumpingCoeff","_internal_addPosition","totalDistance","speed1","distance1","speedItems","distanceItems","speed2","distance2","speed3","distance3","resultSpeed","durationMsecs","_private__progressDuration","progress","svg","css","AttributionLogoWidget","container","chart","_private__element","_private__cssElement","_private__theme","_private__container","_private__chart","_private__render","_internal_removeElement","_private__shouldUpdate","_private__shouldBeVisible","_private__themeToUse","attributionLogo","_private__getUTMSource","url","URL","location","href","hostname","pathname","innerText","innerHTML","toggleAttribute","createBoundCanvas","parentElement","canvas","binding","allowResizeObserver","transform","canvasElementClientSize","resizeCanvasElement","releaseCanvas","getContext","drawForeground","drawSourceViews","paneViewsGetter","drawRendererFn","hasPriceScale","buildPriceAxisViewsGetter","psId","recalculateOverlapping","direction","currentGroupStart","initLabelHeight","spaceBeforeCurrentGroup","prev","prevFixedCoordinate","overlap","edgePoint","outOfViewport","desiredGroupShift","possibleShift","k","priceScaleCrosshairLabelVisible","PriceAxisWidget","rendererOptionsProvider","_private__size","_private__mousedown","_private__widthCache","_private__font","_private__prevOptimalWidth","_private__isSettingSize","_private__canvasSuggestedBitmapSizeChangedHandler","_internal_chart","_private__topCanvasSuggestedBitmapSizeChangedHandler","_private__isLeft","_private__sourcePaneViews","_private__sourceTopPaneViews","_private__sourceBottomPaneViews","overflow","_private__canvasBinding","subscribeSuggestedBitmapSizeChanged","canvasElement","_private__topCanvasBinding","topCanvas","_private__mouseDownOutsideEvent","_private__mouseDoubleClickEvent","_private__mouseEnterEvent","unsubscribeSuggestedBitmapSizeChanged","dispose","_internal_rendererOptions","isFontChanged","_internal_optimalWidth","tickMarkMaxWidth","colorSpace","_private__baseFont","_private__backLabels","topValue","bottomValue","resultTickMarksMaxWidth","_internal_setSize","newSize","_internal_getWidth","_internal_paint","canvasOptions","_private__alignLabels","applySuggestedBitmapSize","_private__drawBackground","_private__drawBorder","_internal_drawAdditionalSources","_private__drawTickMarks","_private__drawBackLabels","topTarget","_private__drawCrosshairLabel","drawImage","_private__setCursor","addViewsForSources","borderVisible","borderSize","priceScaleOptions","tickMarkLeftX","tickHeight","tickLength","rect","textLeftX","yMidCorrections","orderedSources","paneState","isDefault","centerSource","updateForSources","sourceViews","alignLabels","_private__fixLabelOverlap","l","halfHeight","ro","sourceBottomPaneViews$1","sourcePaneViews$1","sourceLabelPaneViews","sourceTopPaneViews$1","PaneWidget","state","_private__leftPriceAxisWidget","_private__rightPriceAxisWidget","_private__attributionLogoWidget","_private__startScrollingPos","_private__isScrolling","_private__clicked","_private__dblClicked","_private__prevPinchScale","_private__longTap","_private__startTrackPoint","_private__exitTrackingModeOnNextTry","_private__initCrosshairPosition","_private__scrollXAnimation","_private__state","_private__onStateDestroyed","_private__paneCell","paneWrapper","_private__leftAxisCell","_private__rightAxisCell","_internal_updatePriceAxisWidgetsStates","_internal_setState","_private__recreatePriceAxisWidgets","_internal_updatePriceAxisWidgets","stretchFactor","_private__onMouseEvent","_private__setCrosshairPosition","_private__mouseTouchDownEvent","_private__fireClickedDelegate","_private__fireMouseClickDelegate","_private__pressedMouseTouchMoveEvent","_private__endScroll","_private__startTrackingMode","_private__clearCrosshairPosition","_internal_clicked","_internal_dblClicked","middlePoint","zoomScale","origPoint","newX","newY","trackingMode","exitMode","_private__tryExitTrackingMode","_internal_setPriceAxisSize","priceAxisWidget","_internal_recalculatePriceScales","_private__drawSources","_private__drawGrid","_private__drawCrosshair","_internal_leftPriceAxisWidget","_internal_rightPriceAxisWidget","delegate","_private__drawSourceImpl","panePrimitives","panePrimitive","drawFn","hoveredSource","objecId","leftAxisVisible","rightAxisVisible","_private__preventScroll","_private__correctXCoord","_private__correctYCoord","startTrackPoint","crossHairPosition","startAnimationTime","activeElement","blur","selection","getSelection","removeAllRanges","chartOptions","scrollOptions","kineticScrollOptions","kineticScroll","_internal_localX","_internal_localY","mouse","PriceAxisStub","_private__borderVisible","_private__bottomColor","horzBorderSize","vertBorderSize","buildTimeAxisViewsGetter","sourcePaneViews","sourceTopPaneViews","sourceBottomPaneViews","TimeAxisWidget","_private__leftStub","_private__rightStub","_private__mouseDown","_private__sizeChanged","_private__leftStubCell","_private__rightStubCell","_private__dv","_private__recreateStubs","_internal_leftStub","_internal_rightStub","_internal_sizeChanged","_internal_setSizes","timeAxisSize","leftStubWidth","rightStubWidth","_internal_optimalHeight","_private__getRendererOptions","_internal_labelBottomOffset","_private__drawAdditionalSources","_private__drawLabels","axisViewsGetter","_private__lineColor","tickLen","_private__alignTickMarkLabelCoordinate","allowBoldLabels","_private__baseBoldFont","labelText","leftTextCoordinate","newFont","borderVisibleGetter","bottomColorGetter","windowsChrome","ChartWidget","_private__paneWidgets","_private__paneSeparators","_private__drawRafId","_private__leftPriceAxisWidth","_private__rightPriceAxisWidth","_private__invalidateMask","_private__drawPlanned","_private__observer","_private__cursorStyleOverride","classList","add","disableSelection","_private__tableElement","_private__onWheelBound","_private__onMousewheel","shouldSubscribeMouseWheel","_private__setMouseWheelEventListener","_private__onPaneWidgetCrosshairMoved","_private__timeAxisWidget","usedObserver","autoSize","_private__installObserver","containerRect","_internal_resize","_private__syncGuiWithModel","_private__updateTimeAxisVisibility","_internal_timeAxisWidget","cancelAnimationFrame","paneWidget","paneSeparator","_private__destroySeparator","_private__uninstallObserver","forceRepaint","sizeHint","heightStr","widthStr","_private__drawImpl","invalidateMask","currentlyHasMouseWheelListener","shouldHaveMouseWheelListener","_private__applyPanesOptions","_private__applyAutoSizeOptions","_internal_takeScreenshot","screeshotBitmapSize","_private__traverseLayout","screenshotCanvas","_internal_getPriceAxisWidth","_private__isLeftAxisVisible","_private__isRightAxisVisible","_internal_autoSizeActive","_internal_setCursorStyle","setProperty","removeProperty","_internal_getCursorOverrideStyle","_internal_paneSize","separator","drawPriceAxises","targetX","targetY","separatorBitmapSize","leftAxisBitmapWidth","firstPaneBitmapWidth","rightAxisBitmapWidth","drawStub","stub","timeAxisBitmapSize","_private__adjustSizeImpl","leftPriceAxisWidth","rightPriceAxisWidth","minimumWidth","paneWidth","separatorCount","separatorHeight","separatorsHeight","timeAxisVisible","timeAxisHeight","minimumHeight","otherWidgetHeight","totalPaneHeight","stretchPixels","accumulatedHeight","pixelRatio","paneHeight","calculatePaneHeight","_private__determineWheelSpeedAdjustment","deltaMode","DOM_DELTA_PAGE","DOM_DELTA_LINE","deltaX","scrollSpeedAdjustment","scrollPosition","invalidationType","_private__updateGui","_private__applyMomentaryAutoScale","_private__applyTimeScaleInvalidations","requestAnimationFrame","targetPaneWidgetsCount","actualPaneWidgetsCount","pop","_private__onPaneWidgetClicked","_private__onPaneWidgetDblClicked","insertBefore","_private__getMouseEventParamsImpl","clientTime","hoveredSeries","hoveredObject","_private__getPaneIndex","_internal_originalTime","_internal_point","_internal_paneIndex","_internal_hoveredSeries","_internal_seriesData","_internal_hoveredObject","_internal_touchMouseEventData","crosshairPane","ResizeObserver","entries","containerEntry","contentRect","observe","disconnect","userSelect","webkitUserSelect","msUserSelect","MozUserSelect","webkitTapHighlightColor","Boolean","isWhitespaceData","open","isFulfilledData","isFulfilledBarData","isFulfilledLineData","getColoredLineBasedSeriesPlotRow","getAreaSeriesPlotRow","getBaselineSeriesPlotRow","getBarSeriesPlotRow","close","getCandlestickSeriesPlotRow","getCustomSeriesPlotRow","dataToPlotRow","excludedTime","isSeriesPlotRow","row","wrapCustomValues","customValues","_internal_customValues","isWhitespaceDataWithCustomCheck","customIsWhitespace","wrapWhitespaceData","createPlotRowFn","getSeriesPlotRowCreator","seriesPlotRowFnMap","createEmptyTimePointData","_internal_mapping","seriesRowsFirstAndLastTime","seriesRows","_internal_firstTime","_internal_lastTime","seriesUpdateInfo","prevSeriesRows","firstAndLastTime","prevFirstAndLastTime","_internal_historicalUpdate","timeScalePointTime","mergedPointData","saveOriginalTime","DataLayer","_private__pointDataByTimePoint","_private__seriesRowsBySeries","_private__seriesLastTimePoint","_private__sortedTimePoints","_internal_setSeriesData","needCleanupPoints","isTimeScaleAffected","pointData","originalTimes","timeConverter","createPlotRow","customWhitespaceChecker","horzItemKey","timePointData","_private__cleanupPointsData","_private__setRowsToSeries","newTimeScalePoints","t1","t2","_private__replaceTimeScalePoints","_private__getUpdateResponse","_internal_updateSeriesData","historicalUpdate","extendedData","lastSeriesTime","pointDataAtTime","affectsTimeScale","_private__updateHistoricalSeriesRow","_private__updateLastSeriesRow","info","newPoint","insertIndex","assignIndexToPointData","lastSeriesRow","pointDataIndex","newTimePoints","oldPoint","_private__getBaseIndex","updatedSeries","dataUpdateResponse","_internal_info","_internal_points","_internal_firstChangedPointIndex","seriesRow","lowerBoundItemsCompare","upperBoundItemsCompare","visibleTimedValues","extendedRange","extendedFrom","extendedTo","SeriesPaneViewBase","extendedVisibleRange","_internal__invalidated","_internal__dataInvalidated","_internal__optionsInvalidated","_internal__items","_internal__itemsVisibleRange","_private__extendedVisibleRange","_private__makeValid","_internal__renderer","_internal__updateOptions","_internal__clearVisibleRange","_internal__fillRawPoints","_private__makeValidImpl","_internal__convertToCoordinates","_internal__prepareRendererData","CustomSeriesPaneRendererWrapper","sourceRenderer","_private__sourceRenderer","SeriesCustomPaneView","priceValueBuilder","isWhitespace","colorer","_internal_originalData","update","unwrapItemData","originalData","barColor","customStyleDefaults","createPaneView$6","createCustomSeriesDefinition","definition","isBuiltIn","defaultOptions","_internal_createPaneView","_internal_customPaneView","isSeriesDefinition","singleValueData","lineData","areaData","baselineData","ohlcData","barData","candlestickData","getSeriesDataCreator","seriesPlotRowToDataMap","customData","crosshairOptionsDefaults","gridOptionsDefaults","layoutOptionsDefaults","priceScaleOptionsDefaults","timeScaleOptionsDefaults","chartOptionsDefaults","language","PaneApi","seriesApiGetter","chartApi","_private__seriesApiGetter","_internal__chartApi","getHeight","setHeight","getSeries","getHTMLElement","attachPrimitive","attached","requestUpdate","detachPrimitive","PriceScaleApi","_private__priceScaleId","applyOptions","checkPriceLineOptions","checkItemsAreOrdered","allowDuplicates","checkResult","checkSeriesValuesType","getChecker","checkBarItem","checkLineItem","checkCustomItem","barItem","isSafeValue","MIN_SAFE_VALUE","toPrecision","MAX_SAFE_VALUE","lineItem","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","priceLineOptionsDefaults","PriceLine","_internal_priceLine","SeriesApi","dataUpdatesConsumer","priceScaleApiProvider","paneApiGetter","_private__dataChangedDelegate","_internal__dataUpdatesConsumer","_private__priceScaleApiProvider","_private__paneApiGetter","priceToCoordinate","coordinateToPrice","barsInLogicalRange","correctedRange","dataFirstBarInRange","dataLastBarInRange","dataFirstIndex","dataLastIndex","barsBefore","barsAfter","setData","_internal_applyNewData","_private__onDataChanged","_internal_updateData","dataByIndex","logicalIndex","mismatchDirection","creator","seriesCreator","rows","subscribeDataChanged","unsubscribeDataChanged","createPriceLine","strictOptions","removePriceLine","priceLines","getPane","moveToPane","TimeScaleApi","timeAxisWidget","_private__timeRangeChanged","_private__onVisibleBarsChanged","_private__onVisibleLogicalRangeChanged","_private__onSizeChanged","scrollToPosition","animated","scrollToRealTime","getVisibleRange","timeRange","setVisibleRange","convertedRange","getVisibleLogicalRange","setVisibleLogicalRange","resetTimeScale","fitContent","logicalToCoordinate","coordinateToLogical","timeToIndex","timeToCoordinate","coordinateToTime","subscribeVisibleTimeRangeChange","unsubscribeVisibleTimeRangeChange","subscribeVisibleLogicalRangeChange","unsubscribeVisibleLogicalRangeChange","subscribeSizeChange","unsubscribeSizeChange","patchPriceFormat","priceFormatBuiltIn","migrateHandleScaleScrollOptions","toInternalOptions","ChartApi","_private__seriesMap","_private__seriesMapReversed","_private__clickedDelegate","_private__dblClickedDelegate","_private__crosshairMovedDelegate","_private__dataLayer","internalOptions","_internal__horzScaleBehavior","paramSupplier","_private__convertMouseParams","_private__timeScaleApi","remove","resize","autoSizeActive","addCustomSeries","_private__addSeriesImpl","addSeries","removeSeries","seriesApi","_private__sendUpdateToChart","subscribeClick","unsubscribeClick","subscribeCrosshairMove","unsubscribeCrosshairMove","subscribeDblClick","unsubscribeDblClick","takeScreenshot","removePane","swapPanes","chartElement","_private__getPaneApi","paneSize","setCrosshairPosition","clearCrosshairPosition","horzBehaviour","_private__mapSeriesToApi","param","hoveredObjectId","sourceEvent","fetchHtmlElement","getElementById","createChartEx","htmlElement","createChart","defaultHorzScaleBehavior","LinePaneViewBase","_internal__createRawItemBase","_internal__createRawItem","drawSeriesPointMarkers","renderingScope","pointMarkersRadius","styleGetter","prevStyle","walkLine","lineType","barWidth","finishStyledArea","firstItem","currentStyle","currentStyleFirstItem","halfBarWidth","item1","item2","changeStyle","newStyle","currentItem","itemStyle","cp1","cp2","getControlPoints","bezierCurveTo","curveTension","subtract","divide","n","fromPointIndex","toPointIndex","beforeFromPointIndex","afterToPointIndex","finishStyledArea$1","PaneRendererLineBase","_internal_barWidth","_internal_lineType","_internal_pointMarkersRadius","lineJoin","_internal__strokeStyle","PaneRendererLine","SeriesLinePaneView","pointMarkersVisible","lineStyleDefaults","createPaneView$5","createLineSeries","lineSeries","createDebouncedMicroTaskHandler","scheduled","args","queueMicrotask","markWithGreaterWeight$1","toInternalHorzScaleItem","fromInternalHorzScaleItem","YieldCurveHorzScaleBehavior","_private__pointsChangedDelegate","_private__invalidateWhitespace","_private__largestIndex","_internal_whitespaceInvalidated","internalItem","_private__formatTime","months","years","remainingMonths","yieldChartOptionsDefaults","baseResolution","minimumTimeRange","startTimeRange","generateWhitespaceData","_internal_resolution","resolution","buildWhitespaceState","generateWhitespaceHash","yieldCurve","lineStyleDefaultOptionOverrides","YieldChartApi","fullOptions","_initWhitespaceSeries","optionOverrides","whiteSpaceSeries","currentWhitespaceHash","updateWhitespace","newWhitespaceState","newWhitespaceHash","createYieldCurveChart","markWithGreaterWeight","HorzScaleBehaviorPrice","priceWeight","createOptionsChart","baseLevelCoordinate","areaFirstItem","newAreaFirstItem","PaneRendererAreaBase","_internal_baseLevelCoordinate","_internal_invertFilledArea","_internal__fillStyle","GradientStyleCache","_internal_get","cachedParams","_private__params","_internal_topColor1","topColor1","_internal_topColor2","topColor2","_internal_bottomColor1","bottomColor1","_internal_bottomColor2","bottomColor2","_internal_topCoordinate","topCoordinate","_internal_bottomCoordinate","bottomCoordinate","_private__cachedValue","multiplier","baseline","baselineRatio","PaneRendererBaselineArea","_private__fillCache","PaneRendererBaselineLine","_private__strokeCache","SeriesBaselinePaneView","_private__baselineAreaRenderer","_private__baselineLineRenderer","relativeGradient","baselineStyleDefaults","createPaneView$4","createSeries$4","baselineSeries","PaneRendererArea","SeriesAreaPaneView","_private__areaRenderer","_private__lineRenderer","invertFilledArea","areaStyleDefaults","createPaneView$3","createSeries$3","areaSeries","optimalBarWidth","optimalCandlestickWidth","barSpacingSpecialCaseFrom","barSpacingSpecialCaseTo","barSpacingSpecialCaseCoeff","barSpacingReducingCoeff","atan","scaledBarSpacing","optimal","PaneRendererBars","_private__barWidth","_private__barLineWidth","_private__calcBarWidth","_internal_thinBars","prevColor","drawOpenClose","bodyWidthHalf","bodyCenter","bodyLeft","bodyWidth","bodyRight","bodyTop","bodyBottom","bodyHeight","sideWidth","_internal_openVisible","openLeft","openTop","openBottom","closeRight","closeTop","closeBottom","limit","BarsPaneViewBase","_internal__createDefaultItem","SeriesBarsPaneView","barStyleProps","openVisible","thinBars","barStyleDefaults","createPaneView$2","createSeries$2","barSeries","PaneRendererCandlesticks","wickWidth","_internal_wickVisible","_private__drawWicks","_private__calculateBorderWidth","_private__drawCandles","prevWickColor","wickOffset","prevEdge","scaledX","prevBorderColor","prevBarColor","SeriesCandlesticksPaneView","candlestickStyleProps","wickVisible","candlestickStyleDefaults","createPaneView$1","createSeries$1","candlestickSeries","showSpacingMinimalBarWidth","alignToMinimalWidthLimit","PaneRendererHistogram","_private__precalculatedCache","_private__fillPrecalculatedCache","histogramBase","_internal_histogramBase","topHistogramBase","bottomHistogramBase","columnWidth","halfWidth","_internal_roundedCenter","minWidth","SeriesHistogramPaneView","histogramStyleDefaults","createSeries","histogramSeries","_private__primitive","_private__attach","detach","textWatermarkOptionsDefaults","horzAlign","vertAlign","lines","textWatermarkLineOptionsDefaults","fontStyle","TextWatermarkRenderer","_private__metricsCache","textHeight","_private__metrics","lineHeight","vertOffset","horzOffset","_internal_vertOffset","fontCache","_private__fontCache","TextWatermarkPaneView","buildRendererOptions$1","buildRendererLineOptions","lineOption","mergeLineOptionsWithDefaults","mergeOptionsWithDefaults$1","TextWatermark","_private__paneViews","_internal_requestUpdate","createTextWatermark","imageWatermarkOptionsDefaults","ImageWatermarkRenderer","_private__determinePlacement","_internal_imgElement","globalAlpha","maxHeight","_internal_imgHeight","imgHeight","_internal_imgWidth","imgWidth","plotCentreX","plotCentreY","paddingSize","availableWidth","availableHeight","scaleX","scaleY","scaleToUse","drawWidth","drawHeight","ImageWatermarkPaneView","_private__image","_private__imageWidth","_private__imageHeight","buildRendererOptions","_internal_stateUpdate","_internal_imageWidth","_internal_imageHeight","_internal_image","_internal_optionsUpdate","imgElement","mergeOptionsWithDefaults","ImageWatermark","imageUrl","_private__imgElement","_private__imageUrl","attachedParams","_private__requestUpdate","Image","onload","imageHeight","naturalHeight","imageWidth","naturalWidth","pv","_private__updateOptions","createImageWatermark","SeriesPrimitiveAdapter","shapeSize","shape","calculateShapeHeight","shapeMargin","calculateAdjustedMargin","hasSide","hasInBar","drawArrow","up","coords","arrowSize","halfArrowSize","_internal_pixelRatio","baseSize","halfBaseSize","hitTestArrow","triangleTolerance","rectTolerance","baseLeft","baseRight","baseTop","baseBottom","isInTriangleBounds","headLeft","headRight","headTop","headBottom","dx","dy","drawCircle","circleSize","halfSize","hitTestCircle","tolerance","dist","drawSquare","squareSize","hitTestSquare","drawText","hitTestText","textX","textY","SeriesMarkersRenderer","hitTestItem","_internal_content","drawItem","bitmapShapeItemCoordinates","drawShape","coordinates","_internal_shape","hitTestShape","fillSizeAndY","rendererItem","marker","offsets","inBarPrice","highPrice","lowPrice","isValueData","isOhlcData","sizeMultiplier","_internal_aboveBar","_internal_belowBar","SeriesMarkersPaneView","_private__markers","_private__dataInvalidated","_internal__makeValid","_internal_setMarkers","markers","seriesMarkers","_internal_internalId","visibleBarsRange","prevTimeIndex","shapeMargin$1","dataAt","SeriesMarkersPrimitive","_private__indexedMarkers","_private__dataChangedHandler","_private__autoScaleMarginsInvalidated","_private__autoScaleMargins","_private__markersPositions","_private__cachedBarSpacing","_private__recalculateMarkers","_internal_markers","_private__updateAllViews","_private__getAutoScaleMargins","marginValue","positions","_private__getMarkerPositions","aboveBar","inBar","belowBar","firstDataIndex","seriesDataByIndex","finalIndex","SeriesMarkersPrimitiveWrapper","setMarkers","createSeriesMarkers","ExpiringMarkerManager","updateCallback","_private__updateCallback","_internal_setMarker","timeout","_internal_clearMarker","timeoutId","_private__triggerUpdate","markerWithTimeout","_internal_timeoutId","_internal_expiresAt","_internal_clearAllMarkers","_internal_getMarkers","activeMarkers","_internal_setUpdateCallback","upDownMarkersPluginOptionDefaults","positiveColor","negativeColor","updateVisibilityDuration","MarkersPrimitiveRenderer","neutralColor","_private__neutralColor","_private__negativeColor","_private__positiveColor","rad","centreX","_private__getColor","_internal_sign","isAreaStyleOptions","opts","getNeutralColor","MarkersPrimitivePaneView","isLineData","UpDownMarkersPrimitive","_private__managedDataPoints","_private__markersManager","horzKey","existingPrice","getSign","_internal_clearMarkers","oldValue","SeriesUpDownMarkerPrimitiveWrapper","clearMarkers","createUpDownMarkers","customSeriesDefaultOptions","version","AreaSeries","BarSeries","BaselineSeries","CandlestickSeries","HistogramSeries","LineSeries"],"sources":["/home/study/trading/frontend/node_modules/lightweight-charts/dist/lightweight-charts.development.mjs"],"sourcesContent":["/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v5.0.2\n * Copyright (c) 2025 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\nconst customStyleDefaults$1 = {\n    color: '#2196f3',\n};\nconst seriesOptionsDefaults = {\n    title: '',\n    visible: true,\n    lastValueVisible: true,\n    priceLineVisible: true,\n    priceLineSource: 0 /* PriceLineSource.LastBar */,\n    priceLineWidth: 1,\n    priceLineColor: '',\n    priceLineStyle: 2 /* LineStyle.Dashed */,\n    baseLineVisible: true,\n    baseLineWidth: 1,\n    baseLineColor: '#B2B5BE',\n    baseLineStyle: 0 /* LineStyle.Solid */,\n    priceFormat: {\n        type: 'price',\n        precision: 2,\n        minMove: 0.01,\n    },\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n    /**\n     * A line.\n     */\n    LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * A stepped line.\n     */\n    LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n    /**\n     * A curved line.\n     */\n    LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n    /**\n     * A solid line.\n     */\n    LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * A dotted line.\n     */\n    LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n    /**\n     * A dashed line.\n     */\n    LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n    /**\n     * A dashed line with bigger dashes.\n     */\n    LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n    /**\n     * A dotted line with more space between dots.\n     */\n    LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n    const dashPatterns = {\n        [0 /* LineStyle.Solid */]: [],\n        [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n        [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n        [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n        [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth],\n    };\n    const dashPattern = dashPatterns[style];\n    ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(left, y + correction);\n    ctx.lineTo(right, y + correction);\n    ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(x + correction, top);\n    ctx.lineTo(x + correction, bottom);\n    ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n    ctx.save();\n    if (ctx.lineWidth % 2) {\n        ctx.translate(0.5, 0.5);\n    }\n    drawFunction();\n    ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n    }\n}\nfunction ensureDefined(value) {\n    if (value === undefined) {\n        throw new Error('Value is undefined');\n    }\n    return value;\n}\nfunction ensureNotNull(value) {\n    if (value === null) {\n        throw new Error('Value is null');\n    }\n    return value;\n}\nfunction ensure(value) {\n    return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) { }\n\nclass Delegate {\n    constructor() {\n        this._private__listeners = [];\n    }\n    _internal_subscribe(callback, linkedObject, singleshot) {\n        const listener = {\n            _internal_callback: callback,\n            _internal_linkedObject: linkedObject,\n            _internal_singleshot: singleshot === true,\n        };\n        this._private__listeners.push(listener);\n    }\n    _internal_unsubscribe(callback) {\n        const index = this._private__listeners.findIndex((listener) => callback === listener._internal_callback);\n        if (index > -1) {\n            this._private__listeners.splice(index, 1);\n        }\n    }\n    _internal_unsubscribeAll(linkedObject) {\n        this._private__listeners = this._private__listeners.filter((listener) => listener._internal_linkedObject !== linkedObject);\n    }\n    _internal_fire(param1, param2, param3) {\n        const listenersSnapshot = [...this._private__listeners];\n        this._private__listeners = this._private__listeners.filter((listener) => !listener._internal_singleshot);\n        listenersSnapshot.forEach((listener) => listener._internal_callback(param1, param2, param3));\n    }\n    _internal_hasListeners() {\n        return this._private__listeners.length > 0;\n    }\n    _internal_destroy() {\n        this._private__listeners = [];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n    for (const src of sources) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const i in src) {\n            if (src[i] === undefined ||\n                !Object.prototype.hasOwnProperty.call(src, i) ||\n                ['__proto__', 'constructor', 'prototype'].includes(i)) {\n                continue;\n            }\n            if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n                dst[i] = src[i];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                merge(dst[i], src[i]);\n            }\n        }\n    }\n    return dst;\n}\nfunction isNumber(value) {\n    return (typeof value === 'number') && (isFinite(value));\n}\nfunction isInteger(value) {\n    return (typeof value === 'number') && ((value % 1) === 0);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction clone(object) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const o = object;\n    if (!o || 'object' !== typeof o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return o;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let c;\n    if (Array.isArray(o)) {\n        c = [];\n    }\n    else {\n        c = {};\n    }\n    let p;\n    let v;\n    // eslint-disable-next-line no-restricted-syntax\n    for (p in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n        if (o.hasOwnProperty(p)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            v = o[p];\n            if (v && 'object' === typeof v) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = clone(v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = v;\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return c;\n}\nfunction notNull(t) {\n    return t !== null;\n}\nfunction undefinedIfNull(t) {\n    return (t === null) ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n    if (style !== undefined) {\n        style = `${style} `;\n    }\n    else {\n        style = '';\n    }\n    if (family === undefined) {\n        family = defaultFontFamily;\n    }\n    return `${style}${size}px ${family}`;\n}\n\nclass PriceAxisRendererOptionsProvider {\n    constructor(chartModel) {\n        this._private__rendererOptions = {\n            _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n            _internal_tickLength: 5 /* RendererConstants.TickLength */,\n            _internal_fontSize: NaN,\n            _internal_font: '',\n            _internal_fontFamily: '',\n            _internal_color: '',\n            _internal_paneBackgroundColor: '',\n            _internal_paddingBottom: 0,\n            _internal_paddingInner: 0,\n            _internal_paddingOuter: 0,\n            _internal_paddingTop: 0,\n            _internal_baselineOffset: 0,\n        };\n        this._private__chartModel = chartModel;\n    }\n    _internal_options() {\n        const rendererOptions = this._private__rendererOptions;\n        const currentFontSize = this._private__fontSize();\n        const currentFontFamily = this._private__fontFamily();\n        if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n            rendererOptions._internal_fontSize = currentFontSize;\n            rendererOptions._internal_fontFamily = currentFontFamily;\n            rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n            rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n            rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n            rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_baselineOffset = 0;\n        }\n        rendererOptions._internal_color = this._private__textColor();\n        rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n        return this._private__rendererOptions;\n    }\n    _private__textColor() {\n        return this._private__chartModel._internal_options()['layout'].textColor;\n    }\n    _private__paneBackgroundColor() {\n        return this._private__chartModel._internal_backgroundTopColor();\n    }\n    _private__fontSize() {\n        return this._private__chartModel._internal_options()['layout'].fontSize;\n    }\n    _private__fontFamily() {\n        return this._private__chartModel._internal_options()['layout'].fontFamily;\n    }\n}\n\nfunction normalizeRgbComponent(component) {\n    if (component < 0) {\n        return 0;\n    }\n    if (component > 255) {\n        return 255;\n    }\n    // NaN values are treated as 0\n    return (Math.round(component) || 0);\n}\nfunction normalizeAlphaComponent(component) {\n    if (component <= 0 || component > 1) {\n        return Math.min(Math.max(component, 0), 1);\n    }\n    // limit the precision of all numbers to at most 4 digits in fractional part\n    return (Math.round(component * 10000) / 10000);\n}\nfunction rgbaToGrayscale(rgbValue) {\n    // Originally, the NTSC RGB to YUV formula\n    // perfected by @eugene-korobko's black magic\n    const redComponentGrayscaleWeight = 0.199;\n    const greenComponentGrayscaleWeight = 0.687;\n    const blueComponentGrayscaleWeight = 0.114;\n    return (redComponentGrayscaleWeight * rgbValue[0] +\n        greenComponentGrayscaleWeight * rgbValue[1] +\n        blueComponentGrayscaleWeight * rgbValue[2]);\n}\n/**\n * For colors which fall within the sRGB space, the browser can\n * be used to convert the color string into a rgb /rgba string.\n *\n * For other colors, it will be returned as specified (i.e. for\n * newer formats like display-p3)\n *\n * See: https://www.w3.org/TR/css-color-4/#serializing-sRGB-values\n */\nfunction getRgbStringViaBrowser(color) {\n    const element = document.createElement('div');\n    element.style.display = 'none';\n    // We append to the body as it is the most reliable way to get a color reading\n    // appending to the chart container or similar element can result in the following\n    // getComputedStyle returning empty strings on each check.\n    document.body.appendChild(element);\n    element.style.color = color;\n    const computed = window.getComputedStyle(element).color;\n    document.body.removeChild(element);\n    return computed;\n}\nclass ColorParser {\n    constructor(customParsers, initialCache) {\n        this._private__rgbaCache = new Map();\n        this._private__customParsers = customParsers;\n        if (initialCache) {\n            this._private__rgbaCache = initialCache;\n        }\n    }\n    /**\n     * We fallback to RGBA here since supporting alpha transformations\n     * on wider color gamuts would currently be a lot of extra code\n     * for very little benefit due to actual usage.\n     */\n    _internal_applyAlpha(color, alpha) {\n        // special case optimization\n        if (color === 'transparent') {\n            return color;\n        }\n        const originRgba = this._private__parseColor(color);\n        const originAlpha = originRgba[3];\n        return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n    }\n    _internal_generateContrastColors(background) {\n        const rgba = this._private__parseColor(background);\n        return {\n            _internal_background: `rgb(${rgba[0]}, ${rgba[1]}, ${rgba[2]})`, // no alpha\n            _internal_foreground: rgbaToGrayscale(rgba) > 160 ? 'black' : 'white',\n        };\n    }\n    _internal_colorStringToGrayscale(background) {\n        return rgbaToGrayscale(this._private__parseColor(background));\n    }\n    _internal_gradientColorAtPercent(topColor, bottomColor, percent) {\n        const [topR, topG, topB, topA] = this._private__parseColor(topColor);\n        const [bottomR, bottomG, bottomB, bottomA] = this._private__parseColor(bottomColor);\n        const resultRgba = [\n            normalizeRgbComponent((topR + percent * (bottomR - topR))),\n            normalizeRgbComponent((topG + percent * (bottomG - topG))),\n            normalizeRgbComponent((topB + percent * (bottomB - topB))),\n            normalizeAlphaComponent((topA + percent * (bottomA - topA))),\n        ];\n        return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n    }\n    _private__parseColor(color) {\n        const cached = this._private__rgbaCache.get(color);\n        if (cached) {\n            return cached;\n        }\n        const computed = getRgbStringViaBrowser(color);\n        const match = computed.match(/^rgba?\\s*\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d*\\.?\\d+))?\\)$/);\n        if (!match) {\n            if (this._private__customParsers.length) {\n                for (const parser of this._private__customParsers) {\n                    const result = parser(color);\n                    if (result) {\n                        this._private__rgbaCache.set(color, result);\n                        return result;\n                    }\n                }\n            }\n            throw new Error(`Failed to parse color: ${color}`);\n        }\n        const rgba = [\n            parseInt(match[1], 10),\n            parseInt(match[2], 10),\n            parseInt(match[3], 10),\n            (match[4] ? parseFloat(match[4]) : 1),\n        ];\n        this._private__rgbaCache.set(color, rgba);\n        return rgba;\n    }\n}\n\nclass CompositeRenderer {\n    constructor() {\n        this._private__renderers = [];\n    }\n    _internal_setRenderers(renderers) {\n        this._private__renderers = renderers;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__renderers.forEach((r) => {\n            r._internal_draw(target, isHovered, hitTestData);\n        });\n    }\n}\n\nclass BitmapCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useBitmapCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n}\n\nclass PaneRendererMarks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n            return;\n        }\n        const visibleRange = this._internal__data._internal_visibleRange;\n        const data = this._internal__data;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const draw = (radiusMedia) => {\n            ctx.beginPath();\n            for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n                const point = data._internal_items[i];\n                const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n                const centerY = point._internal_y * verticalPixelRatio;\n                const radius = radiusMedia * verticalPixelRatio + correction;\n                ctx.moveTo(centerX, centerY);\n                ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n            }\n            ctx.fill();\n        };\n        if (data._internal_lineWidth > 0) {\n            ctx.fillStyle = data._internal_backColor;\n            draw(data._internal_radius + data._internal_lineWidth);\n        }\n        ctx.fillStyle = data._internal_lineColor;\n        draw(data._internal_radius);\n    }\n}\n\nfunction createEmptyMarkerData() {\n    return {\n        _internal_items: [{\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_time: 0,\n                _internal_price: 0,\n            }],\n        _internal_lineColor: '',\n        _internal_backColor: '',\n        _internal_radius: 0,\n        _internal_lineWidth: 0,\n        _internal_visibleRange: null,\n    };\n}\nconst rangeForSinglePoint = { from: 0, to: 1 };\nclass CrosshairMarksPaneView {\n    constructor(chartModel, crosshair, pane) {\n        this._private__compositeRenderer = new CompositeRenderer();\n        this._private__markersRenderers = [];\n        this._private__markersData = [];\n        this._private__invalidated = true;\n        this._private__chartModel = chartModel;\n        this._private__crosshair = crosshair;\n        this._private__pane = pane;\n        this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    _internal_update(updateType) {\n        this._private__createMarkerRenderersIfNeeded();\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__compositeRenderer;\n    }\n    _private__createMarkerRenderersIfNeeded() {\n        const serieses = this._private__pane._internal_orderedSources();\n        if (serieses.length !== this._private__markersRenderers.length) {\n            this._private__markersData = serieses.map(createEmptyMarkerData);\n            this._private__markersRenderers = this._private__markersData.map((data) => {\n                const res = new PaneRendererMarks();\n                res._internal_setData(data);\n                return res;\n            });\n            this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n        }\n    }\n    _private__updateImpl() {\n        const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */ || !this._private__crosshair._internal_visible();\n        const serieses = this._private__pane._internal_orderedSeries();\n        const timePointIndex = this._private__crosshair._internal_appliedIndex();\n        const timeScale = this._private__chartModel._internal_timeScale();\n        this._private__createMarkerRenderersIfNeeded();\n        serieses.forEach((s, index) => {\n            const data = this._private__markersData[index];\n            const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n            const firstValue = s._internal_firstValue();\n            if (forceHidden || seriesData === null || !s._internal_visible() || firstValue === null) {\n                data._internal_visibleRange = null;\n                return;\n            }\n            data._internal_lineColor = seriesData._internal_backgroundColor;\n            data._internal_radius = seriesData._internal_radius;\n            data._internal_lineWidth = seriesData._internal_borderWidth;\n            data._internal_items[0]._internal_price = seriesData._internal_price;\n            data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n            data._internal_backColor = seriesData._internal_borderColor ?? this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n            data._internal_items[0]._internal_time = timePointIndex;\n            data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n            data._internal_visibleRange = rangeForSinglePoint;\n        });\n    }\n}\n\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n        const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n        if (!vertLinesVisible && !horzLinesVisible) {\n            return;\n        }\n        const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        ctx.lineCap = 'butt';\n        if (vertLinesVisible && x >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n            drawVerticalLine(ctx, x, 0, bitmapSize.height);\n        }\n        if (horzLinesVisible && y >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n            drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n        }\n    }\n}\n\nclass CrosshairPaneView {\n    constructor(source, pane) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_vertLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_horzLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_x: 0,\n            _internal_y: 0,\n        };\n        this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n        this._private__source = source;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer(pane) {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const visible = this._private__source._internal_visible();\n        const crosshairOptions = this._private__pane._internal_model()._internal_options().crosshair;\n        const data = this._private__rendererData;\n        if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n            data._internal_horzLine._internal_visible = false;\n            data._internal_vertLine._internal_visible = false;\n            return;\n        }\n        data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(this._private__pane);\n        data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n        data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n        data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n        data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n        data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n        data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n        data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n        data._internal_x = this._private__source._internal_appliedX();\n        data._internal_y = this._private__source._internal_appliedY();\n    }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n    // horizontal (top and bottom) edges\n    ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n    ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n    // vertical (left and right) edges\n    ctx.fillRect(x, y, borderWidth, height);\n    ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n    return borderRadius.map((x) => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n    /**\n     * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n     * be able to switch to the native version soon.\n     */\n    ctx.beginPath();\n    if (ctx.roundRect) {\n        ctx.roundRect(x, y, w, h, radii);\n        return;\n    }\n    /*\n     * Deprecate the rest in v5.\n     */\n    ctx.lineTo(x + w - radii[1], y);\n    if (radii[1] !== 0) {\n        ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n    }\n    ctx.lineTo(x + w, y + h - radii[2]);\n    if (radii[2] !== 0) {\n        ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n    }\n    ctx.lineTo(x + radii[3], y + h);\n    if (radii[3] !== 0) {\n        ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n    }\n    ctx.lineTo(x, y + radii[0]);\n    if (radii[0] !== 0) {\n        ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n    }\n}\n/**\n * Draws a rounded rect with a border.\n *\n * This function assumes that the colors will be solid, without\n * any alpha. (This allows us to fix a rendering artefact.)\n *\n * @param outerBorderRadius - The radius of the border (outer edge)\n */\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, outerBorderRadius = [0, 0, 0, 0], borderColor = '') {\n    ctx.save();\n    if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n        drawRoundRect(ctx, left, top, width, height, outerBorderRadius);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n        return;\n    }\n    const halfBorderWidth = borderWidth / 2;\n    const radii = changeBorderRadius(outerBorderRadius, -halfBorderWidth);\n    drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, radii);\n    if (backgroundColor !== 'transparent') {\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n    }\n    if (borderColor !== 'transparent') {\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = borderColor;\n        ctx.closePath();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    const gradient = ctx.createLinearGradient(0, 0, 0, h);\n    gradient.addColorStop(0, topColor);\n    gradient.addColorStop(1, bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\n\nclass PriceAxisViewRenderer {\n    constructor(data, commonData) {\n        this._internal_setData(data, commonData);\n    }\n    _internal_setData(data, commonData) {\n        this._private__data = data;\n        this._private__commonData = commonData;\n    }\n    _internal_height(rendererOptions, useSecondLine) {\n        if (!this._private__data._internal_visible) {\n            return 0;\n        }\n        return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n    }\n    _internal_draw(target, rendererOptions, textWidthCache, align) {\n        if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textColor = this._private__data._internal_color;\n        const backgroundColor = this._private__commonData._internal_background;\n        const geometry = target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            ctx.font = rendererOptions._internal_font;\n            const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n            const gb = geom._internal_bitmap;\n            /*\n             draw label. backgroundColor will always be a solid color (no alpha) [see generateContrastColors in color.ts].\n             Therefore we can draw the rounded label using simplified code (drawRoundRectWithBorder) that doesn't need to ensure the background and the border don't overlap.\n            */\n            if (geom._internal_alignRight) {\n                drawRoundRectWithBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, backgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], backgroundColor);\n            }\n            else {\n                drawRoundRectWithBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, backgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], backgroundColor);\n            }\n            // draw tick\n            if (this._private__data._internal_tickVisible) {\n                ctx.fillStyle = textColor;\n                ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n            }\n            // draw separator\n            if (this._private__data._internal_borderVisible) {\n                ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n                ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n            }\n            return geom;\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const gm = geometry._internal_media;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = textColor;\n            ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n        });\n    }\n    _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n        const { context: ctx, bitmapSize, mediaSize, horizontalPixelRatio, verticalPixelRatio } = scope;\n        const tickSize = (this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick) ? rendererOptions._internal_tickLength : 0;\n        const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n        const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n        const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n        const paddingInner = rendererOptions._internal_paddingInner;\n        const paddingOuter = rendererOptions._internal_paddingOuter;\n        const text = this._private__data._internal_text;\n        const actualTextHeight = rendererOptions._internal_fontSize;\n        const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n        const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n        const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n        const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n        const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n        let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n        if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n            totalHeightBitmap += 1;\n        }\n        const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n        const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n        // tick overlaps scale border\n        const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n        const yMid = this._private__commonData._internal_fixedCoordinate ?? this._private__commonData._internal_coordinate;\n        const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n        const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n        const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n        const alignRight = align === 'right';\n        const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n        const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n        let xOutsideBitmap;\n        let xTickBitmap;\n        let xText;\n        if (alignRight) {\n            // 2               1\n            //\n            //              6  5\n            //\n            // 3               4\n            xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n            xTickBitmap = xInsideBitmap - tickSizeBitmap;\n            xText = xInside - tickSize - paddingInner - horzBorder;\n        }\n        else {\n            // 1               2\n            //\n            // 6  5\n            //\n            // 4               3\n            xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n            xTickBitmap = xInsideBitmap + tickSizeBitmap;\n            xText = xInside + tickSize + paddingInner;\n        }\n        return {\n            _internal_alignRight: alignRight,\n            _internal_bitmap: {\n                _internal_yTop: yTopBitmap,\n                _internal_yMid: yMidBitmap,\n                _internal_yBottom: yBottomBitmap,\n                _internal_totalWidth: totalWidthBitmap,\n                _internal_totalHeight: totalHeightBitmap,\n                // TODO: it is better to have different horizontal and vertical radii\n                _internal_radius: 2 * horizontalPixelRatio,\n                _internal_horzBorder: horzBorderBitmap,\n                _internal_xOutside: xOutsideBitmap,\n                _internal_xInside: xInsideBitmap,\n                _internal_xTick: xTickBitmap,\n                _internal_tickHeight: tickHeightBitmap,\n                _internal_right: bitmapSize.width,\n            },\n            _internal_media: {\n                _internal_yTop: yTopBitmap / verticalPixelRatio,\n                _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n                _internal_xText: xText,\n                _internal_textMidCorrection: textMidCorrection,\n            },\n        };\n    }\n}\n\nclass PriceAxisView {\n    constructor(ctor) {\n        this._private__commonRendererData = {\n            _internal_coordinate: 0,\n            _internal_background: '#000',\n            _internal_additionalPaddingBottom: 0,\n            _internal_additionalPaddingTop: 0,\n        };\n        this._private__axisRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: true,\n            _internal_moveTextToInvisibleTick: false,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: false,\n            _internal_separatorVisible: false,\n        };\n        this._private__paneRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: false,\n            _internal_moveTextToInvisibleTick: true,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: true,\n            _internal_separatorVisible: true,\n        };\n        this._private__invalidated = true;\n        this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n    }\n    _internal_text() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_text;\n    }\n    _internal_coordinate() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__commonRendererData._internal_coordinate;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_height(rendererOptions, useSecondLine = false) {\n        return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n    }\n    _internal_getFixedCoordinate() {\n        return this._private__commonRendererData._internal_fixedCoordinate || 0;\n    }\n    _internal_setFixedCoordinate(value) {\n        this._private__commonRendererData._internal_fixedCoordinate = value;\n    }\n    _internal_isVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n    }\n    _internal_isAxisLabelVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible;\n    }\n    _internal_renderer(priceScale) {\n        this._private__updateRendererDataIfNeeded();\n        // force update tickVisible state from price scale options\n        // because we don't have and we can't have price axis in other methods\n        // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n        this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__axisRenderer;\n    }\n    _internal_paneRenderer() {\n        this._private__updateRendererDataIfNeeded();\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__paneRenderer;\n    }\n    _private__updateRendererDataIfNeeded() {\n        if (this._private__invalidated) {\n            this._private__axisRendererData._internal_tickVisible = true;\n            this._private__paneRendererData._internal_tickVisible = false;\n            this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n        }\n    }\n}\n\nclass CrosshairPriceAxisView extends PriceAxisView {\n    constructor(source, priceScale, valueProvider) {\n        super();\n        this._private__source = source;\n        this._private__priceScale = priceScale;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__source._internal_options().horzLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || (firstValue === null)) {\n            return;\n        }\n        const colors = this._private__priceScale._internal_colorParser()._internal_generateContrastColors(options.labelBackgroundColor);\n        commonRendererData._internal_background = colors._internal_background;\n        axisRendererData._internal_color = colors._internal_foreground;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        const value = this._private__valueProvider(this._private__priceScale);\n        commonRendererData._internal_coordinate = value._internal_coordinate;\n        axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n        axisRendererData._internal_visible = true;\n    }\n}\n\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n    constructor() {\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_draw(target, rendererOptions) {\n        if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textWidth = target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = rendererOptions._internal_font;\n            return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n        });\n        if (textWidth <= 0) {\n            return;\n        }\n        const horzMargin = rendererOptions._internal_paddingHorizontal;\n        const labelWidth = textWidth + 2 * horzMargin;\n        const labelWidthHalf = labelWidth / 2;\n        const timeScaleWidth = this._private__data._internal_width;\n        let coordinate = this._private__data._internal_coordinate;\n        let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (x1 < 0) {\n            coordinate = coordinate + Math.abs(0 - x1);\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        else if (x1 + labelWidth > timeScaleWidth) {\n            coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        const x2 = x1 + labelWidth;\n        const y1 = 0;\n        const y2 = Math.ceil(y1 +\n            rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingBottom);\n        target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n            const data = ensureNotNull(this._private__data);\n            ctx.fillStyle = data._internal_background;\n            const x1scaled = Math.round(x1 * horizontalPixelRatio);\n            const y1scaled = Math.round(y1 * verticalPixelRatio);\n            const x2scaled = Math.round(x2 * horizontalPixelRatio);\n            const y2scaled = Math.round(y2 * verticalPixelRatio);\n            const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n            ctx.beginPath();\n            ctx.moveTo(x1scaled, y1scaled);\n            ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n            ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n            ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n            ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n            ctx.lineTo(x2scaled, y1scaled);\n            ctx.fill();\n            if (data._internal_tickVisible) {\n                const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n                const tickTop = y1scaled;\n                const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n                ctx.fillStyle = data._internal_color;\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n            }\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const data = ensureNotNull(this._private__data);\n            const yText = y1 +\n                rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = data._internal_color;\n            const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n            ctx.translate(x1 + horzMargin, yText + textYCorrection);\n            ctx.fillText(data._internal_text, 0, 0);\n        });\n    }\n}\n\nclass CrosshairTimeAxisView {\n    constructor(crosshair, model, valueProvider) {\n        this._private__invalidated = true;\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_background: '#4c525e',\n            _internal_color: 'white',\n            _internal_text: '',\n            _internal_width: 0,\n            _internal_coordinate: NaN,\n            _internal_tickVisible: true,\n        };\n        this._private__crosshair = crosshair;\n        this._private__model = model;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        this._private__renderer._internal_setData(this._private__rendererData);\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const data = this._private__rendererData;\n        data._internal_visible = false;\n        if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__crosshair._internal_options().vertLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        data._internal_width = timeScale._internal_width();\n        const value = this._private__valueProvider();\n        if (value === null) {\n            return;\n        }\n        data._internal_coordinate = value._internal_coordinate;\n        const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n        data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n        data._internal_visible = true;\n        const colors = this._private__model._internal_colorParser()._internal_generateContrastColors(options.labelBackgroundColor);\n        data._internal_background = colors._internal_background;\n        data._internal_color = colors._internal_foreground;\n        data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n    }\n}\n\nclass DataSource {\n    constructor() {\n        this._internal__priceScale = null;\n        this._private__zorder = 0;\n    }\n    _internal_zorder() {\n        return this._private__zorder;\n    }\n    _internal_setZorder(zorder) {\n        this._private__zorder = zorder;\n    }\n    _internal_priceScale() {\n        return this._internal__priceScale;\n    }\n    _internal_setPriceScale(priceScale) {\n        this._internal__priceScale = priceScale;\n    }\n    _internal_labelPaneViews(pane) {\n        return [];\n    }\n    _internal_timeAxisViews() {\n        return [];\n    }\n    _internal_visible() {\n        return true;\n    }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n    /**\n     * This mode allows crosshair to move freely on the chart.\n     */\n    CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n    /**\n     * This mode disables rendering of the crosshair.\n     */\n    CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__pane = null;\n        this._private__price = NaN;\n        this._private__index = 0;\n        this._private__visible = true;\n        this._private__priceAxisViews = new Map();\n        this._private__subscribed = false;\n        this._private__crosshairPaneViewCache = new WeakMap();\n        this._private__markersPaneViewCache = new WeakMap();\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n        this._private__model = model;\n        this._private__options = options;\n        const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n            return (priceScale) => {\n                const coordinate = rawCoordinateProvider();\n                const rawPrice = rawPriceProvider();\n                if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n                    // price must be defined\n                    return { _internal_price: rawPrice, _internal_coordinate: coordinate };\n                }\n                else {\n                    // always convert from coordinate\n                    const firstValue = ensureNotNull(priceScale._internal_firstValue());\n                    const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n                    return { _internal_price: price, _internal_coordinate: coordinate };\n                }\n            };\n        };\n        const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n            return () => {\n                const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n                const coordinate = rawCoordinateProvider();\n                if (!time || !Number.isFinite(coordinate)) {\n                    return null;\n                }\n                return {\n                    _internal_time: time,\n                    _internal_coordinate: coordinate,\n                };\n            };\n        };\n        // for current position always return both price and coordinate\n        this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n        const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n        this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_saveOriginCoord(x, y) {\n        this._private__originX = x;\n        this._private__originY = y;\n    }\n    _internal_clearOriginCoord() {\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n    }\n    _internal_originCoordX() {\n        return this._private__originX;\n    }\n    _internal_originCoordY() {\n        return this._private__originY;\n    }\n    _internal_setPosition(index, price, pane) {\n        if (!this._private__subscribed) {\n            this._private__subscribed = true;\n        }\n        this._private__visible = true;\n        this._private__tryToUpdateViews(index, price, pane);\n    }\n    _internal_appliedIndex() {\n        return this._private__index;\n    }\n    _internal_appliedX() {\n        return this._private__x;\n    }\n    _internal_appliedY() {\n        return this._private__y;\n    }\n    _internal_visible() {\n        return this._private__visible;\n    }\n    _internal_clearPosition() {\n        this._private__visible = false;\n        this._private__setIndexToLastSeriesBarIndex();\n        this._private__price = NaN;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__pane = null;\n        this._internal_clearOriginCoord();\n        this._internal_updateAllViews();\n    }\n    _internal_paneViews(pane) {\n        let crosshairPaneView = this._private__crosshairPaneViewCache.get(pane);\n        if (!crosshairPaneView) {\n            crosshairPaneView = new CrosshairPaneView(this, pane);\n            this._private__crosshairPaneViewCache.set(pane, crosshairPaneView);\n        }\n        let markersPaneView = this._private__markersPaneViewCache.get(pane);\n        if (!markersPaneView) {\n            markersPaneView = new CrosshairMarksPaneView(this._private__model, this, pane);\n            this._private__markersPaneViewCache.set(pane, markersPaneView);\n        }\n        return [crosshairPaneView, markersPaneView];\n    }\n    _internal_horzLineVisible(pane) {\n        return pane === this._private__pane && this._private__options.horzLine.visible;\n    }\n    _internal_vertLineVisible() {\n        return this._private__options.vertLine.visible;\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (!this._private__visible || this._private__pane !== pane) {\n            this._private__priceAxisViews.clear();\n        }\n        const views = [];\n        if (this._private__pane === pane) {\n            views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n        }\n        return views;\n    }\n    _internal_timeAxisViews() {\n        return this._private__visible ? [this._private__timeAxisView] : [];\n    }\n    _internal_pane() {\n        return this._private__pane;\n    }\n    _internal_updateAllViews() {\n        this._private__model._internal_panes().forEach((pane) => {\n            this._private__crosshairPaneViewCache.get(pane)?._internal_update();\n            this._private__markersPaneViewCache.get(pane)?._internal_update();\n        });\n        this._private__priceAxisViews.forEach((value) => value._internal_update());\n        this._private__timeAxisView._internal_update();\n    }\n    _private__priceScaleByPane(pane) {\n        if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n            return pane._internal_defaultPriceScale();\n        }\n        return null;\n    }\n    _private__tryToUpdateViews(index, price, pane) {\n        if (this._private__tryToUpdateData(index, price, pane)) {\n            this._internal_updateAllViews();\n        }\n    }\n    _private__tryToUpdateData(newIndex, newPrice, newPane) {\n        const oldX = this._private__x;\n        const oldY = this._private__y;\n        const oldPrice = this._private__price;\n        const oldIndex = this._private__index;\n        const oldPane = this._private__pane;\n        const priceScale = this._private__priceScaleByPane(newPane);\n        this._private__index = newIndex;\n        this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n        this._private__pane = newPane;\n        const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n        if (priceScale !== null && firstValue !== null) {\n            this._private__price = newPrice;\n            this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n        }\n        else {\n            this._private__price = NaN;\n            this._private__y = NaN;\n        }\n        return (oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index ||\n            oldPrice !== this._private__price || oldPane !== this._private__pane);\n    }\n    _private__setIndexToLastSeriesBarIndex() {\n        const lastIndexes = this._private__model._internal_serieses()\n            .map((s) => s._internal_bars()._internal_lastIndex())\n            .filter(notNull);\n        const lastBarIndex = (lastIndexes.length === 0) ? null : Math.max(...lastIndexes);\n        this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n    }\n    _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n        let view = map.get(priceScale);\n        if (view === undefined) {\n            view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n            map.set(priceScale, view);\n        }\n        return view;\n    }\n}\n\nfunction isDefaultPriceScale(priceScaleId) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n    if (beforeValue === undefined) {\n        return newValue;\n    }\n    const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n    const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n    return { _internal_level: level, _internal_autoScale: autoScale };\n}\nclass InvalidateMask {\n    constructor(globalLevel) {\n        this._private__invalidatedPanes = new Map();\n        this._private__timeScaleInvalidations = [];\n        this._private__globalLevel = globalLevel;\n    }\n    _internal_invalidatePane(paneIndex, invalidation) {\n        const prevValue = this._private__invalidatedPanes.get(paneIndex);\n        const newValue = mergePaneInvalidation(prevValue, invalidation);\n        this._private__invalidatedPanes.set(paneIndex, newValue);\n    }\n    _internal_fullInvalidation() {\n        return this._private__globalLevel;\n    }\n    _internal_invalidateForPane(paneIndex) {\n        const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n        if (paneInvalidation === undefined) {\n            return {\n                _internal_level: this._private__globalLevel,\n            };\n        }\n        return {\n            _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n            _internal_autoScale: paneInvalidation._internal_autoScale,\n        };\n    }\n    _internal_setFitContent() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 0 /* TimeScaleInvalidationType.FitContent */ }];\n    }\n    _internal_applyRange(range) {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */, _internal_value: range }];\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 5 /* TimeScaleInvalidationType.Animation */, _internal_value: animation });\n    }\n    _internal_stopTimeScaleAnimation() {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */ });\n    }\n    _internal_resetTimeScale() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 4 /* TimeScaleInvalidationType.Reset */ }];\n    }\n    _internal_setBarSpacing(barSpacing) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */, _internal_value: barSpacing });\n    }\n    _internal_setRightOffset(offset) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */, _internal_value: offset });\n    }\n    _internal_timeScaleInvalidations() {\n        return this._private__timeScaleInvalidations;\n    }\n    _internal_merge(other) {\n        for (const tsInvalidation of other._private__timeScaleInvalidations) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation);\n        }\n        this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n        other._private__invalidatedPanes.forEach((invalidation, index) => {\n            this._internal_invalidatePane(index, invalidation);\n        });\n    }\n    static _internal_light() {\n        return new InvalidateMask(2 /* InvalidationLevel.Light */);\n    }\n    static _internal_full() {\n        return new InvalidateMask(3 /* InvalidationLevel.Full */);\n    }\n    _private__applyTimeScaleInvalidation(invalidation) {\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                this._internal_setFitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                this._internal_applyRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                this._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                this._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                this._internal_resetTimeScale();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                this._internal_setTimeScaleAnimation(invalidation._internal_value);\n                break;\n            case 6 /* TimeScaleInvalidationType.StopAnimation */:\n                this._private__removeTimeScaleAnimation();\n        }\n    }\n    _private__removeTimeScaleAnimation() {\n        const index = this._private__timeScaleInvalidations.findIndex((inv) => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n        if (index !== -1) {\n            this._private__timeScaleInvalidations.splice(index, 1);\n        }\n    }\n}\n\nconst formatterOptions = {\n    _internal_decimalSign: '.',\n    _internal_decimalSignFractional: '\\'',\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n    if (!isNumber(value)) {\n        return 'n/a';\n    }\n    if (!isInteger(length)) {\n        throw new TypeError('invalid length');\n    }\n    if (length < 0 || length > 16) {\n        throw new TypeError('invalid length');\n    }\n    if (length === 0) {\n        return value.toString();\n    }\n    const dummyString = '0000000000000000';\n    return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n    constructor(priceScale, minMove) {\n        if (!minMove) {\n            minMove = 1;\n        }\n        if (!isNumber(priceScale) || !isInteger(priceScale)) {\n            priceScale = 100;\n        }\n        if (priceScale < 0) {\n            throw new TypeError('invalid base');\n        }\n        this._private__priceScale = priceScale;\n        this._private__minMove = minMove;\n        this._private__calculateDecimal();\n    }\n    format(price) {\n        // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n        // we should use it because it has the same width as plus sign +\n        const sign = price < 0 ? '\\u2212' : '';\n        price = Math.abs(price);\n        return sign + this._private__formatAsDecimal(price);\n    }\n    _private__calculateDecimal() {\n        // check if this._base is power of 10\n        // for double fractional _fractionalLength if for the main fractional only\n        this._internal__fractionalLength = 0;\n        if (this._private__priceScale > 0 && this._private__minMove > 0) {\n            let base = this._private__priceScale;\n            while (base > 1) {\n                base /= 10;\n                this._internal__fractionalLength++;\n            }\n        }\n    }\n    _private__formatAsDecimal(price) {\n        const base = this._private__priceScale / this._private__minMove;\n        let intPart = Math.floor(price);\n        let fracString = '';\n        const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n        if (base > 1) {\n            let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n            if (fracPart >= base) {\n                fracPart -= base;\n                intPart += 1;\n            }\n            fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n        }\n        else {\n            // should round int part to min move\n            intPart = Math.round(intPart * base) / base;\n            // if min move > 1, fractional part is always = 0\n            if (fracLength > 0) {\n                fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n            }\n        }\n        return intPart.toFixed(0) + fracString;\n    }\n}\n\nclass PercentageFormatter extends PriceFormatter {\n    constructor(priceScale = 100) {\n        super(priceScale);\n    }\n    format(price) {\n        return `${super.format(price)}%`;\n    }\n}\n\nclass VolumeFormatter {\n    constructor(precision) {\n        this._private__precision = precision;\n    }\n    format(vol) {\n        let sign = '';\n        if (vol < 0) {\n            sign = '-';\n            vol = -vol;\n        }\n        if (vol < 995) {\n            return sign + this._private__formatNumber(vol);\n        }\n        else if (vol < 999995) {\n            return sign + this._private__formatNumber(vol / 1000) + 'K';\n        }\n        else if (vol < 999999995) {\n            vol = 1000 * Math.round(vol / 1000);\n            return sign + this._private__formatNumber(vol / 1000000) + 'M';\n        }\n        else {\n            vol = 1000000 * Math.round(vol / 1000000);\n            return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n        }\n    }\n    _private__formatNumber(value) {\n        let res;\n        const priceScale = Math.pow(10, this._private__precision);\n        value = Math.round(value * priceScale) / priceScale;\n        if (value >= 1e-15 && value < 1) {\n            res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n        }\n        else {\n            res = String(value);\n        }\n        return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n    }\n}\n\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n    constructor(size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n        this._private__cache = new Map();\n        this._private__maxSize = size;\n    }\n    _internal_reset() {\n        this._private__actualSize = 0;\n        this._private__cache.clear();\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n    }\n    _internal_measureText(ctx, text, optimizationReplacementRe) {\n        return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n    }\n    _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n        const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n        // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n        return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n    }\n    _private__getMetrics(ctx, text, optimizationReplacementRe) {\n        const re = optimizationReplacementRe || defaultReplacementRe;\n        const cacheString = String(text).replace(re, '0');\n        if (this._private__cache.has(cacheString)) {\n            return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n            delete this._private__tick2Labels[this._private__oldestTick];\n            this._private__cache.delete(oldestValue);\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        ctx.save();\n        ctx.textBaseline = 'middle';\n        const metrics = ctx.measureText(cacheString);\n        ctx.restore();\n        if (metrics.width === 0 && !!text.length) {\n            // measureText can return 0 in FF depending on a canvas size, don't cache it\n            return metrics;\n        }\n        this._private__cache.set(cacheString, { _internal_metrics: metrics, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels[this._private__usageTick] = cacheString;\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return metrics;\n    }\n}\n\nclass PanePriceAxisViewRenderer {\n    constructor(textWidthCache) {\n        this._private__priceAxisViewRenderer = null;\n        this._private__rendererOptions = null;\n        this._private__align = 'right';\n        this._private__textWidthCache = textWidthCache;\n    }\n    _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n        this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n        this._private__rendererOptions = rendererOptions;\n        this._private__align = align;\n    }\n    _internal_draw(target) {\n        if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n            return;\n        }\n        this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n    }\n}\nclass PanePriceAxisView {\n    constructor(priceAxisView, dataSource, chartModel) {\n        this._private__priceAxisView = priceAxisView;\n        this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n        this._private__dataSource = dataSource;\n        this._private__chartModel = chartModel;\n        this._private__fontSize = -1;\n        this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n    }\n    _internal_renderer() {\n        const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n        if (pane === null) {\n            return null;\n        }\n        // this price scale will be used to find label placement only (left, right, none)\n        const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n        if (priceScale === null) {\n            return null;\n        }\n        const position = pane._internal_priceScalePosition(priceScale);\n        if (position === 'overlay') {\n            return null;\n        }\n        const options = this._private__chartModel._internal_priceAxisRendererOptions();\n        if (options._internal_fontSize !== this._private__fontSize) {\n            this._private__fontSize = options._internal_fontSize;\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n        return this._private__renderer;\n    }\n}\n\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_hitTest(x, y) {\n        if (!this._private__data?._internal_visible) {\n            return null;\n        }\n        const { _internal_y: itemY, _internal_lineWidth: lineWidth, _internal_externalId: externalId } = this._private__data;\n        // add a fixed area threshold around line (Y + width) for hit test\n        if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n            return {\n                _internal_hitTestData: this._private__data,\n                _internal_externalId: externalId,\n            };\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        if (this._private__data._internal_visible === false) {\n            return;\n        }\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        if (y < 0 || y > bitmapSize.height) {\n            return;\n        }\n        ctx.lineCap = 'butt';\n        ctx.strokeStyle = this._private__data._internal_color;\n        ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n        setLineStyle(ctx, this._private__data._internal_lineStyle);\n        drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n}\n\nclass SeriesHorizontalLinePaneView {\n    constructor(series) {\n        this._internal__lineRendererData = {\n            _internal_y: 0,\n            _internal_color: 'rgba(0, 0, 0, 0)',\n            _internal_lineWidth: 1,\n            _internal_lineStyle: 0 /* LineStyle.Solid */,\n            _internal_visible: false,\n        };\n        this._internal__lineRenderer = new HorizontalLineRenderer();\n        this._private__invalidated = true;\n        this._internal__series = series;\n        this._internal__model = series._internal_model();\n        this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._internal__lineRenderer;\n    }\n}\n\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        this._internal__lineRendererData._internal_visible = false;\n        const priceScale = this._internal__series._internal_priceScale();\n        const mode = priceScale._internal_mode()._internal_mode;\n        if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n            return;\n        }\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__lineRendererData._internal_visible = true;\n        this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n        this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n        this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n        this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n    }\n}\n\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_data() {\n        return this._private__data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        const data = this._private__data;\n        if (data === null) {\n            return;\n        }\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = data._internal_center.y * verticalPixelRatio;\n        ctx.fillStyle = data._internal_seriesLineColor;\n        ctx.beginPath();\n        // TODO: it is better to have different horizontal and vertical radii\n        const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n        ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.fillStyle = data._internal_fillColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = tickWidth;\n        ctx.strokeStyle = data._internal_strokeColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n    }\n}\n\nconst animationStagesData = [\n    {\n        _internal_start: 0,\n        _internal_end: 0.25 /* Constants.Stage1Period */,\n        _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n        _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n        _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n        _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n        _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */,\n    },\n];\nfunction radius(stage, startRadius, endRadius) {\n    return startRadius + (endRadius - startRadius) * stage;\n}\nclass SeriesLastPriceAnimationPaneView {\n    constructor(series) {\n        this._private__renderer = new SeriesLastPriceAnimationRenderer();\n        this._private__invalidated = true;\n        this._private__stageInvalidated = true;\n        this._private__startTime = performance.now();\n        this._private__endTime = this._private__startTime - 1;\n        this._private__series = series;\n    }\n    _internal_onDataCleared() {\n        this._private__endTime = this._private__startTime - 1;\n        this._internal_update();\n    }\n    _internal_onNewRealtimeDataReceived() {\n        this._internal_update();\n        if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n            const now = performance.now();\n            const timeToAnimationEnd = this._private__endTime - now;\n            if (timeToAnimationEnd > 0) {\n                if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n                    this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n                }\n                return;\n            }\n            this._private__startTime = now;\n            this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n        }\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_invalidateStage() {\n        this._private__stageInvalidated = true;\n    }\n    _internal_visible() {\n        // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n        return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n    }\n    _internal_animationActive() {\n        switch (this._private__series._internal_options().lastPriceAnimation) {\n            case 0 /* LastPriceAnimationMode.Disabled */:\n                return false;\n            case 1 /* LastPriceAnimationMode.Continuous */:\n                return true;\n            case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n                return performance.now() <= this._private__endTime;\n        }\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n            this._private__stageInvalidated = false;\n        }\n        else if (this._private__stageInvalidated) {\n            this._private__updateRendererDataStage();\n            this._private__stageInvalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        this._private__renderer._internal_setData(null);\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const visibleRange = timeScale._internal_visibleStrictRange();\n        const firstValue = this._private__series._internal_firstValue();\n        if (visibleRange === null || firstValue === null) {\n            return;\n        }\n        const lastValue = this._private__series._internal_lastValueData(true);\n        if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n            return;\n        }\n        const lastValuePoint = {\n            x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n            y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value),\n        };\n        const seriesLineColor = lastValue._internal_color;\n        const seriesLineWidth = this._private__series._internal_options().lineWidth;\n        const data = this._private__animationData(this._private__duration(), seriesLineColor);\n        this._private__renderer._internal_setData({\n            _internal_seriesLineColor: seriesLineColor,\n            _internal_seriesLineWidth: seriesLineWidth,\n            _internal_fillColor: data._internal_fillColor,\n            _internal_strokeColor: data._internal_strokeColor,\n            _internal_radius: data._internal_radius,\n            _internal_center: lastValuePoint,\n        });\n    }\n    _private__updateRendererDataStage() {\n        const rendererData = this._private__renderer._internal_data();\n        if (rendererData !== null) {\n            const data = this._private__animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n            rendererData._internal_fillColor = data._internal_fillColor;\n            rendererData._internal_strokeColor = data._internal_strokeColor;\n            rendererData._internal_radius = data._internal_radius;\n        }\n    }\n    _private__duration() {\n        return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n    }\n    _private__color(seriesLineColor, stage, startAlpha, endAlpha) {\n        const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n        return this._private__series._internal_model()._internal_colorParser()._internal_applyAlpha(seriesLineColor, alpha);\n    }\n    _private__animationData(durationSinceStart, lineColor) {\n        const globalStage = (durationSinceStart % 2600 /* Constants.AnimationPeriod */) / 2600 /* Constants.AnimationPeriod */;\n        let currentStageData;\n        for (const stageData of animationStagesData) {\n            if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n                currentStageData = stageData;\n                break;\n            }\n        }\n        assert(currentStageData !== undefined, 'Last price animation internal logic error');\n        const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n        return {\n            _internal_fillColor: this._private__color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n            _internal_strokeColor: this._private__color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n            _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius),\n        };\n    }\n}\n\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = lastValueData._internal_coordinate;\n        data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n        data._internal_lineWidth = seriesOptions.priceLineWidth;\n        data._internal_lineStyle = seriesOptions.priceLineStyle;\n    }\n}\n\nclass SeriesPriceAxisView extends PriceAxisView {\n    constructor(source) {\n        super();\n        this._private__source = source;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const source = this._private__source;\n        if (!source._internal_visible()) {\n            return;\n        }\n        const seriesOptions = source._internal_options();\n        const showSeriesLastValue = seriesOptions.lastValueVisible;\n        const showSymbolLabel = source._internal_title() !== '';\n        const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n        const lastValueData = source._internal_lastValueData(false);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        if (showSeriesLastValue) {\n            axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n            axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n        }\n        if (showSymbolLabel || showPriceAndPercentage) {\n            paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n            paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n        }\n        const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n        const colors = this._private__source._internal_model()._internal_colorParser()._internal_generateContrastColors(lastValueColor);\n        commonRendererData._internal_background = colors._internal_background;\n        commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n        paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n        axisRendererData._internal_borderColor = lastValueColor;\n        axisRendererData._internal_color = colors._internal_foreground;\n        paneRendererData._internal_color = colors._internal_foreground;\n    }\n    _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n        let result = '';\n        const title = this._private__source._internal_title();\n        if (showSymbolLabel && title.length !== 0) {\n            result += `${title} `;\n        }\n        if (showSeriesLastValue && showPriceAndPercentage) {\n            result += this._private__source._internal_priceScale()._internal_isPercentage() ?\n                lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n        }\n        return result.trim();\n    }\n    _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n        if (!showSeriesLastValue) {\n            return '';\n        }\n        if (!showPriceAndPercentage) {\n            return lastValueData._internal_text;\n        }\n        return this._private__source._internal_priceScale()._internal_isPercentage() ?\n            lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n    }\n}\n\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n    const firstFinite = Number.isFinite(valueOne);\n    const secondFinite = Number.isFinite(valueTwo);\n    if (firstFinite && secondFinite) {\n        return method(valueOne, valueTwo);\n    }\n    return !firstFinite && !secondFinite ? fallback : (firstFinite ? valueOne : valueTwo);\n}\nclass PriceRangeImpl {\n    constructor(minValue, maxValue) {\n        this._private__minValue = minValue;\n        this._private__maxValue = maxValue;\n    }\n    _internal_equals(pr) {\n        if (pr === null) {\n            return false;\n        }\n        return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n    }\n    _internal_clone() {\n        return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n    }\n    _internal_minValue() {\n        return this._private__minValue;\n    }\n    _internal_maxValue() {\n        return this._private__maxValue;\n    }\n    _internal_length() {\n        return this._private__maxValue - this._private__minValue;\n    }\n    _internal_isEmpty() {\n        return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n    }\n    _internal_merge(anotherRange) {\n        if (anotherRange === null) {\n            return this;\n        }\n        return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n    }\n    _internal_scaleAroundCenter(coeff) {\n        if (!isNumber(coeff)) {\n            return;\n        }\n        const delta = this._private__maxValue - this._private__minValue;\n        if (delta === 0) {\n            return;\n        }\n        const center = (this._private__maxValue + this._private__minValue) * 0.5;\n        let maxDelta = this._private__maxValue - center;\n        let minDelta = this._private__minValue - center;\n        maxDelta *= coeff;\n        minDelta *= coeff;\n        this._private__maxValue = center + maxDelta;\n        this._private__minValue = center + minDelta;\n    }\n    _internal_shift(delta) {\n        if (!isNumber(delta)) {\n            return;\n        }\n        this._private__maxValue += delta;\n        this._private__minValue += delta;\n    }\n    _internal_toRaw() {\n        return {\n            minValue: this._private__minValue,\n            maxValue: this._private__maxValue,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n    }\n}\n\nclass AutoscaleInfoImpl {\n    constructor(priceRange, margins) {\n        this._private__priceRange = priceRange;\n        this._private__margins = margins || null;\n    }\n    _internal_priceRange() {\n        return this._private__priceRange;\n    }\n    _internal_margins() {\n        return this._private__margins;\n    }\n    _internal_toRaw() {\n        return {\n            priceRange: this._private__priceRange === null ? null : this._private__priceRange._internal_toRaw(),\n            margins: this._private__margins || undefined,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n    }\n}\n\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    constructor(series, priceLine) {\n        super(series);\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const lineOptions = this._private__priceLine._internal_options();\n        if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = y;\n        data._internal_color = lineOptions.color;\n        data._internal_lineWidth = lineOptions.lineWidth;\n        data._internal_lineStyle = lineOptions.lineStyle;\n        data._internal_externalId = this._private__priceLine._internal_options().id;\n    }\n}\n\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n    constructor(series, priceLine) {\n        super();\n        this._private__series = series;\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const options = this._private__priceLine._internal_options();\n        const labelVisible = options.axisLabelVisible;\n        const showPaneLabel = options.title !== '';\n        const series = this._private__series;\n        if (!labelVisible || !series._internal_visible()) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        if (showPaneLabel) {\n            paneRendererData._internal_text = options.title;\n            paneRendererData._internal_visible = true;\n        }\n        paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n        axisRendererData._internal_text = this._private__formatPrice(options.price);\n        axisRendererData._internal_visible = true;\n        const colors = this._private__series._internal_model()._internal_colorParser()._internal_generateContrastColors(options.axisLabelColor || options.color);\n        commonData._internal_background = colors._internal_background;\n        const textColor = options.axisLabelTextColor || colors._internal_foreground;\n        axisRendererData._internal_color = textColor; // price text\n        paneRendererData._internal_color = textColor; // title text\n        commonData._internal_coordinate = y;\n    }\n    _private__formatPrice(price) {\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return '';\n        }\n        return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n    }\n}\n\nclass CustomPriceLine {\n    constructor(series, options) {\n        this._private__series = series;\n        this._private__options = options;\n        this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n        this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n        this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_update();\n        this._private__series._internal_model()._internal_lightUpdate();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneView() {\n        return this._private__priceLineView;\n    }\n    _internal_labelPaneView() {\n        return this._private__panePriceAxisView;\n    }\n    _internal_priceAxisView() {\n        return this._private__priceAxisView;\n    }\n    _internal_update() {\n        this._private__priceLineView._internal_update();\n        this._private__priceAxisView._internal_update();\n    }\n    _internal_yCoord() {\n        const series = this._private__series;\n        const priceScale = series._internal_priceScale();\n        const timeScale = series._internal_model()._internal_timeScale();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return null;\n        }\n        const firstValue = series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n    }\n}\n\nclass PriceDataSource extends DataSource {\n    constructor(model) {\n        super();\n        this._private__model = model;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n}\n\nconst barStyleFnMap = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n        const upColor = barStyle.upColor;\n        const downColor = barStyle.downColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: currentBar._internal_color ?? (isUp ? upColor : downColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n        const upColor = candlestickStyle.upColor;\n        const downColor = candlestickStyle.downColor;\n        const borderUpColor = candlestickStyle.borderUpColor;\n        const borderDownColor = candlestickStyle.borderDownColor;\n        const wickUpColor = candlestickStyle.wickUpColor;\n        const wickDownColor = candlestickStyle.wickDownColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: currentBar._internal_color ?? (isUp ? upColor : downColor),\n            _internal_barBorderColor: currentBar._internal_borderColor ?? (isUp ? borderUpColor : borderDownColor),\n            _internal_barWickColor: currentBar._internal_wickColor ?? (isUp ? wickUpColor : wickDownColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_color ?? customStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_lineColor ?? areaStyle.lineColor,\n            _internal_lineColor: currentBar._internal_lineColor ?? areaStyle.lineColor,\n            _internal_topColor: currentBar._internal_topColor ?? areaStyle.topColor,\n            _internal_bottomColor: currentBar._internal_bottomColor ?? areaStyle.bottomColor,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n        return {\n            _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n            _internal_topLineColor: currentBar._internal_topLineColor ?? baselineStyle.topLineColor,\n            _internal_bottomLineColor: currentBar._internal_bottomLineColor ?? baselineStyle.bottomLineColor,\n            _internal_topFillColor1: currentBar._internal_topFillColor1 ?? baselineStyle.topFillColor1,\n            _internal_topFillColor2: currentBar._internal_topFillColor2 ?? baselineStyle.topFillColor2,\n            _internal_bottomFillColor1: currentBar._internal_bottomFillColor1 ?? baselineStyle.bottomFillColor1,\n            _internal_bottomFillColor2: currentBar._internal_bottomFillColor2 ?? baselineStyle.bottomFillColor2,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_color ?? lineStyle.color,\n            _internal_lineColor: currentBar._internal_color ?? lineStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: currentBar._internal_color ?? histogramStyle.color,\n        };\n    },\n};\nclass SeriesBarColorer {\n    constructor(series) {\n        this._private__findBar = (barIndex, precomputedBars) => {\n            if (precomputedBars !== undefined) {\n                return precomputedBars._internal_value;\n            }\n            return this._private__series._internal_bars()._internal_valueAt(barIndex);\n        };\n        this._private__series = series;\n        this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n    }\n    _internal_barStyle(barIndex, precomputedBars) {\n        // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n        // Used to avoid binary search if bars are already known\n        return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n    }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (compare(arr[mid], value) === lower) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n    /**\n     * Search the nearest left item\n     */\n    MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n    /**\n     * Do not search\n     */\n    MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Search the nearest right item\n     */\n    MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n    constructor() {\n        this._private__items = [];\n        this._private__minMaxCache = new Map();\n        this._private__rowSearchCache = new Map();\n        this._private__indices = [];\n    }\n    // @returns Last row\n    _internal_last() {\n        return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n    }\n    _internal_firstIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n    }\n    _internal_lastIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt((this._private__items.length - 1)) : null;\n    }\n    _internal_size() {\n        return this._private__items.length;\n    }\n    _internal_isEmpty() {\n        return this._internal_size() === 0;\n    }\n    _internal_contains(index) {\n        return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n    }\n    _internal_valueAt(index) {\n        return this._internal_search(index);\n    }\n    _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n        const pos = this._private__search(index, searchMode);\n        if (pos === null) {\n            return null;\n        }\n        return {\n            ...this._private__valueAt(pos),\n            _internal_index: this._private__indexAt(pos),\n        };\n    }\n    _internal_rows() {\n        return this._private__items;\n    }\n    _internal_minMaxOnRangeCached(start, end, plots) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        for (const plot of plots) {\n            const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n    _internal_setData(plotRows) {\n        this._private__rowSearchCache.clear();\n        this._private__minMaxCache.clear();\n        this._private__items = plotRows;\n        this._private__indices = plotRows.map((plotRow) => plotRow._internal_index);\n    }\n    // TimePointIndex values for fulfilled data points\n    _internal_indices() {\n        return this._private__indices;\n    }\n    _private__indexAt(offset) {\n        return this._private__items[offset]._internal_index;\n    }\n    _private__valueAt(offset) {\n        return this._private__items[offset];\n    }\n    _private__search(index, searchMode) {\n        const exactPos = this._private__bsearch(index);\n        if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n            switch (searchMode) {\n                case -1 /* MismatchDirection.NearestLeft */:\n                    return this._private__searchNearestLeft(index);\n                case 1 /* MismatchDirection.NearestRight */:\n                    return this._private__searchNearestRight(index);\n                default:\n                    throw new TypeError('Unknown search mode');\n            }\n        }\n        return exactPos;\n    }\n    _private__searchNearestLeft(index) {\n        let nearestLeftPos = this._private__lowerbound(index);\n        if (nearestLeftPos > 0) {\n            nearestLeftPos = nearestLeftPos - 1;\n        }\n        return (nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index) ? nearestLeftPos : null;\n    }\n    _private__searchNearestRight(index) {\n        const nearestRightPos = this._private__upperbound(index);\n        return (nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos)) ? nearestRightPos : null;\n    }\n    _private__bsearch(index) {\n        const start = this._private__lowerbound(index);\n        if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n            return start;\n        }\n        return null;\n    }\n    _private__lowerbound(index) {\n        return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n    }\n    _private__upperbound(index) {\n        return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n    }\n    _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n        let result = null;\n        for (let i = startIndex; i < endIndexExclusive; i++) {\n            const values = this._private__items[i]._internal_value;\n            const v = values[plotIndex];\n            if (Number.isNaN(v)) {\n                continue;\n            }\n            if (result === null) {\n                result = { _internal_min: v, _internal_max: v };\n            }\n            else {\n                if (v < result._internal_min) {\n                    result._internal_min = v;\n                }\n                if (v > result._internal_max) {\n                    result._internal_max = v;\n                }\n            }\n        }\n        return result;\n    }\n    _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        // assume that bar indexes only increase\n        const firstIndex = ensureNotNull(this._internal_firstIndex());\n        const lastIndex = ensureNotNull(this._internal_lastIndex());\n        const s = Math.max(start, firstIndex);\n        const e = Math.min(end, lastIndex);\n        const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n        const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n        {\n            const startIndex = this._private__lowerbound(s);\n            const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        let minMaxCache = this._private__minMaxCache.get(plotIndex);\n        if (minMaxCache === undefined) {\n            minMaxCache = new Map();\n            this._private__minMaxCache.set(plotIndex, minMaxCache);\n        }\n        // now go cached\n        for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n            const chunkIndex = Math.floor(c / CHUNK_SIZE);\n            let chunkMinMax = minMaxCache.get(chunkIndex);\n            if (chunkMinMax === undefined) {\n                const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n                const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n                chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n                minMaxCache.set(chunkIndex, chunkMinMax);\n            }\n            result = mergeMinMax(result, chunkMinMax);\n        }\n        // tail\n        {\n            const startIndex = this._private__lowerbound(cachedHigh);\n            const endIndex = this._private__upperbound(e); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n}\nfunction mergeMinMax(first, second) {\n    if (first === null) {\n        return second;\n    }\n    else {\n        if (second === null) {\n            return first;\n        }\n        else {\n            // merge MinMax values\n            const min = Math.min(first._internal_min, second._internal_min);\n            const max = Math.max(first._internal_max, second._internal_max);\n            return { _internal_min: min, _internal_max: max };\n        }\n    }\n}\n\nfunction createSeriesPlotList() {\n    return new PlotList();\n}\n\nclass PrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        this._private__baseRenderer.drawBackground?.(target);\n    }\n}\nclass PrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (this._private__cache?._internal_base === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new PrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        return this._private__paneView.zOrder?.() ?? 'normal';\n    }\n}\nclass PrimitiveWrapper {\n    constructor(primitive) {\n        this._private__paneViewsCache = null;\n        this._internal__primitive = primitive;\n    }\n    _internal_primitive() {\n        return this._internal__primitive;\n    }\n    _internal_updateAllViews() {\n        this._internal__primitive.updateAllViews?.();\n    }\n    _internal_paneViews() {\n        const base = this._internal__primitive.paneViews?.() ?? [];\n        if (this._private__paneViewsCache?._internal_base === base) {\n            return this._private__paneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new PrimitivePaneViewWrapper(pw));\n        this._private__paneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_hitTest(x, y) {\n        return this._internal__primitive.hitTest?.(x, y) ?? null;\n    }\n}\nlet PanePrimitiveWrapper$1 = class PanePrimitiveWrapper extends PrimitiveWrapper {\n    _internal_labelPaneViews() {\n        return [];\n    }\n};\n\nclass SeriesPrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        this._private__baseRenderer.drawBackground?.(target);\n    }\n}\nclass SeriesPrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (this._private__cache?._internal_base === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        return this._private__paneView.zOrder?.() ?? 'normal';\n    }\n}\nfunction getAxisViewData(baseView) {\n    return {\n        _internal_text: baseView.text(),\n        _internal_coordinate: baseView.coordinate(),\n        _internal_fixedCoordinate: baseView.fixedCoordinate?.(),\n        _internal_color: baseView.textColor(),\n        _internal_background: baseView.backColor(),\n        _internal_visible: baseView.visible?.() ?? true,\n        _internal_tickVisible: baseView.tickVisible?.() ?? true,\n    };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n    constructor(baseView, timeScale) {\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__baseView = baseView;\n        this._private__timeScale = timeScale;\n    }\n    _internal_renderer() {\n        this._private__renderer._internal_setData({\n            _internal_width: this._private__timeScale._internal_width(),\n            ...getAxisViewData(this._private__baseView),\n        });\n        return this._private__renderer;\n    }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n    constructor(baseView, priceScale) {\n        super();\n        this._private__baseView = baseView;\n        this._private__priceScale = priceScale;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        const data = getAxisViewData(this._private__baseView);\n        commonRendererData._internal_background = data._internal_background;\n        axisRendererData._internal_color = data._internal_color;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        commonRendererData._internal_coordinate = data._internal_coordinate;\n        commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n        axisRendererData._internal_text = data._internal_text;\n        axisRendererData._internal_visible = data._internal_visible;\n        axisRendererData._internal_tickVisible = data._internal_tickVisible;\n    }\n}\nclass SeriesPrimitiveWrapper extends PrimitiveWrapper {\n    constructor(primitive, series) {\n        super(primitive);\n        this._private__timeAxisViewsCache = null;\n        this._private__priceAxisViewsCache = null;\n        this._private__priceAxisPaneViewsCache = null;\n        this._private__timeAxisPaneViewsCache = null;\n        this._private__series = series;\n    }\n    _internal_timeAxisViews() {\n        const base = this._internal__primitive.timeAxisViews?.() ?? [];\n        if (this._private__timeAxisViewsCache?._internal_base === base) {\n            return this._private__timeAxisViewsCache._internal_wrapper;\n        }\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const wrapper = base.map((aw) => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n        this._private__timeAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisViews() {\n        const base = this._internal__primitive.priceAxisViews?.() ?? [];\n        if (this._private__priceAxisViewsCache?._internal_base === base) {\n            return this._private__priceAxisViewsCache._internal_wrapper;\n        }\n        const priceScale = this._private__series._internal_priceScale();\n        const wrapper = base.map((aw) => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n        this._private__priceAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisPaneViews() {\n        const base = this._internal__primitive.priceAxisPaneViews?.() ?? [];\n        if (this._private__priceAxisPaneViewsCache?._internal_base === base) {\n            return this._private__priceAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__priceAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisPaneViews() {\n        const base = this._internal__primitive.timeAxisPaneViews?.() ?? [];\n        if (this._private__timeAxisPaneViewsCache?._internal_base === base) {\n            return this._private__timeAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__timeAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        return (this._internal__primitive.autoscaleInfo?.(startTimePoint, endTimePoint) ?? null);\n    }\n}\n\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n    primitives.forEach((wrapper) => {\n        extractor(wrapper).forEach((paneView) => {\n            if (paneView._internal_zOrder() !== zOrder) {\n                return;\n            }\n            destination.push(paneView);\n        });\n    });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n    return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n    return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n    return wrapper._internal_timeAxisPaneViews();\n}\nconst lineBasedSeries = ['Area', 'Line', 'Baseline'];\nclass Series extends PriceDataSource {\n    constructor(model, seriesType, options, createPaneView, customPaneView) {\n        super(model);\n        this._private__data = createSeriesPlotList();\n        this._private__priceLineView = new SeriesPriceLinePaneView(this);\n        this._private__customPriceLines = [];\n        this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n        this._private__lastPriceAnimationPaneView = null;\n        this._private__barColorerCache = null;\n        this._private__animationTimeoutId = null;\n        this._private__primitives = [];\n        this._private__options = options;\n        this._private__seriesType = seriesType;\n        const priceAxisView = new SeriesPriceAxisView(this);\n        this._private__priceAxisViews = [priceAxisView];\n        this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n        if (lineBasedSeries.includes(this._private__seriesType)) {\n            this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n        }\n        this._private__recreateFormatter();\n        this._private__paneView = createPaneView(this, this._internal_model(), customPaneView);\n    }\n    _internal_destroy() {\n        if (this._private__animationTimeoutId !== null) {\n            clearTimeout(this._private__animationTimeoutId);\n        }\n    }\n    _internal_priceLineColor(lastBarColor) {\n        return this._private__options.priceLineColor || lastBarColor;\n    }\n    _internal_lastValueData(globalLast) {\n        const noDataRes = { _internal_noData: true };\n        const priceScale = this._internal_priceScale();\n        if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n            return noDataRes;\n        }\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        const firstValue = this._internal_firstValue();\n        if (visibleBars === null || firstValue === null) {\n            return noDataRes;\n        }\n        // find range of bars inside range\n        // TODO: make it more optimal\n        let bar;\n        let lastIndex;\n        if (globalLast) {\n            const lastBar = this._private__data._internal_last();\n            if (lastBar === null) {\n                return noDataRes;\n            }\n            bar = lastBar;\n            lastIndex = lastBar._internal_index;\n        }\n        else {\n            const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n            if (endBar === null) {\n                return noDataRes;\n            }\n            bar = this._private__data._internal_valueAt(endBar._internal_index);\n            if (bar === null) {\n                return noDataRes;\n            }\n            lastIndex = endBar._internal_index;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const barColorer = this._internal_barColorer();\n        const style = barColorer._internal_barStyle(lastIndex, { _internal_value: bar });\n        const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n        return {\n            _internal_noData: false,\n            _internal_price: price,\n            _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n            _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n            _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n            _internal_color: style._internal_barColor,\n            _internal_coordinate: coordinate,\n            _internal_index: lastIndex,\n        };\n    }\n    _internal_barColorer() {\n        if (this._private__barColorerCache !== null) {\n            return this._private__barColorerCache;\n        }\n        this._private__barColorerCache = new SeriesBarColorer(this);\n        return this._private__barColorerCache;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        const targetPriceScaleId = options.priceScaleId;\n        if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n            // series cannot do it itself, ask model\n            this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n        }\n        merge(this._private__options, options);\n        if (options.priceFormat !== undefined) {\n            this._private__recreateFormatter();\n            // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n            // thus we need to force the chart to do a full update to apply changes correctly\n            // full update is quite heavy operation in terms of performance\n            // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n            this._internal_model()._internal_fullUpdate();\n        }\n        this._internal_model()._internal_updateSource(this);\n        // a series might affect crosshair by some options (like crosshair markers)\n        // that's why we need to update crosshair as well\n        this._internal_model()._internal_updateCrosshair();\n        this._private__paneView._internal_update('options');\n    }\n    _internal_setData(data, updateInfo) {\n        this._private__data._internal_setData(data);\n        this._private__paneView._internal_update('data');\n        if (this._private__lastPriceAnimationPaneView !== null) {\n            if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n                this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n            }\n            else if (data.length === 0) {\n                this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n            }\n        }\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_createPriceLine(options) {\n        const result = new CustomPriceLine(this, options);\n        this._private__customPriceLines.push(result);\n        this._internal_model()._internal_updateSource(this);\n        return result;\n    }\n    _internal_removePriceLine(line) {\n        const index = this._private__customPriceLines.indexOf(line);\n        if (index !== -1) {\n            this._private__customPriceLines.splice(index, 1);\n        }\n        this._internal_model()._internal_updateSource(this);\n    }\n    _internal_priceLines() {\n        return this._private__customPriceLines;\n    }\n    _internal_seriesType() {\n        return this._private__seriesType;\n    }\n    _internal_firstValue() {\n        const bar = this._internal_firstBar();\n        if (bar === null) {\n            return null;\n        }\n        return {\n            _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_timePoint: bar._internal_time,\n        };\n    }\n    _internal_firstBar() {\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const startTimePoint = visibleBars._internal_left();\n        return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n    }\n    _internal_bars() {\n        return this._private__data;\n    }\n    _internal_dataAt(time) {\n        const prices = this._private__data._internal_valueAt(time);\n        if (prices === null) {\n            return null;\n        }\n        if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n            return {\n                _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n                _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n                _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n                _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */],\n            };\n        }\n        else {\n            return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n        }\n    }\n    _internal_topPaneViews(pane) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n        const animationPaneView = this._private__lastPriceAnimationPaneView;\n        if (animationPaneView === null || !animationPaneView._internal_visible()) {\n            return res;\n        }\n        if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n            this._private__animationTimeoutId = setTimeout(() => {\n                this._private__animationTimeoutId = null;\n                this._internal_model()._internal_cursorUpdate();\n            }, 0);\n        }\n        animationPaneView._internal_invalidateStage();\n        res.unshift(animationPaneView);\n        return res;\n    }\n    _internal_paneViews() {\n        const res = [];\n        if (!this._private__isOverlay()) {\n            res.push(this._private__baseHorizontalLineView);\n        }\n        res.push(this._private__paneView, this._private__priceLineView);\n        const priceLineViews = this._private__customPriceLines.map((line) => line._internal_paneView());\n        res.push(...priceLineViews);\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n        return res;\n    }\n    _internal_bottomPaneViews() {\n        return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n    }\n    _internal_pricePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n    }\n    _internal_timePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _internal_labelPaneViews() {\n        return [\n            this._private__panePriceAxisView,\n            ...this._private__customPriceLines.map((line) => line._internal_labelPaneView()),\n        ];\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n            return [];\n        }\n        const result = [...this._private__priceAxisViews];\n        for (const customPriceLine of this._private__customPriceLines) {\n            result.push(customPriceLine._internal_priceAxisView());\n        }\n        this._private__primitives.forEach((wrapper) => {\n            result.push(...wrapper._internal_priceAxisViews());\n        });\n        return result;\n    }\n    _internal_timeAxisViews() {\n        const res = [];\n        this._private__primitives.forEach((wrapper) => {\n            res.push(...wrapper._internal_timeAxisViews());\n        });\n        return res;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__options.autoscaleInfoProvider !== undefined) {\n            const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n                const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n                return (res === null) ? null : res._internal_toRaw();\n            });\n            return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n        }\n        return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n    }\n    _internal_minMove() {\n        return this._private__options.priceFormat.minMove;\n    }\n    _internal_formatter() {\n        return this._private__formatter;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n        for (const priceAxisView of this._private__priceAxisViews) {\n            priceAxisView._internal_update();\n        }\n        for (const customPriceLine of this._private__customPriceLines) {\n            customPriceLine._internal_update();\n        }\n        this._private__priceLineView._internal_update();\n        this._private__baseHorizontalLineView._internal_update();\n        this._private__lastPriceAnimationPaneView?._internal_update();\n        this._private__primitives.forEach((wrapper) => wrapper._internal_updateAllViews());\n    }\n    _internal_priceScale() {\n        return ensureNotNull(super._internal_priceScale());\n    }\n    _internal_markerDataAtIndex(index) {\n        const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') &&\n            this._private__options.crosshairMarkerVisible;\n        if (!getValue) {\n            return null;\n        }\n        const bar = this._private__data._internal_valueAt(index);\n        if (bar === null) {\n            return null;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const radius = this._private__markerRadius();\n        const borderColor = this._private__markerBorderColor();\n        const borderWidth = this._private__markerBorderWidth();\n        const backgroundColor = this._private__markerBackgroundColor(index);\n        return { _internal_price: price, _internal_radius: radius, _internal_borderColor: borderColor, _internal_borderWidth: borderWidth, _internal_backgroundColor: backgroundColor };\n    }\n    _internal_title() {\n        return this._private__options.title;\n    }\n    _internal_visible() {\n        return this._private__options.visible;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n    }\n    _internal_customSeriesPlotValuesBuilder() {\n        if (this._private__seriesType !== 'Custom') {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_priceValueBuilder(data);\n        };\n    }\n    _internal_customSeriesWhitespaceCheck() {\n        if (this._private__seriesType !== 'Custom') {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_isWhitespace(data);\n        };\n    }\n    _internal_fulfilledIndices() {\n        return this._private__data._internal_indices();\n    }\n    _private__isOverlay() {\n        const priceScale = this._internal_priceScale();\n        return !isDefaultPriceScale(priceScale._internal_id());\n    }\n    _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n        if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n            return null;\n        }\n        // TODO: refactor this\n        // series data is strongly hardcoded to keep bars\n        const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram'\n            ? [3 /* PlotRowValueIndex.Close */]\n            : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n        const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n        let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n        let margins = null;\n        if (this._internal_seriesType() === 'Histogram') {\n            const base = this._private__options.base;\n            const rangeWithBase = new PriceRangeImpl(base, base);\n            range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n        }\n        this._private__primitives.forEach((primitive) => {\n            const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n            if (primitiveAutoscale?.priceRange) {\n                const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n                range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n            }\n            if (primitiveAutoscale?.margins) {\n                margins = primitiveAutoscale.margins;\n            }\n        });\n        return new AutoscaleInfoImpl(range, margins);\n    }\n    _private__markerRadius() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerRadius;\n        }\n        return 0;\n    }\n    _private__markerBorderColor() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n                if (crosshairMarkerBorderColor.length !== 0) {\n                    return crosshairMarkerBorderColor;\n                }\n            }\n        }\n        return null;\n    }\n    _private__markerBorderWidth() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerBorderWidth;\n        }\n        return 0;\n    }\n    _private__markerBackgroundColor(index) {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n                if (crosshairMarkerBackgroundColor.length !== 0) {\n                    return crosshairMarkerBackgroundColor;\n                }\n            }\n        }\n        return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n    }\n    _private__recreateFormatter() {\n        switch (this._private__options.priceFormat.type) {\n            case 'custom': {\n                this._private__formatter = { format: this._private__options.priceFormat.formatter };\n                break;\n            }\n            case 'volume': {\n                this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            case 'percent': {\n                this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            default: {\n                const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n                this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n            }\n        }\n        if (this._internal__priceScale !== null) {\n            this._internal__priceScale._internal_updateFormatter();\n        }\n    }\n    _private__extractPaneViews(extractor, zOrder) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n        return res;\n    }\n}\n\nclass Magnet {\n    constructor(options) {\n        this._private__options = options;\n    }\n    _internal_align(price, index, pane) {\n        let res = price;\n        if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n            return res;\n        }\n        const defaultPriceScale = pane._internal_defaultPriceScale();\n        const firstValue = defaultPriceScale._internal_firstValue();\n        if (firstValue === null) {\n            return res;\n        }\n        const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n        // get all serieses from the pane\n        const serieses = pane._internal_dataSources().filter(((ds) => (ds instanceof Series)));\n        const candidates = serieses.reduce((acc, series) => {\n            if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n                return acc;\n            }\n            const ps = series._internal_priceScale();\n            const bars = series._internal_bars();\n            if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n                return acc;\n            }\n            const bar = bars._internal_valueAt(index);\n            if (bar === null) {\n                return acc;\n            }\n            // convert bar to pixels\n            const firstPrice = ensure(series._internal_firstValue());\n            return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n        }, []);\n        if (candidates.length === 0) {\n            return res;\n        }\n        candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n        const nearest = candidates[0];\n        res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n        return res;\n    }\n}\n\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        ctx.lineWidth = lineWidth;\n        strokeInPixel(ctx, () => {\n            const data = ensureNotNull(this._private__data);\n            if (data._internal_vertLinesVisible) {\n                ctx.strokeStyle = data._internal_vertLinesColor;\n                setLineStyle(ctx, data._internal_vertLineStyle);\n                ctx.beginPath();\n                for (const timeMark of data._internal_timeMarks) {\n                    const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n                    ctx.moveTo(x, -lineWidth);\n                    ctx.lineTo(x, bitmapSize.height + lineWidth);\n                }\n                ctx.stroke();\n            }\n            if (data._internal_horzLinesVisible) {\n                ctx.strokeStyle = data._internal_horzLinesColor;\n                setLineStyle(ctx, data._internal_horzLineStyle);\n                ctx.beginPath();\n                for (const priceMark of data._internal_priceMarks) {\n                    const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n                    ctx.moveTo(-lineWidth, y);\n                    ctx.lineTo(bitmapSize.width + lineWidth, y);\n                }\n                ctx.stroke();\n            }\n        });\n    }\n}\n\nclass GridPaneView {\n    constructor(pane) {\n        this._private__renderer = new GridRenderer();\n        this._private__invalidated = true;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n            const data = {\n                _internal_horzLinesVisible: gridOptions.horzLines.visible,\n                _internal_vertLinesVisible: gridOptions.vertLines.visible,\n                _internal_horzLinesColor: gridOptions.horzLines.color,\n                _internal_vertLinesColor: gridOptions.vertLines.color,\n                _internal_horzLineStyle: gridOptions.horzLines.style,\n                _internal_vertLineStyle: gridOptions.vertLines.style,\n                _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n                // need this conversiom because TimeMark is a part of external interface\n                // and fields inside TimeMark are not minified\n                _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map((tm) => {\n                    return { _internal_coord: tm.coord };\n                }),\n            };\n            this._private__renderer._internal_setData(data);\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n}\n\nclass Grid {\n    constructor(pane) {\n        this._private__paneView = new GridPaneView(pane);\n    }\n    _internal_paneView() {\n        return this._private__paneView;\n    }\n}\n\nconst defLogFormula = {\n    _internal_logicalOffset: 4,\n    _internal_coordOffset: 0.0001,\n};\nfunction fromPercent(value, baseValue) {\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toPercentRange(priceRange, baseValue) {\n    const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n    value -= 100;\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue + 100;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n    const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n    const m = Math.abs(price);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n    return ((price < 0) ? -res : res);\n}\nfunction fromLog(logical, logFormula) {\n    const m = Math.abs(logical);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n    return (logical < 0) ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = toLog(priceRange._internal_minValue(), logFormula);\n    const max = toLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return false;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n    if (range === null) {\n        return defLogFormula;\n    }\n    const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n    if (diff >= 1 || diff < 1e-15) {\n        return defLogFormula;\n    }\n    const digits = Math.ceil(Math.abs(Math.log10(diff)));\n    const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n    const coordOffset = 1 / Math.pow(10, logicalOffset);\n    return {\n        _internal_logicalOffset: logicalOffset,\n        _internal_coordOffset: coordOffset,\n    };\n}\nfunction logFormulasAreSame(f1, f2) {\n    return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\n\nfunction clamp(value, minVal, maxVal) {\n    return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n    if (value < 0) {\n        return false;\n    }\n    for (let current = value; current > 1; current /= 10) {\n        if ((current % 10) !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n    return (x2 - x1) <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n    return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n    if (arr.length < 1) {\n        throw Error('array is empty');\n    }\n    let minVal = arr[0];\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < minVal) {\n            minVal = arr[i];\n        }\n    }\n    return minVal;\n}\nfunction ceiledEven(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 !== 0) ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 === 0) ? ceiled - 1 : ceiled;\n}\n\nclass PriceTickSpanCalculator {\n    constructor(base, integralDividers) {\n        this._private__base = base;\n        this._private__integralDividers = integralDividers;\n        if (isBaseDecimal(this._private__base)) {\n            this._private__fractionalDividers = [2, 2.5, 2];\n        }\n        else {\n            this._private__fractionalDividers = [];\n            for (let baseRest = this._private__base; baseRest !== 1;) {\n                if ((baseRest % 2) === 0) {\n                    this._private__fractionalDividers.push(2);\n                    baseRest /= 2;\n                }\n                else if ((baseRest % 5) === 0) {\n                    this._private__fractionalDividers.push(2, 2.5);\n                    baseRest /= 5;\n                }\n                else {\n                    throw new Error('unexpected base');\n                }\n                if (this._private__fractionalDividers.length > 100) {\n                    throw new Error('something wrong with base');\n                }\n            }\n        }\n    }\n    _internal_tickSpan(high, low, maxTickSpan) {\n        const minMovement = (this._private__base === 0) ? (0) : (1 / this._private__base);\n        let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n        let index = 0;\n        let c = this._private__integralDividers[0];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // the second part is actual for small with very small values like 1e-10\n            // greaterOrEqual fails for such values\n            const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n            const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n            if (!haveToContinue) {\n                break;\n            }\n            resultTickSpan /= c;\n            c = this._private__integralDividers[++index % this._private__integralDividers.length];\n        }\n        if (resultTickSpan <= (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n            resultTickSpan = minMovement;\n        }\n        resultTickSpan = Math.max(1, resultTickSpan);\n        if ((this._private__fractionalDividers.length > 0) && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n            index = 0;\n            c = this._private__fractionalDividers[0];\n            while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n                resultTickSpan /= c;\n                c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n            }\n        }\n        return resultTickSpan;\n    }\n}\n\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n    constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n        this._private__marks = [];\n        this._private__priceScale = priceScale;\n        this._private__base = base;\n        this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n        this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n    }\n    _internal_tickSpan(high, low) {\n        if (high < low) {\n            throw new Error('high < low');\n        }\n        const scaleHeight = this._private__priceScale._internal_height();\n        const markHeight = this._private__tickMarkHeight();\n        const maxTickSpan = (high - low) * markHeight / scaleHeight;\n        const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n        const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n        const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n        const spans = [];\n        spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n        return min(spans);\n    }\n    _internal_rebuildTickMarks() {\n        const priceScale = this._private__priceScale;\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue === null) {\n            this._private__marks = [];\n            return;\n        }\n        const scaleHeight = priceScale._internal_height();\n        const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n        const top = this._private__coordinateToLogicalFunc(0, firstValue);\n        const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n        const minCoord = extraTopBottomMargin;\n        const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n        const high = Math.max(bottom, top);\n        const low = Math.min(bottom, top);\n        if (high === low) {\n            this._private__marks = [];\n            return;\n        }\n        let span = this._internal_tickSpan(high, low);\n        let mod = high % span;\n        mod += mod < 0 ? span : 0;\n        const sign = (high >= low) ? 1 : -1;\n        let prevCoord = null;\n        let targetIndex = 0;\n        for (let logical = high - mod; logical > low; logical -= span) {\n            const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n            // check if there is place for it\n            // this is required for log scale\n            if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n                continue;\n            }\n            // check if a tick mark is partially visible and skip it if entireTextOnly is true\n            if (coord < minCoord || coord > maxCoord) {\n                continue;\n            }\n            if (targetIndex < this._private__marks.length) {\n                this._private__marks[targetIndex]._internal_coord = coord;\n                this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n            }\n            else {\n                this._private__marks.push({\n                    _internal_coord: coord,\n                    _internal_label: priceScale._internal_formatLogical(logical),\n                });\n            }\n            targetIndex++;\n            prevCoord = coord;\n            if (priceScale._internal_isLog()) {\n                // recalc span\n                span = this._internal_tickSpan(logical * sign, low);\n            }\n        }\n        this._private__marks.length = targetIndex;\n    }\n    _internal_marks() {\n        return this._private__marks;\n    }\n    _private__fontHeight() {\n        return this._private__priceScale._internal_fontSize();\n    }\n    _private__tickMarkHeight() {\n        return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n    }\n}\n\nfunction sortSources(sources) {\n    return sources.slice().sort((s1, s2) => {\n        return (ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder()));\n    });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n    /**\n     * Price scale shows prices. Price range changes linearly.\n     */\n    PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Price scale shows prices. Price range changes logarithmically.\n     */\n    PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n    /**\n     * Price scale shows percentage values according the first visible value of the price scale.\n     * The first visible value is 0% in this mode.\n     */\n    PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n    /**\n     * The same as percentage mode, but the first value is moved to 100.\n     */\n    PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n    constructor(id, options, layoutOptions, localizationOptions, colorParser) {\n        this._private__height = 0;\n        this._private__internalHeightCache = null;\n        this._private__priceRange = null;\n        this._private__priceRangeSnapshot = null;\n        this._private__invalidatedForRange = { _internal_isValid: false, _internal_visibleBars: null };\n        this._private__marginAbove = 0;\n        this._private__marginBelow = 0;\n        this._private__onMarksChanged = new Delegate();\n        this._private__modeChanged = new Delegate();\n        this._private__dataSources = [];\n        this._private__cachedOrderedSources = null;\n        this._private__marksCache = null;\n        this._private__scaleStartPoint = null;\n        this._private__scrollStartPoint = null;\n        this._private__formatter = defaultPriceFormatter;\n        this._private__logFormula = logFormulaForPriceRange(null);\n        this._private__id = id;\n        this._private__options = options;\n        this._private__layoutOptions = layoutOptions;\n        this._private__localizationOptions = localizationOptions;\n        this._private__colorParser = colorParser;\n        this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    }\n    _internal_id() {\n        return this._private__id;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_updateFormatter();\n        if (options.mode !== undefined) {\n            this._internal_setMode({ _internal_mode: options.mode });\n        }\n        if (options.scaleMargins !== undefined) {\n            const top = ensureDefined(options.scaleMargins.top);\n            const bottom = ensureDefined(options.scaleMargins.bottom);\n            if (top < 0 || top > 1) {\n                throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n            }\n            if (bottom < 0 || bottom > 1) {\n                throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n            }\n            if (top + bottom > 1) {\n                throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n            }\n            this._private__invalidateInternalHeightCache();\n            this._private__marksCache = null;\n        }\n    }\n    _internal_isAutoScale() {\n        return this._private__options.autoScale;\n    }\n    _internal_isLog() {\n        return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n    }\n    _internal_isPercentage() {\n        return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n    }\n    _internal_isIndexedTo100() {\n        return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n    }\n    _internal_mode() {\n        return {\n            _internal_autoScale: this._private__options.autoScale,\n            _internal_isInverted: this._private__options.invertScale,\n            _internal_mode: this._private__options.mode,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _internal_setMode(newMode) {\n        const oldMode = this._internal_mode();\n        let priceRange = null;\n        if (newMode._internal_autoScale !== undefined) {\n            this._private__options.autoScale = newMode._internal_autoScale;\n        }\n        if (newMode._internal_mode !== undefined) {\n            this._private__options.mode = newMode._internal_mode;\n            if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n                this._private__options.autoScale = true;\n            }\n            // TODO: Remove after making rebuildTickMarks lazy\n            this._private__invalidatedForRange._internal_isValid = false;\n        }\n        // define which scale converted from\n        if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n                priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n                if (priceRange !== null) {\n                    this._internal_setPriceRange(priceRange);\n                }\n            }\n            else {\n                this._private__options.autoScale = true;\n            }\n        }\n        // define which scale converted to\n        if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n            if (priceRange !== null) {\n                this._internal_setPriceRange(priceRange);\n            }\n        }\n        const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n        if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n            this._internal_updateFormatter();\n        }\n        if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n            this._internal_updateFormatter();\n        }\n        if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n            this._private__options.invertScale = newMode._internal_isInverted;\n            this._private__onIsInvertedChanged();\n        }\n        this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n    }\n    _internal_modeChanged() {\n        return this._private__modeChanged;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setHeight(value) {\n        if (this._private__height === value) {\n            return;\n        }\n        this._private__height = value;\n        this._private__invalidateInternalHeightCache();\n        this._private__marksCache = null;\n    }\n    _internal_internalHeight() {\n        if (this._private__internalHeightCache) {\n            return this._private__internalHeightCache;\n        }\n        const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n        this._private__internalHeightCache = res;\n        return res;\n    }\n    _internal_priceRange() {\n        this._private__makeSureItIsValid();\n        return this._private__priceRange;\n    }\n    _internal_setPriceRange(newPriceRange, isForceSetValue) {\n        const oldPriceRange = this._private__priceRange;\n        if (!isForceSetValue &&\n            !(oldPriceRange === null && newPriceRange !== null) &&\n            (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n            return;\n        }\n        this._private__marksCache = null;\n        this._private__priceRange = newPriceRange;\n    }\n    _internal_isEmpty() {\n        this._private__makeSureItIsValid();\n        return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n    }\n    _internal_invertedCoordinate(coordinate) {\n        return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n    }\n    _internal_priceToCoordinate(price, baseValue) {\n        if (this._internal_isPercentage()) {\n            price = toPercent(price, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            price = toIndexedTo100(price, baseValue);\n        }\n        return this._private__logicalToCoordinate(price, baseValue);\n    }\n    _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? points.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const point = points[i];\n            const price = point._internal_price;\n            if (isNaN(price)) {\n                continue;\n            }\n            let logical = price;\n            if (transformFn !== null) {\n                logical = transformFn(point._internal_price, baseValue);\n            }\n            const invCoordinate = bh + hmm * (logical - min);\n            const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            point._internal_y = coordinate;\n        }\n    }\n    _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? pricesList.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const bar = pricesList[i];\n            let openLogical = bar._internal_open;\n            let highLogical = bar._internal_high;\n            let lowLogical = bar._internal_low;\n            let closeLogical = bar._internal_close;\n            if (transformFn !== null) {\n                openLogical = transformFn(bar._internal_open, baseValue);\n                highLogical = transformFn(bar._internal_high, baseValue);\n                lowLogical = transformFn(bar._internal_low, baseValue);\n                closeLogical = transformFn(bar._internal_close, baseValue);\n            }\n            let invCoordinate = bh + hmm * (openLogical - min);\n            let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_openY = coordinate;\n            invCoordinate = bh + hmm * (highLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_highY = coordinate;\n            invCoordinate = bh + hmm * (lowLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_lowY = coordinate;\n            invCoordinate = bh + hmm * (closeLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_closeY = coordinate;\n        }\n    }\n    _internal_coordinateToPrice(coordinate, baseValue) {\n        const logical = this._private__coordinateToLogical(coordinate, baseValue);\n        return this._internal_logicalToPrice(logical, baseValue);\n    }\n    _internal_logicalToPrice(logical, baseValue) {\n        let value = logical;\n        if (this._internal_isPercentage()) {\n            value = fromPercent(value, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            value = fromIndexedTo100(value, baseValue);\n        }\n        return value;\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources) {\n            return this._private__cachedOrderedSources;\n        }\n        let sources = [];\n        for (let i = 0; i < this._private__dataSources.length; i++) {\n            const ds = this._private__dataSources[i];\n            if (ds._internal_zorder() === null) {\n                ds._internal_setZorder(i + 1);\n            }\n            sources.push(ds);\n        }\n        sources = sortSources(sources);\n        this._private__cachedOrderedSources = sources;\n        return this._private__cachedOrderedSources;\n    }\n    _internal_addDataSource(source) {\n        if (this._private__dataSources.indexOf(source) !== -1) {\n            return;\n        }\n        this._private__dataSources.push(source);\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        if (index === -1) {\n            throw new Error('source is not attached to scale');\n        }\n        this._private__dataSources.splice(index, 1);\n        if (this._private__dataSources.length === 0) {\n            this._internal_setMode({\n                _internal_autoScale: true,\n            });\n            // if no sources on price scale let's clear price range cache as well as enabling auto scale\n            this._internal_setPriceRange(null);\n        }\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_firstValue() {\n        // TODO: cache the result\n        let result = null;\n        for (const source of this._private__dataSources) {\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n                result = firstValue;\n            }\n        }\n        return result === null ? null : result._internal_value;\n    }\n    _internal_isInverted() {\n        return this._private__options.invertScale;\n    }\n    _internal_marks() {\n        const firstValueIsNull = this._internal_firstValue() === null;\n        // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n        // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n        // we could display an empty price scale, but this is not good from UX\n        // so in this case we need to keep an previous marks to display them on the scale\n        // as one of possible examples for this situation could be the following:\n        // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n        // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n        if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n            return this._private__marksCache._internal_marks;\n        }\n        this._private__markBuilder._internal_rebuildTickMarks();\n        const marks = this._private__markBuilder._internal_marks();\n        this._private__marksCache = { _internal_marks: marks, _internal_firstValueIsNull: firstValueIsNull };\n        this._private__onMarksChanged._internal_fire();\n        return marks;\n    }\n    _internal_onMarksChanged() {\n        return this._private__onMarksChanged;\n    }\n    _internal_startScale(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        // invert x\n        this._private__scaleStartPoint = this._private__height - x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scaleTo(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._internal_setMode({\n            _internal_autoScale: false,\n        });\n        // invert x\n        x = this._private__height - x;\n        if (x < 0) {\n            x = 0;\n        }\n        let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        scaleCoeff = Math.max(scaleCoeff, 0.1);\n        newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n        this._internal_setPriceRange(newPriceRange);\n    }\n    _internal_endScale() {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_startScroll(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scrollTo(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n        let pixelDelta = x - this._private__scrollStartPoint;\n        if (this._internal_isInverted()) {\n            pixelDelta *= -1;\n        }\n        const priceDelta = pixelDelta * priceUnitsPerPixel;\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        newPriceRange._internal_shift(priceDelta);\n        this._internal_setPriceRange(newPriceRange, true);\n        this._private__marksCache = null;\n    }\n    _internal_endScroll() {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_formatter() {\n        if (!this._private__formatter) {\n            this._internal_updateFormatter();\n        }\n        return this._private__formatter;\n    }\n    _internal_formatPrice(price, firstValue) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(toPercent(price, firstValue));\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n            default:\n                return this._private__formatPrice(price);\n        }\n    }\n    _internal_formatLogical(logical) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(logical);\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(logical);\n            default:\n                return this._private__formatPrice(logical);\n        }\n    }\n    _internal_formatPriceAbsolute(price) {\n        return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n    }\n    _internal_formatPricePercentage(price, baseValue) {\n        price = toPercent(price, baseValue);\n        return this._private__formatPercentage(price, percentageFormatter);\n    }\n    _internal_sourcesForAutoScale() {\n        return this._private__dataSources;\n    }\n    _internal_recalculatePriceRange(visibleBars) {\n        this._private__invalidatedForRange = {\n            _internal_visibleBars: visibleBars,\n            _internal_isValid: false,\n        };\n    }\n    _internal_updateAllViews() {\n        this._private__dataSources.forEach((s) => s._internal_updateAllViews());\n    }\n    _internal_updateFormatter() {\n        this._private__marksCache = null;\n        const formatterSource = this._private__formatterSource();\n        let base = 100;\n        if (formatterSource !== null) {\n            base = Math.round(1 / formatterSource._internal_minMove());\n        }\n        this._private__formatter = defaultPriceFormatter;\n        if (this._internal_isPercentage()) {\n            this._private__formatter = percentageFormatter;\n            base = 100;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            this._private__formatter = new PriceFormatter(100, 1);\n            base = 100;\n        }\n        else {\n            if (formatterSource !== null) {\n                // user\n                this._private__formatter = formatterSource._internal_formatter();\n            }\n        }\n        this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    _internal_invalidateSourcesCache() {\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_colorParser() {\n        return this._private__colorParser;\n    }\n    /**\n     * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n     */\n    _private__formatterSource() {\n        return this._private__dataSources[0] || null;\n    }\n    _private__topMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow\n            : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n    }\n    _private__bottomMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove\n            : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n    }\n    _private__makeSureItIsValid() {\n        if (!this._private__invalidatedForRange._internal_isValid) {\n            this._private__invalidatedForRange._internal_isValid = true;\n            this._private__recalculatePriceRangeImpl();\n        }\n    }\n    _private__invalidateInternalHeightCache() {\n        this._private__internalHeightCache = null;\n    }\n    _private__logicalToCoordinate(logical, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n        const range = ensureNotNull(this._internal_priceRange());\n        const invCoordinate = this._private__bottomMarginPx() +\n            (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n        const coordinate = this._internal_invertedCoordinate(invCoordinate);\n        return coordinate;\n    }\n    _private__coordinateToLogical(coordinate, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        const invCoordinate = this._internal_invertedCoordinate(coordinate);\n        const range = ensureNotNull(this._internal_priceRange());\n        const logical = range._internal_minValue() + range._internal_length() *\n            ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n        return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n    }\n    _private__onIsInvertedChanged() {\n        this._private__marksCache = null;\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    // eslint-disable-next-line complexity\n    _private__recalculatePriceRangeImpl() {\n        const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n        if (visibleBars === null) {\n            return;\n        }\n        let priceRange = null;\n        const sources = this._internal_sourcesForAutoScale();\n        let marginAbove = 0;\n        let marginBelow = 0;\n        for (const source of sources) {\n            if (!source._internal_visible()) {\n                continue;\n            }\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n            let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n            if (sourceRange !== null) {\n                switch (this._private__options.mode) {\n                    case 1 /* PriceScaleMode.Logarithmic */:\n                        sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n                        break;\n                    case 2 /* PriceScaleMode.Percentage */:\n                        sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n                        break;\n                    case 3 /* PriceScaleMode.IndexedTo100 */:\n                        sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n                        break;\n                }\n                if (priceRange === null) {\n                    priceRange = sourceRange;\n                }\n                else {\n                    priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n                }\n                if (autoScaleInfo !== null) {\n                    const margins = autoScaleInfo._internal_margins();\n                    if (margins !== null) {\n                        marginAbove = Math.max(marginAbove, margins.above);\n                        marginBelow = Math.max(marginBelow, margins.below);\n                    }\n                }\n            }\n        }\n        if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n            this._private__marginAbove = marginAbove;\n            this._private__marginBelow = marginBelow;\n            this._private__marksCache = null;\n            this._private__invalidateInternalHeightCache();\n        }\n        if (priceRange !== null) {\n            // keep current range is new is empty\n            if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n                const formatterSource = this._private__formatterSource();\n                const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n                // if price range is degenerated to 1 point let's extend it by 10 min move values\n                // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n                const extendValue = 5 * minMove;\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                }\n                priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n                }\n            }\n            if (this._internal_isLog()) {\n                const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                const newLogFormula = logFormulaForPriceRange(rawRange);\n                if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n                    const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n                    this._private__logFormula = newLogFormula;\n                    priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n                    if (rawSnapshot !== null) {\n                        this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n                    }\n                }\n            }\n            this._internal_setPriceRange(priceRange);\n        }\n        else {\n            // reset empty to default\n            if (this._private__priceRange === null) {\n                this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n                this._private__logFormula = logFormulaForPriceRange(null);\n            }\n        }\n        this._private__invalidatedForRange._internal_isValid = true;\n    }\n    _private__getCoordinateTransformer() {\n        if (this._internal_isPercentage()) {\n            return toPercent;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            return toIndexedTo100;\n        }\n        else if (this._internal_isLog()) {\n            return (price) => toLog(price, this._private__logFormula);\n        }\n        return null;\n    }\n    _private__formatValue(value, formatter, fallbackFormatter) {\n        if (formatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.format(value);\n        }\n        return formatter(value);\n    }\n    _private__formatPrice(price, fallbackFormatter) {\n        return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n    }\n    _private__formatPercentage(percentage, fallbackFormatter) {\n        return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n    }\n}\n\nfunction isSeries(source) {\n    return source instanceof Series;\n}\nconst DEFAULT_STRETCH_FACTOR = 1000;\nconst MIN_PANE_HEIGHT = 30;\nclass Pane {\n    constructor(timeScale, model) {\n        this._private__dataSources = [];\n        this._private__overlaySourcesByScaleId = new Map();\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n        this._private__cachedOrderedSources = null;\n        this._private__destroyed = new Delegate();\n        this._private__primitives = [];\n        this._private__timeScale = timeScale;\n        this._private__model = model;\n        this._private__grid = new Grid(this);\n        const options = model._internal_options();\n        this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n        this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n        this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n        this._internal_applyScaleOptions(options);\n    }\n    _internal_applyScaleOptions(options) {\n        if (options.leftPriceScale) {\n            this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n        }\n        if (options.rightPriceScale) {\n            this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n        }\n        if (options.localization) {\n            this._private__leftPriceScale._internal_updateFormatter();\n            this._private__rightPriceScale._internal_updateFormatter();\n        }\n        if (options.overlayPriceScales) {\n            const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n            for (const arr of sourceArrays) {\n                const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n                priceScale._internal_applyOptions(options.overlayPriceScales);\n                if (options.localization) {\n                    priceScale._internal_updateFormatter();\n                }\n            }\n        }\n    }\n    _internal_priceScaleById(id) {\n        switch (id) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            case \"left\" /* DefaultPriceScaleId.Left */: {\n                return this._private__leftPriceScale;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            case \"right\" /* DefaultPriceScaleId.Right */: {\n                return this._private__rightPriceScale;\n            }\n        }\n        if (this._private__overlaySourcesByScaleId.has(id)) {\n            return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n        }\n        return null;\n    }\n    _internal_destroy() {\n        this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__dataSources.forEach((source) => {\n            if (source._internal_destroy) {\n                source._internal_destroy();\n            }\n        });\n        this._private__primitives = this._private__primitives.filter((primitive) => {\n            const p = primitive._internal_primitive();\n            if (p.detached) {\n                p.detached();\n            }\n            return false;\n        });\n        this._private__destroyed._internal_fire();\n    }\n    _internal_stretchFactor() {\n        return this._private__stretchFactor;\n    }\n    _internal_setStretchFactor(factor) {\n        this._private__stretchFactor = factor;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._internal_updateAllSources();\n    }\n    _internal_setHeight(height) {\n        this._private__height = height;\n        this._private__leftPriceScale._internal_setHeight(height);\n        this._private__rightPriceScale._internal_setHeight(height);\n        // process overlays\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                const priceScale = ds._internal_priceScale();\n                if (priceScale !== null) {\n                    priceScale._internal_setHeight(height);\n                }\n            }\n        });\n        this._internal_updateAllSources();\n    }\n    _internal_series() {\n        return this._private__dataSources.filter(isSeries);\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_isOverlay(source) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale === null) {\n            return true;\n        }\n        return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n    }\n    _internal_addDataSource(source, targetScaleId, zOrder) {\n        const targetZOrder = (zOrder !== undefined) ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n        this._private__insertDataSource(source, targetScaleId, targetZOrder);\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        assert(index !== -1, 'removeDataSource: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n        if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n            const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n            const overlayIndex = overlaySources.indexOf(source);\n            if (overlayIndex !== -1) {\n                overlaySources.splice(overlayIndex, 1);\n                if (overlaySources.length === 0) {\n                    this._private__overlaySourcesByScaleId.delete(priceScaleId);\n                }\n            }\n        }\n        const priceScale = source._internal_priceScale();\n        // if source has owner, it returns owner's price scale\n        // and it does not have source in their list\n        if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n            priceScale._internal_removeDataSource(source);\n        }\n        if (priceScale !== null) {\n            priceScale._internal_invalidateSourcesCache();\n            this._internal_recalculatePriceScale(priceScale);\n        }\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_priceScalePosition(priceScale) {\n        if (priceScale === this._private__leftPriceScale) {\n            return 'left';\n        }\n        if (priceScale === this._private__rightPriceScale) {\n            return 'right';\n        }\n        return 'overlay';\n    }\n    _internal_leftPriceScale() {\n        return this._private__leftPriceScale;\n    }\n    _internal_rightPriceScale() {\n        return this._private__rightPriceScale;\n    }\n    _internal_startScalePrice(priceScale, x) {\n        priceScale._internal_startScale(x);\n    }\n    _internal_scalePriceTo(priceScale, x) {\n        priceScale._internal_scaleTo(x);\n        // TODO: be more smart and update only affected views\n        this._internal_updateAllSources();\n    }\n    _internal_endScalePrice(priceScale) {\n        priceScale._internal_endScale();\n    }\n    _internal_startScrollPrice(priceScale, x) {\n        priceScale._internal_startScroll(x);\n    }\n    _internal_scrollPriceTo(priceScale, x) {\n        priceScale._internal_scrollTo(x);\n        this._internal_updateAllSources();\n    }\n    _internal_endScrollPrice(priceScale) {\n        priceScale._internal_endScroll();\n    }\n    _internal_updateAllSources() {\n        this._private__dataSources.forEach((source) => {\n            source._internal_updateAllViews();\n        });\n    }\n    _internal_defaultPriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__leftPriceScale;\n        }\n        else if (this._private__dataSources.length !== 0) {\n            priceScale = this._private__dataSources[0]._internal_priceScale();\n        }\n        if (priceScale === null) {\n            priceScale = this._private__rightPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_defaultVisiblePriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible) {\n            priceScale = this._private__leftPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_recalculatePriceScale(priceScale) {\n        if (priceScale === null || !priceScale._internal_isAutoScale()) {\n            return;\n        }\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _internal_resetPriceScale(priceScale) {\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        priceScale._internal_setMode({ _internal_autoScale: true });\n        if (visibleBars !== null) {\n            priceScale._internal_recalculatePriceRange(visibleBars);\n        }\n        this._internal_updateAllSources();\n    }\n    _internal_momentaryAutoScale() {\n        this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n        this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n    }\n    _internal_recalculate() {\n        this._internal_recalculatePriceScale(this._private__leftPriceScale);\n        this._internal_recalculatePriceScale(this._private__rightPriceScale);\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                this._internal_recalculatePriceScale(ds._internal_priceScale());\n            }\n        });\n        this._internal_updateAllSources();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources === null) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_orderedSeries() {\n        return this._internal_orderedSources().filter(isSeries);\n    }\n    _internal_onDestroyed() {\n        return this._private__destroyed;\n    }\n    _internal_grid() {\n        return this._private__grid;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new PanePrimitiveWrapper$1(primitive));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n        if (source.detached) {\n            source.detached();\n        }\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_primitives() {\n        return this._private__primitives;\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _private__recalculatePriceScaleImpl(priceScale) {\n        // TODO: can use this checks\n        const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n        if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n            const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n            if (visibleBars !== null) {\n                priceScale._internal_recalculatePriceRange(visibleBars);\n            }\n        }\n        priceScale._internal_updateAllViews();\n    }\n    _private__getZOrderMinMax() {\n        const sources = this._internal_orderedSources();\n        if (sources.length === 0) {\n            return { _internal_minZOrder: 0, _internal_maxZOrder: 0 };\n        }\n        let minZOrder = 0;\n        let maxZOrder = 0;\n        for (let j = 0; j < sources.length; j++) {\n            const ds = sources[j];\n            const zOrder = ds._internal_zorder();\n            if (zOrder !== null) {\n                if (zOrder < minZOrder) {\n                    minZOrder = zOrder;\n                }\n                if (zOrder > maxZOrder) {\n                    maxZOrder = zOrder;\n                }\n            }\n        }\n        return { _internal_minZOrder: minZOrder, _internal_maxZOrder: maxZOrder };\n    }\n    _private__insertDataSource(source, priceScaleId, zOrder) {\n        let priceScale = this._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n        }\n        this._private__dataSources.push(source);\n        if (!isDefaultPriceScale(priceScaleId)) {\n            const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n            overlaySources.push(source);\n            this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n        }\n        priceScale._internal_addDataSource(source);\n        source._internal_setPriceScale(priceScale);\n        source._internal_setZorder(zOrder);\n        this._internal_recalculatePriceScale(priceScale);\n        this._private__cachedOrderedSources = null;\n    }\n    _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n        if (oldMode._internal_mode === newMode._internal_mode) {\n            return;\n        }\n        // momentary auto scale if we toggle percentage/indexedTo100 mode\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _private__createPriceScale(id, options) {\n        const actualOptions = { visible: true, autoScale: true, ...clone(options) };\n        const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options()['layout'], this._private__model._internal_options().localization, this._private__model._internal_colorParser());\n        priceScale._internal_setHeight(this._internal_height());\n        return priceScale;\n    }\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n    return (!reference ||\n        (item === 'top' && reference !== 'top') ||\n        (item === 'normal' && reference === 'bottom'));\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n    let bestPrimitiveHit;\n    let bestHitSource;\n    for (const source of sources) {\n        const primitiveHitResults = source._internal_primitiveHitTest?.(x, y) ?? [];\n        for (const hitResult of primitiveHitResults) {\n            if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit?.zOrder)) {\n                bestPrimitiveHit = hitResult;\n                bestHitSource = source;\n            }\n        }\n    }\n    if (!bestPrimitiveHit || !bestHitSource) {\n        return null;\n    }\n    return {\n        _internal_hit: bestPrimitiveHit,\n        _internal_source: bestHitSource,\n    };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n    return {\n        _internal_source: primitiveHit._internal_source,\n        _internal_object: {\n            _internal_externalId: primitiveHit._internal_hit.externalId,\n        },\n        _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle,\n    };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y, pane) {\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer(pane);\n        if (renderer !== null && renderer._internal_hitTest) {\n            const result = renderer._internal_hitTest(x, y);\n            if (result !== null) {\n                return {\n                    _internal_view: paneView,\n                    _internal_object: result,\n                };\n            }\n        }\n    }\n    return null;\n}\nfunction isDataSource(source) {\n    return source._internal_paneViews !== undefined;\n}\n// eslint-disable-next-line complexity\nfunction hitTestPane(pane, x, y) {\n    const sources = [pane, ...pane._internal_orderedSources()];\n    const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n    if (bestPrimitiveHit?._internal_hit.zOrder === 'top') {\n        // a primitive hit on the 'top' layer will always beat the built-in hit tests\n        // (on normal layer) so we can return early here.\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    for (const source of sources) {\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n            // a primitive will be drawn above a built-in item like a series marker\n            // therefore it takes precedence here.\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n        if (isDataSource(source)) {\n            const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y, pane);\n            if (sourceResult !== null) {\n                return {\n                    _internal_source: source,\n                    _internal_view: sourceResult._internal_view,\n                    _internal_object: sourceResult._internal_object,\n                };\n            }\n        }\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n    }\n    if (bestPrimitiveHit?._internal_hit) {\n        // return primitive hits for the 'bottom' layer\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    return null;\n}\n\nclass FormattedLabelsCache {\n    constructor(format, horzScaleBehavior, size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__cache = new Map();\n        this._private__tick2Labels = new Map();\n        this._private__format = format;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__maxSize = size;\n    }\n    _internal_format(tickMark) {\n        const time = tickMark.time;\n        const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n        const tick = this._private__cache.get(cacheKey);\n        if (tick !== undefined) {\n            return tick._internal_string;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n            this._private__tick2Labels.delete(this._private__oldestTick);\n            this._private__cache.delete(ensureDefined(oldestValue));\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        const str = this._private__format(tickMark);\n        this._private__cache.set(cacheKey, { _internal_string: str, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return str;\n    }\n}\n\nclass RangeImpl {\n    constructor(left, right) {\n        assert(left <= right, 'right should be >= left');\n        this._private__left = left;\n        this._private__right = right;\n    }\n    _internal_left() {\n        return this._private__left;\n    }\n    _internal_right() {\n        return this._private__right;\n    }\n    _internal_count() {\n        return this._private__right - this._private__left + 1;\n    }\n    _internal_contains(index) {\n        return this._private__left <= index && index <= this._private__right;\n    }\n    _internal_equals(other) {\n        return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n    }\n}\nfunction areRangesEqual(first, second) {\n    if (first === null || second === null) {\n        return first === second;\n    }\n    return first._internal_equals(second);\n}\n\nclass TickMarks {\n    constructor() {\n        this._private__marksByWeight = new Map();\n        this._private__cache = null;\n        this._private__uniformDistribution = false;\n    }\n    _internal_setUniformDistribution(val) {\n        this._private__uniformDistribution = val;\n        this._private__cache = null;\n    }\n    _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n        this._private__removeMarksSinceIndex(firstChangedPointIndex);\n        this._private__cache = null;\n        for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n            const point = newPoints[index];\n            let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n            if (marksForWeight === undefined) {\n                marksForWeight = [];\n                this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n            }\n            marksForWeight.push({\n                index: index,\n                time: point.time,\n                weight: point.timeWeight,\n                originalTime: point.originalTime,\n            });\n        }\n    }\n    _internal_build(spacing, maxWidth, checkIndicesForData, indicesWithDataMap, indicesWithDataId) {\n        const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n        if (this._private__cache === null ||\n            this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark ||\n            indicesWithDataId !== this._private__cache._internal_indicesWithDataId ||\n            checkIndicesForData !== this._private__cache._internal_checkIndicesForData) {\n            this._private__cache = {\n                _internal_indicesWithDataId: indicesWithDataId,\n                _internal_checkIndicesForData: checkIndicesForData,\n                _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark, checkIndicesForData, indicesWithDataMap),\n                _internal_maxIndexesPerMark: maxIndexesPerMark,\n            };\n        }\n        return this._private__cache._internal_marks;\n    }\n    _private__removeMarksSinceIndex(sinceIndex) {\n        if (sinceIndex === 0) {\n            this._private__marksByWeight.clear();\n            return;\n        }\n        const weightsToClear = [];\n        this._private__marksByWeight.forEach((marks, timeWeight) => {\n            if (sinceIndex <= marks[0].index) {\n                weightsToClear.push(timeWeight);\n            }\n            else {\n                marks.splice(lowerBound(marks, sinceIndex, (tm) => tm.index < sinceIndex), Infinity);\n            }\n        });\n        for (const weight of weightsToClear) {\n            this._private__marksByWeight.delete(weight);\n        }\n    }\n    _private__buildMarksImpl(maxIndexesPerMark, checkIndicesForData, indicesWithDataMap) {\n        let marks = [];\n        const canBeIncluded = (mark) => !checkIndicesForData || indicesWithDataMap.has(mark.index);\n        for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n            if (!this._private__marksByWeight.get(weight)) {\n                continue;\n            }\n            // Built tickMarks are now prevMarks, and marks it as new array\n            const prevMarks = marks;\n            marks = [];\n            const prevMarksLength = prevMarks.length;\n            let prevMarksPointer = 0;\n            const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n            const currentWeightLength = currentWeight.length;\n            let rightIndex = Infinity;\n            let leftIndex = -Infinity;\n            for (let i = 0; i < currentWeightLength; i++) {\n                const mark = currentWeight[i];\n                const currentIndex = mark.index;\n                // Determine indexes with which current index will be compared\n                // All marks to the right is moved to new array\n                while (prevMarksPointer < prevMarksLength) {\n                    const lastMark = prevMarks[prevMarksPointer];\n                    const lastIndex = lastMark.index;\n                    if (lastIndex < currentIndex && canBeIncluded(lastMark)) {\n                        prevMarksPointer++;\n                        marks.push(lastMark);\n                        leftIndex = lastIndex;\n                        rightIndex = Infinity;\n                    }\n                    else {\n                        rightIndex = lastIndex;\n                        break;\n                    }\n                }\n                if (rightIndex - currentIndex >= maxIndexesPerMark &&\n                    currentIndex - leftIndex >= maxIndexesPerMark &&\n                    canBeIncluded(mark)) {\n                    // TickMark fits. Place it into new array\n                    marks.push(mark);\n                    leftIndex = currentIndex;\n                }\n                else {\n                    if (this._private__uniformDistribution) {\n                        return prevMarks;\n                    }\n                }\n            }\n            // Place all unused tickMarks into new array;\n            for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n                if (canBeIncluded(prevMarks[prevMarksPointer])) {\n                    marks.push(prevMarks[prevMarksPointer]);\n                }\n            }\n        }\n        return marks;\n    }\n}\n\nclass TimeScaleVisibleRange {\n    constructor(logicalRange) {\n        this._private__logicalRange = logicalRange;\n    }\n    _internal_strictRange() {\n        if (this._private__logicalRange === null) {\n            return null;\n        }\n        return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n    }\n    _internal_logicalRange() {\n        return this._private__logicalRange;\n    }\n    static _internal_invalid() {\n        return new TimeScaleVisibleRange(null);\n    }\n}\n\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight$2(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n    constructor(model, options, localizationOptions, horzScaleBehavior) {\n        this._private__width = 0;\n        this._private__baseIndexOrNull = null;\n        this._private__points = [];\n        this._private__scrollStartPoint = null;\n        this._private__scaleStartPoint = null;\n        this._private__tickMarks = new TickMarks();\n        this._private__formattedByWeight = new Map();\n        this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n        this._private__visibleRangeInvalidated = true;\n        this._private__visibleBarsChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__optionsApplied = new Delegate();\n        this._private__commonTransitionStartState = null;\n        this._private__timeMarksCache = null;\n        this._private__indicesWithData = new Map();\n        this._private__indicesWithDataUpdateId = -1;\n        this._private__labels = [];\n        this._private__options = options;\n        this._private__localizationOptions = localizationOptions;\n        this._private__rightOffset = options.rightOffset;\n        this._private__barSpacing = options.barSpacing;\n        this._private__model = model;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__updateDateTimeFormatter();\n        this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n        this._internal_recalculateIndicesWithData();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyLocalizationOptions(localizationOptions) {\n        merge(this._private__localizationOptions, localizationOptions);\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_applyOptions(options, localizationOptions) {\n        merge(this._private__options, options);\n        if (this._private__options.fixLeftEdge) {\n            this._private__doFixLeftEdge();\n        }\n        if (this._private__options.fixRightEdge) {\n            this._private__doFixRightEdge();\n        }\n        // note that bar spacing should be applied before right offset\n        // because right offset depends on bar spacing\n        if (options.barSpacing !== undefined) {\n            this._private__model._internal_setBarSpacing(options.barSpacing);\n        }\n        if (options.rightOffset !== undefined) {\n            this._private__model._internal_setRightOffset(options.rightOffset);\n        }\n        if (options.minBarSpacing !== undefined || options.maxBarSpacing !== undefined) {\n            // yes, if we apply bar spacing constrains then we need to correct bar spacing\n            // the easiest way is to apply it once again\n            this._private__model._internal_setBarSpacing(options.barSpacing ?? this._private__barSpacing);\n        }\n        if (options.ignoreWhitespaceIndices !== undefined && options.ignoreWhitespaceIndices !== this._private__options.ignoreWhitespaceIndices) {\n            this._internal_recalculateIndicesWithData();\n        }\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n        this._private__optionsApplied._internal_fire();\n    }\n    _internal_indexToTime(index) {\n        return this._private__points[index]?.time ?? null;\n    }\n    _internal_indexToTimeScalePoint(index) {\n        return this._private__points[index] ?? null;\n    }\n    _internal_timeToIndex(time, findNearest) {\n        if (this._private__points.length < 1) {\n            // no time points available\n            return null;\n        }\n        if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n            // special case\n            return findNearest ? this._private__points.length - 1 : null;\n        }\n        const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n            return findNearest ? index : null;\n        }\n        return index;\n    }\n    _internal_isEmpty() {\n        return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n    }\n    _internal_hasPoints() {\n        return this._private__points.length > 0;\n    }\n    // strict range: integer indices of the bars in the visible range rounded in more wide direction\n    _internal_visibleStrictRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_strictRange();\n    }\n    _internal_visibleLogicalRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_logicalRange();\n    }\n    _internal_visibleTimeRange() {\n        const visibleBars = this._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const range = {\n            from: visibleBars._internal_left(),\n            to: visibleBars._internal_right(),\n        };\n        return this._internal_timeRangeForLogicalRange(range);\n    }\n    _internal_timeRangeForLogicalRange(range) {\n        const from = Math.round(range.from);\n        const to = Math.round(range.to);\n        const firstIndex = ensureNotNull(this._private__firstIndex());\n        const lastIndex = ensureNotNull(this._private__lastIndex());\n        return {\n            from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n            to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to))),\n        };\n    }\n    _internal_logicalRangeForTimeRange(range) {\n        return {\n            from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n            to: ensureNotNull(this._internal_timeToIndex(range.to, true)),\n        };\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_setWidth(newWidth) {\n        if (!isFinite(newWidth) || newWidth <= 0) {\n            return;\n        }\n        if (this._private__width === newWidth) {\n            return;\n        }\n        // when we change the width and we need to correct visible range because of fixing left edge\n        // we need to check the previous visible range rather than the new one\n        // because it might be updated by changing width, bar spacing, etc\n        // but we need to try to keep the same range\n        const previousVisibleRange = this._internal_visibleLogicalRange();\n        const oldWidth = this._private__width;\n        this._private__width = newWidth;\n        this._private__visibleRangeInvalidated = true;\n        if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n            // recalculate bar spacing\n            const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n            this._private__barSpacing = newBarSpacing;\n        }\n        // if time scale is scrolled to the end of data and we have fixed right edge\n        // keep left edge instead of right\n        // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n        if (this._private__options.fixLeftEdge) {\n            // note that logical left range means not the middle of a bar (it's the left border)\n            if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n                const delta = oldWidth - newWidth;\n                // reduce  _rightOffset means move right\n                // we could move more than required - this will be fixed by _correctOffset()\n                this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n        // updating bar spacing should be first because right offset depends on it\n        this._private__correctBarSpacing();\n        this._private__correctOffset();\n    }\n    _internal_indexToCoordinate(index) {\n        if (this._internal_isEmpty() || !isInteger(index)) {\n            return 0;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const deltaFromRight = baseIndex + this._private__rightOffset - index;\n        const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n        return coordinate;\n    }\n    _internal_indexesToCoordinates(points, visibleRange) {\n        const baseIndex = this._internal_baseIndex();\n        const indexFrom = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const indexTo = (visibleRange === undefined) ? points.length : visibleRange.to;\n        for (let i = indexFrom; i < indexTo; i++) {\n            const index = points[i]._internal_time;\n            const deltaFromRight = baseIndex + this._private__rightOffset - index;\n            const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n            points[i]._internal_x = coordinate;\n        }\n    }\n    _internal_coordinateToIndex(x, considerIgnoreWhitespace) {\n        const index = Math.ceil(this._private__coordinateToFloatIndex(x));\n        if (!considerIgnoreWhitespace ||\n            !this._private__options.ignoreWhitespaceIndices ||\n            this._private__shouldConsiderIndex(index)) {\n            return index;\n        }\n        return this._private__findNearestIndexWithData(index);\n    }\n    _internal_setRightOffset(offset) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__rightOffset = offset;\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_barSpacing() {\n        return this._private__barSpacing;\n    }\n    _internal_setBarSpacing(newBarSpacing) {\n        this._private__setBarSpacing(newBarSpacing);\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_rightOffset() {\n        return this._private__rightOffset;\n    }\n    // eslint-disable-next-line complexity\n    _internal_marks() {\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        if (this._private__timeMarksCache !== null) {\n            return this._private__timeMarksCache;\n        }\n        const spacing = this._private__barSpacing;\n        const fontSize = this._private__model._internal_options()['layout'].fontSize;\n        const pixelsPer8Characters = (fontSize + 4) * 5;\n        const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n        const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n        const indexPerLabel = Math.round(maxLabelWidth / spacing);\n        const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n        const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n        const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n        const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth, this._private__options.ignoreWhitespaceIndices, this._private__indicesWithData, this._private__indicesWithDataUpdateId);\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n        const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n        const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n        const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n        const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n        const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n        let targetIndex = 0;\n        for (const tm of items) {\n            if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n                continue;\n            }\n            let label;\n            if (targetIndex < this._private__labels.length) {\n                label = this._private__labels[targetIndex];\n                label.coord = this._internal_indexToCoordinate(tm.index);\n                label.label = this._private__formatLabel(tm);\n                label.weight = tm.weight;\n            }\n            else {\n                label = {\n                    needAlignCoordinate: false,\n                    coord: this._internal_indexToCoordinate(tm.index),\n                    label: this._private__formatLabel(tm),\n                    weight: tm.weight,\n                };\n                this._private__labels.push(label);\n            }\n            if (this._private__barSpacing > (maxLabelWidth / 2) && !isAllScalingAndScrollingDisabled) {\n                // if there is enough space then let's show all tick marks as usual\n                label.needAlignCoordinate = false;\n            }\n            else {\n                // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n                // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n                label.needAlignCoordinate = (isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel) || (isRightEdgeFixed && tm.index >= indexOfSecondLastLabel);\n            }\n            targetIndex++;\n        }\n        this._private__labels.length = targetIndex;\n        this._private__timeMarksCache = this._private__labels;\n        return this._private__labels;\n    }\n    _internal_restoreDefault() {\n        this._private__visibleRangeInvalidated = true;\n        this._internal_setBarSpacing(this._private__options.barSpacing);\n        this._internal_setRightOffset(this._private__options.rightOffset);\n    }\n    _internal_setBaseIndex(baseIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__baseIndexOrNull = baseIndex;\n        this._private__correctOffset();\n        this._private__doFixLeftEdge();\n    }\n    /**\n     * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n     *\n     * @param zoomPoint - X coordinate of the point to apply the zoom.\n     * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n     * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n     * Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoom(zoomPoint, scale) {\n        const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n        const barSpacing = this._internal_barSpacing();\n        const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n        // zoom in/out bar spacing\n        this._internal_setBarSpacing(newBarSpacing);\n        if (!this._private__options.rightBarStaysOnScroll) {\n            // and then correct right offset to move index under zoomPoint back to its coordinate\n            this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n        }\n    }\n    _internal_startScale(x) {\n        if (this._private__scrollStartPoint) {\n            this._internal_endScroll();\n        }\n        if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scaleStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scaleTo(x) {\n        if (this._private__commonTransitionStartState === null) {\n            return;\n        }\n        const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n        const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n        if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n            return;\n        }\n        this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n    }\n    _internal_endScale() {\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_startScroll(x) {\n        if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scrollTo(x) {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n        this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n        this._private__visibleRangeInvalidated = true;\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n    }\n    _internal_endScroll() {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_scrollToRealTime() {\n        this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n    }\n    _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n        if (!isFinite(offset)) {\n            throw new RangeError('offset is required and must be finite number');\n        }\n        if (!isFinite(animationDuration) || animationDuration <= 0) {\n            throw new RangeError('animationDuration (optional) must be finite positive number');\n        }\n        const source = this._private__rightOffset;\n        const animationStart = performance.now();\n        this._private__model._internal_setTimeScaleAnimation({\n            _internal_finished: (time) => (time - animationStart) / animationDuration >= 1,\n            _internal_getPosition: (time) => {\n                const animationProgress = (time - animationStart) / animationDuration;\n                const finishAnimation = animationProgress >= 1;\n                return finishAnimation ? offset : source + (offset - source) * animationProgress;\n            },\n        });\n    }\n    _internal_update(newPoints, firstChangedPointIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__points = newPoints;\n        this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n        this._private__correctOffset();\n    }\n    _internal_visibleBarsChanged() {\n        return this._private__visibleBarsChanged;\n    }\n    _internal_logicalRangeChanged() {\n        return this._private__logicalRangeChanged;\n    }\n    _internal_optionsApplied() {\n        return this._private__optionsApplied;\n    }\n    _internal_baseIndex() {\n        // null is used to known that baseIndex is not set yet\n        // so in methods which should known whether it is set or not\n        // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n        // see minRightOffset for example\n        return this._private__baseIndexOrNull || 0;\n    }\n    _internal_setVisibleRange(range) {\n        const length = range._internal_count();\n        this._private__setBarSpacing(this._private__width / length);\n        this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n        this._private__correctOffset();\n        this._private__visibleRangeInvalidated = true;\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_fitContent() {\n        const first = this._private__firstIndex();\n        const last = this._private__lastIndex();\n        if (first === null || last === null) {\n            return;\n        }\n        this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n    }\n    _internal_setLogicalRange(range) {\n        const barRange = new RangeImpl(range.from, range.to);\n        this._internal_setVisibleRange(barRange);\n    }\n    _internal_formatDateTime(timeScalePoint) {\n        if (this._private__localizationOptions.timeFormatter !== undefined) {\n            return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n        }\n        return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n    }\n    _internal_recalculateIndicesWithData() {\n        if (!this._private__options.ignoreWhitespaceIndices) {\n            return;\n        }\n        this._private__indicesWithData.clear();\n        const series = this._private__model._internal_serieses();\n        for (const s of series) {\n            for (const index of s._internal_fulfilledIndices()) {\n                this._private__indicesWithData.set(index, true);\n            }\n        }\n        this._private__indicesWithDataUpdateId++;\n    }\n    _private__isAllScalingAndScrollingDisabled() {\n        const handleScroll = this._private__model._internal_options()['handleScroll'];\n        const handleScale = this._private__model._internal_options()['handleScale'];\n        return !handleScroll.horzTouchDrag\n            && !handleScroll.mouseWheel\n            && !handleScroll.pressedMouseMove\n            && !handleScroll.vertTouchDrag\n            && !handleScale.axisDoubleClickReset.time\n            && !handleScale.axisPressedMouseMove.time\n            && !handleScale.mouseWheel\n            && !handleScale.pinch;\n    }\n    _private__firstIndex() {\n        return this._private__points.length === 0 ? null : 0;\n    }\n    _private__lastIndex() {\n        return this._private__points.length === 0 ? null : (this._private__points.length - 1);\n    }\n    _private__rightOffsetForCoordinate(x) {\n        return (this._private__width - 1 - x) / this._private__barSpacing;\n    }\n    _private__coordinateToFloatIndex(x) {\n        const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n        const baseIndex = this._internal_baseIndex();\n        const index = baseIndex + this._private__rightOffset - deltaFromRight;\n        // JavaScript uses very strange rounding\n        // we need rounding to avoid problems with calculation errors\n        return Math.round(index * 1000000) / 1000000;\n    }\n    _private__setBarSpacing(newBarSpacing) {\n        const oldBarSpacing = this._private__barSpacing;\n        this._private__barSpacing = newBarSpacing;\n        this._private__correctBarSpacing();\n        // this._barSpacing might be changed in _correctBarSpacing\n        if (oldBarSpacing !== this._private__barSpacing) {\n            this._private__visibleRangeInvalidated = true;\n            this._private__resetTimeMarksCache();\n        }\n    }\n    _private__updateVisibleRange() {\n        if (!this._private__visibleRangeInvalidated) {\n            return;\n        }\n        this._private__visibleRangeInvalidated = false;\n        if (this._internal_isEmpty()) {\n            this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n            return;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const newBarsLength = this._private__width / this._private__barSpacing;\n        const rightBorder = this._private__rightOffset + baseIndex;\n        const leftBorder = rightBorder - newBarsLength + 1;\n        const logicalRange = new RangeImpl(leftBorder, rightBorder);\n        this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n    }\n    _private__correctBarSpacing() {\n        const barSpacing = clamp(this._private__barSpacing, this._private__minBarSpacing(), this._private__maxBarSpacing());\n        if (this._private__barSpacing !== barSpacing) {\n            this._private__barSpacing = barSpacing;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__maxBarSpacing() {\n        if (this._private__options.maxBarSpacing > 0) {\n            // option takes precedance\n            return this._private__options.maxBarSpacing;\n        }\n        else {\n            // half of the width is default value for maximum bar spacing\n            return this._private__width * 0.5;\n        }\n    }\n    _private__minBarSpacing() {\n        // if both options are enabled then limit bar spacing so that zooming-out is not possible\n        // if it would cause either the first or last points to move too far from an edge\n        if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n            return this._private__width / this._private__points.length;\n        }\n        return this._private__options.minBarSpacing;\n    }\n    _private__correctOffset() {\n        // block scrolling of to past\n        const minRightOffset = this._private__minRightOffset();\n        if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n            this._private__rightOffset = minRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n        // block scrolling of to future\n        const maxRightOffset = this._private__maxRightOffset();\n        if (this._private__rightOffset > maxRightOffset) {\n            this._private__rightOffset = maxRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__minRightOffset() {\n        const firstIndex = this._private__firstIndex();\n        const baseIndex = this._private__baseIndexOrNull;\n        if (firstIndex === null || baseIndex === null) {\n            return null;\n        }\n        const barsEstimation = this._private__options.fixLeftEdge\n            ? this._private__width / this._private__barSpacing\n            : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n        return firstIndex - baseIndex - 1 + barsEstimation;\n    }\n    _private__maxRightOffset() {\n        return this._private__options.fixRightEdge\n            ? 0\n            : (this._private__width / this._private__barSpacing) - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    }\n    _private__saveCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = {\n            _internal_barSpacing: this._internal_barSpacing(),\n            _internal_rightOffset: this._internal_rightOffset(),\n        };\n    }\n    _private__clearCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = null;\n    }\n    _private__formatLabel(tickMark) {\n        let formatter = this._private__formattedByWeight.get(tickMark.weight);\n        if (formatter === undefined) {\n            formatter = new FormattedLabelsCache((mark) => {\n                return this._private__formatLabelImpl(mark);\n            }, this._private__horzScaleBehavior);\n            this._private__formattedByWeight.set(tickMark.weight, formatter);\n        }\n        return formatter._internal_format(tickMark);\n    }\n    _private__formatLabelImpl(tickMark) {\n        return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n    }\n    _private__setVisibleRange(newVisibleRange) {\n        const oldVisibleRange = this._private__visibleRange;\n        this._private__visibleRange = newVisibleRange;\n        if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n            this._private__visibleBarsChanged._internal_fire();\n        }\n        if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n            this._private__logicalRangeChanged._internal_fire();\n        }\n        // TODO: reset only coords in case when this._visibleBars has not been changed\n        this._private__resetTimeMarksCache();\n    }\n    _private__resetTimeMarksCache() {\n        this._private__timeMarksCache = null;\n    }\n    _private__invalidateTickMarks() {\n        this._private__resetTimeMarksCache();\n        this._private__formattedByWeight.clear();\n    }\n    _private__updateDateTimeFormatter() {\n        this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n    }\n    _private__doFixLeftEdge() {\n        if (!this._private__options.fixLeftEdge) {\n            return;\n        }\n        const firstIndex = this._private__firstIndex();\n        if (firstIndex === null) {\n            return;\n        }\n        const visibleRange = this._internal_visibleStrictRange();\n        if (visibleRange === null) {\n            return;\n        }\n        const delta = visibleRange._internal_left() - firstIndex;\n        if (delta < 0) {\n            const leftEdgeOffset = this._private__rightOffset - delta - 1;\n            this._internal_setRightOffset(leftEdgeOffset);\n        }\n        this._private__correctBarSpacing();\n    }\n    _private__doFixRightEdge() {\n        this._private__correctOffset();\n        this._private__correctBarSpacing();\n    }\n    _private__shouldConsiderIndex(index) {\n        if (!this._private__options.ignoreWhitespaceIndices) {\n            return true;\n        }\n        return this._private__indicesWithData.get(index) || false;\n    }\n    _private__findNearestIndexWithData(x) {\n        const gen = testNearestIntegers(x);\n        const maxIndex = this._private__lastIndex();\n        while (maxIndex) {\n            const index = gen.next().value;\n            if (this._private__indicesWithData.get(index)) {\n                return index;\n            }\n            if (index < 0 || index > maxIndex) {\n                break;\n            }\n        }\n        return x; // fallback to original index\n    }\n}\nfunction* testNearestIntegers(num) {\n    const rounded = Math.round(num);\n    const isRoundedDown = rounded < num;\n    let offset = 1;\n    while (true) {\n        if (isRoundedDown) {\n            yield rounded + offset;\n            yield rounded - offset;\n        }\n        else {\n            yield rounded - offset;\n            yield rounded + offset;\n        }\n        offset++;\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n    /**\n     * Tracking Mode will be deactivated on touch end event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n    /**\n     * Tracking Mode will be deactivated on the next tap event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nfunction isPanePrimitive(source) {\n    return source instanceof Pane;\n}\nclass ChartModel {\n    constructor(invalidateHandler, options, horzScaleBehavior) {\n        this._private__panes = [];\n        this._private__serieses = [];\n        this._private__width = 0;\n        this._private__hoveredSource = null;\n        this._private__priceScalesOptionsChanged = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__gradientColorsCache = null;\n        this._private__invalidateHandler = invalidateHandler;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__colorParser = new ColorParser(this._private__options.layout.colorParsers);\n        this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n        this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n        this._private__crosshair = new Crosshair(this, options.crosshair);\n        this._private__magnet = new Magnet(options.crosshair);\n        this._private__getOrCreatePane(0);\n        this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    }\n    _internal_fullUpdate() {\n        this._private__invalidate(InvalidateMask._internal_full());\n    }\n    _internal_lightUpdate() {\n        this._private__invalidate(InvalidateMask._internal_light());\n    }\n    _internal_cursorUpdate() {\n        this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n    }\n    _internal_updateSource(source) {\n        const inv = this._private__invalidationMaskForSource(source);\n        this._private__invalidate(inv);\n    }\n    _internal_hoveredSource() {\n        return this._private__hoveredSource;\n    }\n    _internal_setHoveredSource(source) {\n        if (this._private__hoveredSource?._internal_source === source?._internal_source && this._private__hoveredSource?._internal_object?._internal_externalId === source?._internal_object?._internal_externalId) {\n            return;\n        }\n        const prevSource = this._private__hoveredSource;\n        this._private__hoveredSource = source;\n        if (prevSource !== null) {\n            this._internal_updateSource(prevSource._internal_source);\n        }\n        // additional check to prevent unnecessary updates of same source\n        if (source !== null && source._internal_source !== prevSource?._internal_source) {\n            this._internal_updateSource(source._internal_source);\n        }\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._private__panes.forEach((p) => p._internal_applyScaleOptions(options));\n        if (options.timeScale !== undefined) {\n            this._private__timeScale._internal_applyOptions(options.timeScale);\n        }\n        if (options.localization !== undefined) {\n            this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n        }\n        if (options.leftPriceScale || options.rightPriceScale) {\n            this._private__priceScalesOptionsChanged._internal_fire();\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n        this._internal_fullUpdate();\n    }\n    _internal_applyPriceScaleOptions(priceScaleId, options) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n            this._internal_applyOptions({\n                leftPriceScale: options,\n            });\n            return;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        }\n        else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n            this._internal_applyOptions({\n                rightPriceScale: options,\n            });\n            return;\n        }\n        const res = this._internal_findPriceScale(priceScaleId);\n        if (res === null) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n            }\n        }\n        res._internal_priceScale._internal_applyOptions(options);\n        this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    _internal_findPriceScale(priceScaleId) {\n        for (const pane of this._private__panes) {\n            const priceScale = pane._internal_priceScaleById(priceScaleId);\n            if (priceScale !== null) {\n                return {\n                    _internal_pane: pane,\n                    _internal_priceScale: priceScale,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_timeScale() {\n        return this._private__timeScale;\n    }\n    _internal_panes() {\n        return this._private__panes;\n    }\n    _internal_crosshairSource() {\n        return this._private__crosshair;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_setPaneHeight(pane, height) {\n        pane._internal_setHeight(height);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._private__timeScale._internal_setWidth(this._private__width);\n        this._private__panes.forEach((pane) => pane._internal_setWidth(width));\n        this._internal_recalculateAllPanes();\n    }\n    _internal_removePane(index) {\n        if (this._private__panes.length === 1) {\n            return;\n        }\n        assert(index >= 0 && index < this._private__panes.length, 'Invalid pane index');\n        this._private__panes.splice(index, 1);\n        this._internal_fullUpdate();\n    }\n    _internal_changePanesHeight(paneIndex, height) {\n        if (this._private__panes.length < 2) {\n            return;\n        }\n        assert(paneIndex >= 0 && paneIndex < this._private__panes.length, 'Invalid pane index');\n        const targetPane = this._private__panes[paneIndex];\n        const totalStretch = this._private__panes.reduce((prevValue, pane) => prevValue + pane._internal_stretchFactor(), 0);\n        const totalHeight = this._private__panes.reduce((prevValue, pane) => prevValue + pane._internal_height(), 0);\n        const maxPaneHeight = totalHeight - MIN_PANE_HEIGHT * (this._private__panes.length - 1);\n        height = Math.min(maxPaneHeight, Math.max(MIN_PANE_HEIGHT, height));\n        const pixelStretchFactor = totalStretch / totalHeight;\n        const oldHeight = targetPane._internal_height();\n        targetPane._internal_setStretchFactor(height * pixelStretchFactor);\n        let otherPanesChange = height - oldHeight;\n        let panesCount = this._private__panes.length - 1;\n        for (const pane of this._private__panes) {\n            if (pane !== targetPane) {\n                const newPaneHeight = Math.min(maxPaneHeight, Math.max(30, pane._internal_height() - otherPanesChange / panesCount));\n                otherPanesChange -= (pane._internal_height() - newPaneHeight);\n                panesCount -= 1;\n                const newStretchFactor = newPaneHeight * pixelStretchFactor;\n                pane._internal_setStretchFactor(newStretchFactor);\n            }\n        }\n        this._internal_fullUpdate();\n    }\n    _internal_swapPanes(first, second) {\n        assert(first >= 0 && first < this._private__panes.length && second >= 0 && second < this._private__panes.length, 'Invalid pane index');\n        const firstPane = this._private__panes[first];\n        const secondPane = this._private__panes[second];\n        this._private__panes[first] = secondPane;\n        this._private__panes[second] = firstPane;\n        this._internal_fullUpdate();\n    }\n    _internal_startScalePrice(pane, priceScale, x) {\n        pane._internal_startScalePrice(priceScale, x);\n    }\n    _internal_scalePriceTo(pane, priceScale, x) {\n        pane._internal_scalePriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScalePrice(pane, priceScale) {\n        pane._internal_endScalePrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScrollPrice(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_startScrollPrice(priceScale, x);\n    }\n    _internal_scrollPriceTo(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_scrollPriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScrollPrice(pane, priceScale) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_endScrollPrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_resetPriceScale(pane, priceScale) {\n        pane._internal_resetPriceScale(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScaleTime(position) {\n        this._private__timeScale._internal_startScale(position);\n    }\n    /**\n     * Zoom in/out the chart (depends on scale value).\n     *\n     * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n     * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoomTime(pointX, scale) {\n        const timeScale = this._internal_timeScale();\n        if (timeScale._internal_isEmpty() || scale === 0) {\n            return;\n        }\n        const timeScaleWidth = timeScale._internal_width();\n        pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n        timeScale._internal_zoom(pointX, scale);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_scrollChart(x) {\n        this._internal_startScrollTime(0);\n        this._internal_scrollTimeTo(x);\n        this._internal_endScrollTime();\n    }\n    _internal_scaleTimeTo(x) {\n        this._private__timeScale._internal_scaleTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScaleTime() {\n        this._private__timeScale._internal_endScale();\n        this._internal_lightUpdate();\n    }\n    _internal_startScrollTime(x) {\n        this._private__timeScale._internal_startScroll(x);\n    }\n    _internal_scrollTimeTo(x) {\n        this._private__timeScale._internal_scrollTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScrollTime() {\n        this._private__timeScale._internal_endScroll();\n        this._internal_lightUpdate();\n    }\n    _internal_serieses() {\n        return this._private__serieses;\n    }\n    _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n        this._private__crosshair._internal_saveOriginCoord(x, y);\n        let price = NaN;\n        let index = this._private__timeScale._internal_coordinateToIndex(x, true);\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        if (visibleBars !== null) {\n            index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n        }\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue !== null) {\n            price = priceScale._internal_coordinateToPrice(y, firstValue);\n        }\n        price = this._private__magnet._internal_align(price, index, pane);\n        this._private__crosshair._internal_setPosition(index, price, pane);\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__updateHoveredSourceOnChange(pane, x, y);\n            this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), { x, y }, event);\n        }\n    }\n    // A position provided external (not from an internal event listener)\n    _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n        const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n        const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n        this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n    }\n    _internal_clearCurrentPosition(skipEvent) {\n        const crosshair = this._internal_crosshairSource();\n        crosshair._internal_clearPosition();\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(null, null, null);\n        }\n    }\n    _internal_updateCrosshair() {\n        // apply magnet\n        const pane = this._private__crosshair._internal_pane();\n        if (pane !== null) {\n            const x = this._private__crosshair._internal_originCoordX();\n            const y = this._private__crosshair._internal_originCoordY();\n            this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n        }\n        this._private__crosshair._internal_updateAllViews();\n    }\n    _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n        const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n        if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n            this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n        }\n        const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n        const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n        // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n        // (and actually we cannot)\n        if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n            const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n            const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n            const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n            const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n            const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n            const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n            const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n            if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n                const compensationShift = newBaseIndex - currentBaseIndex;\n                this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n            }\n        }\n        this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n    }\n    _internal_recalculatePane(pane) {\n        if (pane !== null) {\n            pane._internal_recalculate();\n        }\n    }\n    _internal_paneForSource(source) {\n        if (isPanePrimitive(source)) {\n            return source;\n        }\n        const pane = this._private__panes.find((p) => p._internal_orderedSources().includes(source));\n        return pane === undefined ? null : pane;\n    }\n    _internal_recalculateAllPanes() {\n        this._private__panes.forEach((p) => p._internal_recalculate());\n        this._internal_updateCrosshair();\n    }\n    _internal_destroy() {\n        this._private__panes.forEach((p) => p._internal_destroy());\n        this._private__panes.length = 0;\n        // to avoid memleaks\n        this._private__options.localization.priceFormatter = undefined;\n        this._private__options.localization.percentageFormatter = undefined;\n        this._private__options.localization.timeFormatter = undefined;\n    }\n    _internal_rendererOptionsProvider() {\n        return this._private__rendererOptionsProvider;\n    }\n    _internal_priceAxisRendererOptions() {\n        return this._private__rendererOptionsProvider._internal_options();\n    }\n    _internal_priceScalesOptionsChanged() {\n        return this._private__priceScalesOptionsChanged;\n    }\n    _internal_addSeriesToPane(series, paneIndex) {\n        const pane = this._private__getOrCreatePane(paneIndex);\n        this._private__addSeriesToPane(series, pane);\n        this._private__serieses.push(series);\n        if (this._private__serieses.length === 1) {\n            // call fullUpdate to recalculate chart's parts geometry\n            this._internal_fullUpdate();\n        }\n        else {\n            this._internal_lightUpdate();\n        }\n    }\n    _internal_removeSeries(series) {\n        const pane = this._internal_paneForSource(series);\n        const seriesIndex = this._private__serieses.indexOf(series);\n        assert(seriesIndex !== -1, 'Series not found');\n        const paneImpl = ensureNotNull(pane);\n        this._private__serieses.splice(seriesIndex, 1);\n        paneImpl._internal_removeDataSource(series);\n        if (series._internal_destroy) {\n            series._internal_destroy();\n        }\n        this._private__timeScale._internal_recalculateIndicesWithData();\n        this._private__cleanupIfPaneIsEmpty(paneImpl);\n    }\n    _internal_moveSeriesToScale(series, targetScaleId) {\n        const pane = ensureNotNull(this._internal_paneForSource(series));\n        pane._internal_removeDataSource(series);\n        pane._internal_addDataSource(series, targetScaleId, ensureNotNull(series._internal_zorder()));\n    }\n    _internal_fitContent() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setFitContent();\n        this._private__invalidate(mask);\n    }\n    _internal_setTargetLogicalRange(range) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_applyRange(range);\n        this._private__invalidate(mask);\n    }\n    _internal_resetTimeScale() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_resetTimeScale();\n        this._private__invalidate(mask);\n    }\n    _internal_setBarSpacing(spacing) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setBarSpacing(spacing);\n        this._private__invalidate(mask);\n    }\n    _internal_setRightOffset(offset) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setRightOffset(offset);\n        this._private__invalidate(mask);\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setTimeScaleAnimation(animation);\n        this._private__invalidate(mask);\n    }\n    _internal_stopTimeScaleAnimation() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_stopTimeScaleAnimation();\n        this._private__invalidate(mask);\n    }\n    _internal_defaultVisiblePriceScaleId() {\n        return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n    }\n    _internal_moveSeriesToPane(series, newPaneIndex) {\n        assert(newPaneIndex >= 0, 'Index should be greater or equal to 0');\n        const fromPaneIndex = this._private__seriesPaneIndex(series);\n        if (newPaneIndex === fromPaneIndex) {\n            return;\n        }\n        const previousPane = ensureNotNull(this._internal_paneForSource(series));\n        previousPane._internal_removeDataSource(series);\n        const newPane = this._private__getOrCreatePane(newPaneIndex);\n        this._private__addSeriesToPane(series, newPane);\n        if (previousPane._internal_dataSources().length === 0) {\n            this._private__cleanupIfPaneIsEmpty(previousPane);\n        }\n    }\n    _internal_backgroundBottomColor() {\n        return this._private__backgroundBottomColor;\n    }\n    _internal_backgroundTopColor() {\n        return this._private__backgroundTopColor;\n    }\n    _internal_backgroundColorAtYPercentFromTop(percent) {\n        const bottomColor = this._private__backgroundBottomColor;\n        const topColor = this._private__backgroundTopColor;\n        if (bottomColor === topColor) {\n            // solid background\n            return bottomColor;\n        }\n        // gradient background\n        // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n        percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n        if (this._private__gradientColorsCache === null ||\n            this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n            this._private__gradientColorsCache = {\n                _internal_topColor: topColor,\n                _internal_bottomColor: bottomColor,\n                _internal_colors: new Map(),\n            };\n        }\n        else {\n            const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n        const result = this._private__colorParser._internal_gradientColorAtPercent(topColor, bottomColor, percent / 100);\n        this._private__gradientColorsCache._internal_colors.set(percent, result);\n        return result;\n    }\n    _internal_getPaneIndex(pane) {\n        return this._private__panes.indexOf(pane);\n    }\n    _internal_colorParser() {\n        return this._private__colorParser;\n    }\n    _private__updateHoveredSourceOnChange(pane, x, y) {\n        if (pane) {\n            const hitTest = hitTestPane(pane, x, y);\n            this._internal_setHoveredSource(hitTest && { _internal_source: hitTest._internal_source, _internal_object: hitTest._internal_object });\n        }\n    }\n    _private__getOrCreatePane(index) {\n        assert(index >= 0, 'Index should be greater or equal to 0');\n        index = Math.min(this._private__panes.length, index);\n        if (index < this._private__panes.length) {\n            return this._private__panes[index];\n        }\n        const pane = new Pane(this._private__timeScale, this);\n        this._private__panes.push(pane);\n        // we always do autoscaling on the creation\n        // if autoscale option is true, it is ok, just recalculate by invalidation mask\n        // if autoscale option is false, autoscale anyway on the first draw\n        // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n        const mask = InvalidateMask._internal_full();\n        mask._internal_invalidatePane(index, {\n            _internal_level: 0 /* InvalidationLevel.None */,\n            _internal_autoScale: true,\n        });\n        this._private__invalidate(mask);\n        return pane;\n    }\n    _private__seriesPaneIndex(series) {\n        return this._private__panes.findIndex((pane) => pane._internal_series().includes(series));\n    }\n    _private__paneInvalidationMask(pane, level) {\n        const inv = new InvalidateMask(level);\n        if (pane !== null) {\n            const index = this._private__panes.indexOf(pane);\n            inv._internal_invalidatePane(index, {\n                _internal_level: level,\n            });\n        }\n        return inv;\n    }\n    _private__invalidationMaskForSource(source, invalidateType) {\n        if (invalidateType === undefined) {\n            invalidateType = 2 /* InvalidationLevel.Light */;\n        }\n        return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n    }\n    _private__invalidate(mask) {\n        if (this._private__invalidateHandler) {\n            this._private__invalidateHandler(mask);\n        }\n        this._private__panes.forEach((pane) => pane._internal_grid()._internal_paneView()._internal_update());\n    }\n    _private__addSeriesToPane(series, pane) {\n        const priceScaleId = series._internal_options().priceScaleId;\n        const targetScaleId = priceScaleId !== undefined ? priceScaleId : this._internal_defaultVisiblePriceScaleId();\n        pane._internal_addDataSource(series, targetScaleId);\n        if (!isDefaultPriceScale(targetScaleId)) {\n            // let's apply that options again to apply margins\n            series._internal_applyOptions(series._internal_options());\n        }\n    }\n    _private__getBackgroundColor(side) {\n        const layoutOptions = this._private__options['layout'];\n        if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n            return side === 0 /* BackgroundColorSide.Top */ ?\n                layoutOptions.background.topColor :\n                layoutOptions.background.bottomColor;\n        }\n        return layoutOptions.background.color;\n    }\n    _private__cleanupIfPaneIsEmpty(pane) {\n        if (pane._internal_dataSources().length === 0 && this._private__panes.length > 1) {\n            this._private__panes.splice(this._internal_getPaneIndex(pane), 1);\n            this._internal_fullUpdate();\n        }\n    }\n}\n\nfunction fillUpDownCandlesticksColors(options) {\n    if (options.borderColor !== undefined) {\n        options.borderUpColor = options.borderColor;\n        options.borderDownColor = options.borderColor;\n    }\n    if (options.wickColor !== undefined) {\n        options.wickUpColor = options.wickColor;\n        options.wickDownColor = options.wickColor;\n    }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n    /**\n     * Animation is always disabled\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n     * Animation is always enabled.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n    /**\n     * Animation is active after new data.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n    if (minMove >= 1) {\n        return 0;\n    }\n    let i = 0;\n    for (; i < 8; i++) {\n        const intPart = Math.round(minMove);\n        const fractPart = Math.abs(intPart - minMove);\n        if (fractPart < 1e-8) {\n            return i;\n        }\n        minMove = minMove * 10;\n    }\n    return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n    /**\n     * Use the last bar data.\n     */\n    PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n    /**\n     * Use the last visible data of the chart viewport.\n     */\n    PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n    /** Solid color */\n    ColorType[\"Solid\"] = \"solid\";\n    /** Vertical gradient color */\n    ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n    return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n    return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n    /**\n     * The start of the year (e.g. it's the first tick mark in a year).\n     */\n    TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n    /**\n     * The start of the month (e.g. it's the first tick mark in a month).\n     */\n    TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n    /**\n     * A day of the month.\n     */\n    TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n    /**\n     * A time without seconds.\n     */\n    TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n    /**\n     * A time with seconds.\n     */\n    TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\n\nconst getMonth = (date) => date.getUTCMonth() + 1;\nconst getDay = (date) => date.getUTCDate();\nconst getYear = (date) => date.getUTCFullYear();\nconst dd = (date) => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'long' });\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'short' });\nconst MM = (date) => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = (date) => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = (date) => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n    return format\n        .replace(/yyyy/g, yyyy(date))\n        .replace(/yy/g, yy(date))\n        .replace(/MMMM/g, MMMM(date, locale))\n        .replace(/MMM/g, MMM(date, locale))\n        .replace(/MM/g, MM(date))\n        .replace(/dd/g, dd(date));\n}\n\nclass DateFormatter {\n    constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n        this._private__dateFormat = dateFormat;\n        this._private__locale = locale;\n    }\n    _internal_format(date) {\n        return formatDate(date, this._private__dateFormat, this._private__locale);\n    }\n}\n\nclass TimeFormatter {\n    constructor(format) {\n        this._private__formatStr = format || '%h:%m:%s';\n    }\n    _internal_format(date) {\n        return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).\n            replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).\n            replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n    }\n}\n\nconst defaultParams = {\n    _internal_dateFormat: 'yyyy-MM-dd',\n    _internal_timeFormat: '%h:%m:%s',\n    _internal_dateTimeSeparator: ' ',\n    _internal_locale: 'default',\n};\nclass DateTimeFormatter {\n    constructor(params = {}) {\n        const formatterParams = { ...defaultParams, ...params };\n        this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n        this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n        this._private__separator = formatterParams._internal_dateTimeSeparator;\n    }\n    _internal_format(dateTime) {\n        return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n    }\n}\n\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n    const formatOptions = {};\n    switch (tickMarkType) {\n        case 0 /* TickMarkType.Year */:\n            formatOptions.year = 'numeric';\n            break;\n        case 1 /* TickMarkType.Month */:\n            formatOptions.month = 'short';\n            break;\n        case 2 /* TickMarkType.DayOfMonth */:\n            formatOptions.day = 'numeric';\n            break;\n        case 3 /* TickMarkType.Time */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            break;\n        case 4 /* TickMarkType.TimeWithSeconds */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            formatOptions.second = '2-digit';\n            break;\n    }\n    const date = timePoint._internal_businessDay === undefined\n        ? new Date(timePoint._internal_timestamp * 1000)\n        : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n    // from given date we should use only as UTC date or timestamp\n    // but to format as locale date we can convert UTC date to local date\n    const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\n\nfunction hours(count) {\n    return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n    return count * 60 * 1000;\n}\nfunction seconds(count) {\n    return count * 1000;\n}\nconst intradayWeightDivisors = [\n    { _internal_divisor: seconds(1), _internal_weight: 10 /* TickMarkWeight.Second */ },\n    { _internal_divisor: minutes(1), _internal_weight: 20 /* TickMarkWeight.Minute1 */ },\n    { _internal_divisor: minutes(5), _internal_weight: 21 /* TickMarkWeight.Minute5 */ },\n    { _internal_divisor: minutes(30), _internal_weight: 22 /* TickMarkWeight.Minute30 */ },\n    { _internal_divisor: hours(1), _internal_weight: 30 /* TickMarkWeight.Hour1 */ },\n    { _internal_divisor: hours(3), _internal_weight: 31 /* TickMarkWeight.Hour3 */ },\n    { _internal_divisor: hours(6), _internal_weight: 32 /* TickMarkWeight.Hour6 */ },\n    { _internal_divisor: hours(12), _internal_weight: 33 /* TickMarkWeight.Hour12 */ },\n];\nfunction weightByTime(currentDate, prevDate) {\n    if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n        return 70 /* TickMarkWeight.Year */;\n    }\n    else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n        return 60 /* TickMarkWeight.Month */;\n    }\n    else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n        return 50 /* TickMarkWeight.Day */;\n    }\n    for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n        if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n            return intradayWeightDivisors[i]._internal_weight;\n        }\n    }\n    return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n    return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n    if (sortedTimePoints.length === 0) {\n        return;\n    }\n    let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n    let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n    let totalTimeDiff = 0;\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n        const currentPoint = sortedTimePoints[index];\n        const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n        if (prevDate !== null) {\n            currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n        }\n        totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n        prevTime = cast(currentPoint.time)._internal_timestamp;\n        prevDate = currentDate;\n    }\n    if (startIndex === 0 && sortedTimePoints.length > 1) {\n        // let's guess a weight for the first point\n        // let's say the previous point was average time back in the history\n        const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n        const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n        sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n    }\n}\n\nfunction businessDayConverter(time) {\n    let businessDay = time;\n    if (isString(time)) {\n        businessDay = stringToBusinessDay(time);\n    }\n    if (!isBusinessDay(businessDay)) {\n        throw new Error('time must be of type BusinessDay');\n    }\n    const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n    return {\n        _internal_timestamp: Math.round(date.getTime() / 1000),\n        _internal_businessDay: businessDay,\n    };\n}\nfunction timestampConverter(time) {\n    if (!isUTCTimestamp(time)) {\n        throw new Error('time must be of type isUTCTimestamp');\n    }\n    return {\n        _internal_timestamp: time,\n    };\n}\nfunction selectTimeConverter(data) {\n    if (data.length === 0) {\n        return null;\n    }\n    if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n        return businessDayConverter;\n    }\n    return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n    if (isUTCTimestamp(time)) {\n        return timestampConverter(time);\n    }\n    if (!isBusinessDay(time)) {\n        return businessDayConverter(stringToBusinessDay(time));\n    }\n    return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n    {\n        // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n        // but parses them in 'implementation specific' way\n        // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n        // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n        // but let's do this in development build only because of perf\n        if (!validDateRegex.test(value)) {\n            throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n        }\n    }\n    const d = new Date(value);\n    if (isNaN(d.getTime())) {\n        throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n    return {\n        day: d.getUTCDate(),\n        month: d.getUTCMonth() + 1,\n        year: d.getUTCFullYear(),\n    };\n}\nfunction convertStringToBusinessDay(value) {\n    if (isString(value.time)) {\n        value.time = stringToBusinessDay(value.time);\n    }\n}\nfunction convertStringsToBusinessDays(data) {\n    return data.forEach(convertStringToBusinessDay);\n}\n\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n    switch (weight) {\n        case 0 /* TickMarkWeight.LessThanSecond */:\n        case 10 /* TickMarkWeight.Second */:\n            return timeVisible\n                ? (secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */)\n                : 2 /* TickMarkType.DayOfMonth */;\n        case 20 /* TickMarkWeight.Minute1 */:\n        case 21 /* TickMarkWeight.Minute5 */:\n        case 22 /* TickMarkWeight.Minute30 */:\n        case 30 /* TickMarkWeight.Hour1 */:\n        case 31 /* TickMarkWeight.Hour3 */:\n        case 32 /* TickMarkWeight.Hour6 */:\n        case 33 /* TickMarkWeight.Hour12 */:\n            return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n        case 50 /* TickMarkWeight.Day */:\n            return 2 /* TickMarkType.DayOfMonth */;\n        case 60 /* TickMarkWeight.Month */:\n            return 1 /* TickMarkType.Month */;\n        case 70 /* TickMarkWeight.Year */:\n            return 0 /* TickMarkType.Year */;\n    }\n}\nclass HorzScaleBehaviorTime {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n        this.updateFormatter(options.localization);\n    }\n    preprocessData(data) {\n        if (Array.isArray(data)) {\n            convertStringsToBusinessDays(data);\n        }\n        else {\n            convertStringToBusinessDay(data);\n        }\n    }\n    createConverterToInternalObj(data) {\n        return ensureNotNull(selectTimeConverter(data));\n    }\n    key(item) {\n        // eslint-disable-next-line no-restricted-syntax\n        if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n            return item._internal_timestamp;\n        }\n        else {\n            return this.key(this.convertHorzItemToInternal(item));\n        }\n    }\n    cacheKey(item) {\n        const time = item;\n        return time._internal_businessDay === undefined\n            ? new Date(time._internal_timestamp * 1000).getTime()\n            : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n    }\n    convertHorzItemToInternal(item) {\n        return convertTime(item);\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        const dateFormat = options.dateFormat;\n        if (this._private__options.timeScale.timeVisible) {\n            this._private__dateTimeFormatter = new DateTimeFormatter({\n                _internal_dateFormat: dateFormat,\n                _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n                _internal_dateTimeSeparator: '   ',\n                _internal_locale: options.locale,\n            });\n        }\n        else {\n            this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n        }\n    }\n    formatHorzItem(item) {\n        const tp = item;\n        return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n    }\n    formatTickmark(tickMark, localizationOptions) {\n        const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n        const options = this._private__options.timeScale;\n        if (options.tickMarkFormatter !== undefined) {\n            const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n            if (tickMarkString !== null) {\n                return tickMarkString;\n            }\n        }\n        return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n    }\n    maxTickMarkWeight(tickMarks) {\n        let maxWeight = tickMarks.reduce(markWithGreaterWeight$2, tickMarks[0]).weight;\n        // special case: it looks strange if 15:00 is bold but 14:00 is not\n        // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n        if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n            maxWeight = 30 /* TickMarkWeight.Hour1 */;\n        }\n        return maxWeight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        fillWeightsForPoints(sortedTimePoints, startIndex);\n    }\n    static _internal_applyDefaults(options) {\n        return merge({ localization: { dateFormat: 'dd MMM \\'yy' } }, options ?? {});\n    }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\n\nfunction isFF() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // more accurate if available\n    if (navigator?.userAgentData?.platform) {\n        return navigator.userAgentData.platform === 'Windows';\n    }\n    return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    if (!navigator.userAgentData) {\n        return false;\n    }\n    return navigator.userAgentData.brands.some((brand) => {\n        return brand.brand.includes('Chromium');\n    });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n    {\n        // eslint-disable-next-line no-console\n        console.warn(msg);\n    }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n    const integerWidth = Math.floor(originalSize.width);\n    const integerHeight = Math.floor(originalSize.height);\n    const width = integerWidth - (integerWidth % 2);\n    const height = integerHeight - (integerHeight % 2);\n    return size$1({ width, height });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n    return originalHeight + (originalHeight % 2);\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n    return originalWidth + (originalWidth % 2);\n}\n\nfunction preventScrollByWheelClick(el) {\n    if (!isChrome()) {\n        return;\n    }\n    el.addEventListener('mousedown', (e) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (e.button === 1 /* MouseEventButton.Middle */) {\n            // prevent incorrect scrolling event\n            e.preventDefault();\n            return false;\n        }\n        return undefined;\n    });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n    constructor(target, handler, options) {\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__longTapTimeoutId = null;\n        this._private__longTapActive = false;\n        this._private__mouseMoveStartPosition = null;\n        this._private__touchMoveStartPosition = null;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__cancelClick = false;\n        this._private__cancelTap = false;\n        this._private__unsubscribeOutsideMouseEvents = null;\n        this._private__unsubscribeOutsideTouchEvents = null;\n        this._private__unsubscribeMobileSafariEvents = null;\n        this._private__unsubscribeMousemove = null;\n        this._private__unsubscribeRootMouseEvents = null;\n        this._private__unsubscribeRootTouchEvents = null;\n        this._private__startPinchMiddlePoint = null;\n        this._private__startPinchDistance = 0;\n        this._private__pinchPrevented = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__mousePressed = false;\n        this._private__lastTouchEventTimeStamp = 0;\n        // for touchstart/touchmove/touchend events we handle only first touch\n        // i.e. we don't support several active touches at the same time (except pinch event)\n        this._private__activeTouchId = null;\n        // accept all mouse leave events if it's not an iOS device\n        // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n        this._private__acceptMouseLeave = !isIOS();\n        /**\n         * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n         * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n         * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n         */\n        this._private__onFirefoxOutsideMouseUp = (mouseUpEvent) => {\n            this._private__mouseUpHandler(mouseUpEvent);\n        };\n        /**\n         * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n         * There are two possible solutions:\n         * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n         * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n         * https://developer.apple.com/forums/thread/125073\n         */\n        this._private__onMobileSafariDoubleClick = (dblClickEvent) => {\n            if (this._private__firesTouchEvents(dblClickEvent)) {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__tapCount;\n                if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n                    if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n                    }\n                    this._private__resetTapTimeout();\n                }\n            }\n            else {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__clickCount;\n                if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n                    if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n                    }\n                    this._private__resetClickTimeout();\n                }\n            }\n        };\n        this._private__target = target;\n        this._private__handler = handler;\n        this._private__options = options;\n        this._private__init();\n    }\n    _internal_destroy() {\n        if (this._private__unsubscribeOutsideMouseEvents !== null) {\n            this._private__unsubscribeOutsideMouseEvents();\n            this._private__unsubscribeOutsideMouseEvents = null;\n        }\n        if (this._private__unsubscribeOutsideTouchEvents !== null) {\n            this._private__unsubscribeOutsideTouchEvents();\n            this._private__unsubscribeOutsideTouchEvents = null;\n        }\n        if (this._private__unsubscribeMousemove !== null) {\n            this._private__unsubscribeMousemove();\n            this._private__unsubscribeMousemove = null;\n        }\n        if (this._private__unsubscribeRootMouseEvents !== null) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (this._private__unsubscribeRootTouchEvents !== null) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        if (this._private__unsubscribeMobileSafariEvents !== null) {\n            this._private__unsubscribeMobileSafariEvents();\n            this._private__unsubscribeMobileSafariEvents = null;\n        }\n        this._private__clearLongTapTimeout();\n        this._private__resetClickTimeout();\n    }\n    _private__mouseEnterHandler(enterEvent) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n        this._private__unsubscribeMousemove = () => {\n            this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n        };\n        this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n        if (this._private__firesTouchEvents(enterEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(enterEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__resetClickTimeout() {\n        if (this._private__clickTimeoutId !== null) {\n            clearTimeout(this._private__clickTimeoutId);\n        }\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__resetTapTimeout() {\n        if (this._private__tapTimeoutId !== null) {\n            clearTimeout(this._private__tapTimeoutId);\n        }\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__mouseMoveHandler(moveEvent) {\n        if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n            return;\n        }\n        if (this._private__firesTouchEvents(moveEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(moveEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__touchMoveHandler(moveEvent) {\n        const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n        if (this._private__startPinchMiddlePoint !== null) {\n            return;\n        }\n        if (this._private__preventTouchDragProcess) {\n            return;\n        }\n        // prevent pinch if move event comes faster than the second touch\n        this._private__pinchPrevented = true;\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n        const { _internal_xOffset: xOffset, _internal_yOffset: yOffset, _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n            return;\n        }\n        if (!this._private__touchMoveExceededManhattanDistance) {\n            // first time when current position exceeded manhattan distance\n            // vertical drag is more important than horizontal drag\n            // because we scroll the page vertically often than horizontally\n            const correctedXOffset = xOffset * 0.5;\n            // a drag can be only if touch page scroll isn't allowed\n            const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n            const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n            // if drag event happened then we should revert preventDefault state to original one\n            // and try to process the drag event\n            // else we shouldn't prevent default of the event and ignore processing the drag event\n            if (!isVertDrag && !isHorzDrag) {\n                this._private__preventTouchDragProcess = true;\n            }\n            this._private__touchMoveExceededManhattanDistance = true;\n            // if manhattan distance is more that 5 - we should cancel tap event\n            this._private__cancelTap = true;\n            this._private__clearLongTapTimeout();\n            this._private__resetTapTimeout();\n        }\n        if (!this._private__preventTouchDragProcess) {\n            const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n            // we should prevent default in case of touch only\n            // to prevent scroll of the page\n            preventDefault(moveEvent);\n        }\n    }\n    _private__mouseMoveWithDownHandler(moveEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n        const { _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n            // if manhattan distance is more that 5 - we should cancel click event\n            this._private__cancelClick = true;\n            this._private__resetClickTimeout();\n        }\n        if (this._private__cancelClick) {\n            // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n            const compatEvent = this._private__makeCompatEvent(moveEvent);\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n        }\n    }\n    _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n        const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n        const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n        const manhattanDistance = xOffset + yOffset;\n        return {\n            _internal_xOffset: xOffset,\n            _internal_yOffset: yOffset,\n            _internal_manhattanDistance: manhattanDistance,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _private__touchEndHandler(touchEndEvent) {\n        let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null && touchEndEvent.touches.length === 0) {\n            // something went wrong, somehow we missed the required touchend event\n            // probably the browser has not sent this event\n            touch = touchEndEvent.changedTouches[0];\n        }\n        if (touch === null) {\n            return;\n        }\n        this._private__activeTouchId = null;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n        this._private__clearLongTapTimeout();\n        this._private__touchMoveStartPosition = null;\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n            }\n            this._private__resetTapTimeout();\n        }\n        else {\n            if (!this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n                // do not fire mouse events if tap handler was executed\n                // prevent click event on new dom element (who appeared after tap)\n                if (this._private__handler._internal_tapEvent) {\n                    preventDefault(touchEndEvent);\n                }\n            }\n        }\n        // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n        // we handle mouseDoubleClickEvent here ourselves\n        if (this._private__tapCount === 0) {\n            preventDefault(touchEndEvent);\n        }\n        if (touchEndEvent.touches.length === 0) {\n            if (this._private__longTapActive) {\n                this._private__longTapActive = false;\n                // prevent native click event\n                preventDefault(touchEndEvent);\n            }\n        }\n    }\n    _private__mouseUpHandler(mouseUpEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n        this._private__mouseMoveStartPosition = null;\n        this._private__mousePressed = false;\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (isFF()) {\n            const rootElement = this._private__target.ownerDocument.documentElement;\n            rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        if (this._private__firesTouchEvents(mouseUpEvent)) {\n            return;\n        }\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n            if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n            }\n            this._private__resetClickTimeout();\n        }\n        else {\n            if (!this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n            }\n        }\n    }\n    _private__clearLongTapTimeout() {\n        if (this._private__longTapTimeoutId === null) {\n            return;\n        }\n        clearTimeout(this._private__longTapTimeoutId);\n        this._private__longTapTimeoutId = null;\n    }\n    _private__touchStartHandler(downEvent) {\n        if (this._private__activeTouchId !== null) {\n            return;\n        }\n        const touch = downEvent.changedTouches[0];\n        this._private__activeTouchId = touch.identifier;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        this._private__cancelTap = false;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__touchMoveStartPosition = getPosition(touch);\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        {\n            const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n            const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n            this._private__unsubscribeRootTouchEvents = () => {\n                rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n                rootElement.removeEventListener('touchend', boundTouchEndHandler);\n            };\n            rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, { passive: false });\n            rootElement.addEventListener('touchend', boundTouchEndHandler, { passive: false });\n            this._private__clearLongTapTimeout();\n            this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n        if (!this._private__tapTimeoutId) {\n            this._private__tapCount = 0;\n            this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__tapPosition = getPosition(touch);\n        }\n    }\n    _private__mouseDownHandler(downEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        if (isFF()) {\n            rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        this._private__cancelClick = false;\n        this._private__mouseMoveStartPosition = getPosition(downEvent);\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        {\n            const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n            const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n            this._private__unsubscribeRootMouseEvents = () => {\n                rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n                rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n            };\n            rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n            rootElement.addEventListener('mouseup', boundMouseUpHandler);\n        }\n        this._private__mousePressed = true;\n        if (this._private__firesTouchEvents(downEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n        if (!this._private__clickTimeoutId) {\n            this._private__clickCount = 0;\n            this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__clickPosition = getPosition(downEvent);\n        }\n    }\n    _private__init() {\n        this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n        // Do not show context menu when something went wrong\n        this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n        {\n            const doc = this._private__target.ownerDocument;\n            const outsideHandler = (event) => {\n                if (!this._private__handler._internal_mouseDownOutsideEvent) {\n                    return;\n                }\n                if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n                    return;\n                }\n                if (event.target && this._private__target.contains(event.target)) {\n                    return;\n                }\n                this._private__handler._internal_mouseDownOutsideEvent();\n            };\n            this._private__unsubscribeOutsideTouchEvents = () => {\n                doc.removeEventListener('touchstart', outsideHandler);\n            };\n            this._private__unsubscribeOutsideMouseEvents = () => {\n                doc.removeEventListener('mousedown', outsideHandler);\n            };\n            doc.addEventListener('mousedown', outsideHandler);\n            doc.addEventListener('touchstart', outsideHandler, { passive: true });\n        }\n        if (isIOS()) {\n            this._private__unsubscribeMobileSafariEvents = () => {\n                this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n            };\n            this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n        }\n        this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n        this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), { passive: true });\n        preventScrollByWheelClick(this._private__target);\n        this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n        this._private__initPinch();\n        // Hey mobile Safari, what's up?\n        // If mobile Safari doesn't have any touchmove handler with passive=false\n        // it treats a touchstart and the following touchmove events as cancelable=false,\n        // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n        // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n        this._private__target.addEventListener('touchmove', () => { }, { passive: false });\n    }\n    _private__initPinch() {\n        if (this._private__handler._internal_pinchStartEvent === undefined &&\n            this._private__handler._internal_pinchEvent === undefined &&\n            this._private__handler._internal_pinchEndEvent === undefined) {\n            return;\n        }\n        this._private__target.addEventListener('touchstart', (event) => this._private__checkPinchState(event.touches), { passive: true });\n        this._private__target.addEventListener('touchmove', (event) => {\n            if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n                return;\n            }\n            if (this._private__handler._internal_pinchEvent !== undefined) {\n                const currentDistance = getDistance(event.touches[0], event.touches[1]);\n                const scale = currentDistance / this._private__startPinchDistance;\n                this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n                preventDefault(event);\n            }\n        }, { passive: false });\n        this._private__target.addEventListener('touchend', (event) => {\n            this._private__checkPinchState(event.touches);\n        });\n    }\n    _private__checkPinchState(touches) {\n        if (touches.length === 1) {\n            this._private__pinchPrevented = false;\n        }\n        if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n            this._private__stopPinch();\n        }\n        else {\n            this._private__startPinch(touches);\n        }\n    }\n    _private__startPinch(touches) {\n        const box = getBoundingClientRect(this._private__target);\n        this._private__startPinchMiddlePoint = {\n            _internal_x: ((touches[0].clientX - box.left) + (touches[1].clientX - box.left)) / 2,\n            _internal_y: ((touches[0].clientY - box.top) + (touches[1].clientY - box.top)) / 2,\n        };\n        this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n        if (this._private__handler._internal_pinchStartEvent !== undefined) {\n            this._private__handler._internal_pinchStartEvent();\n        }\n        this._private__clearLongTapTimeout();\n    }\n    _private__stopPinch() {\n        if (this._private__startPinchMiddlePoint === null) {\n            return;\n        }\n        this._private__startPinchMiddlePoint = null;\n        if (this._private__handler._internal_pinchEndEvent !== undefined) {\n            this._private__handler._internal_pinchEndEvent();\n        }\n    }\n    _private__mouseLeaveHandler(event) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        if (this._private__firesTouchEvents(event)) {\n            return;\n        }\n        if (!this._private__acceptMouseLeave) {\n            // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n            // just ignore this event if there was no mouse move or mouse enter events\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n        // accept all mouse leave events if it's not an iOS device\n        this._private__acceptMouseLeave = !isIOS();\n    }\n    _private__longTapHandler(event) {\n        const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n        this._private__cancelTap = true;\n        // long tap is active until touchend event with 0 touches occurred\n        this._private__longTapActive = true;\n    }\n    _private__firesTouchEvents(e) {\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n            return e.sourceCapabilities.firesTouchEvents;\n        }\n        return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n    }\n    _private__processTouchEvent(event, callback) {\n        if (callback) {\n            callback.call(this._private__handler, event);\n        }\n    }\n    _private__processMouseEvent(event, callback) {\n        if (!callback) {\n            return;\n        }\n        callback.call(this._private__handler, event);\n    }\n    _private__makeCompatEvent(event, touch) {\n        // TouchEvent has no clientX/Y coordinates:\n        // We have to use the last Touch instead\n        const eventLike = touch || event;\n        const box = this._private__target.getBoundingClientRect() || { left: 0, top: 0 };\n        return {\n            clientX: eventLike.clientX,\n            clientY: eventLike.clientY,\n            pageX: eventLike.pageX,\n            pageY: eventLike.pageY,\n            screenX: eventLike.screenX,\n            screenY: eventLike.screenY,\n            localX: (eventLike.clientX - box.left),\n            localY: (eventLike.clientY - box.top),\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n            _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n            _internal_srcType: event.type,\n            _internal_target: eventLike.target,\n            _internal_view: event.view,\n            _internal_preventDefault: () => {\n                if (event.type !== 'touchstart') {\n                    // touchstart is passive and cannot be prevented\n                    preventDefault(event);\n                }\n            },\n        };\n    }\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect() || { left: 0, top: 0 };\n}\nfunction getDistance(p1, p2) {\n    const xDiff = p1.clientX - p2.clientX;\n    const yDiff = p1.clientY - p2.clientY;\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n    if (event.cancelable) {\n        event.preventDefault();\n    }\n}\nfunction getPosition(eventLike) {\n    return {\n        _internal_x: eventLike.pageX,\n        _internal_y: eventLike.pageY,\n    };\n}\nfunction eventTimeStamp(e) {\n    // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n    return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n    for (let i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return null;\n}\n\nclass PaneSeparator {\n    constructor(chartWidget, topPaneIndex, bottomPaneIndex) {\n        this._private__handle = null;\n        this._private__mouseEventHandler = null;\n        this._private__resizeEnabled = true;\n        this._private__resizeInfo = null;\n        this._private__chartWidget = chartWidget;\n        this._private__topPane = chartWidget._internal_paneWidgets()[topPaneIndex];\n        this._private__bottomPane = chartWidget._internal_paneWidgets()[bottomPaneIndex];\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.style.height = 1 /* SeparatorConstants.SeparatorHeight */ + 'px';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.position = 'relative';\n        this._private__cell.style.padding = '0';\n        this._private__cell.style.margin = '0';\n        this._private__cell.setAttribute('colspan', '3');\n        this._private__updateBorderColor();\n        this._private__rowElement.appendChild(this._private__cell);\n        this._private__resizeEnabled = this._private__chartWidget._internal_options()['layout'].panes.enableResize;\n        if (!this._private__resizeEnabled) {\n            this._private__handle = null;\n            this._private__mouseEventHandler = null;\n        }\n        else {\n            this._private__addResizableHandle();\n        }\n    }\n    _internal_destroy() {\n        if (this._private__mouseEventHandler !== null) {\n            this._private__mouseEventHandler._internal_destroy();\n        }\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_getSize() {\n        return size$1({\n            width: this._private__topPane._internal_getSize().width,\n            height: 1 /* SeparatorConstants.SeparatorHeight */,\n        });\n    }\n    _internal_getBitmapSize() {\n        return size$1({\n            width: this._private__topPane._internal_getBitmapSize().width,\n            height: 1 /* SeparatorConstants.SeparatorHeight */ * window.devicePixelRatio,\n        });\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        ctx.fillStyle = this._private__chartWidget._internal_options()['layout'].panes.separatorColor;\n        ctx.fillRect(x, y, bitmapSize.width, bitmapSize.height);\n    }\n    _internal_update() {\n        this._private__updateBorderColor();\n        if (this._private__chartWidget._internal_options()['layout'].panes.enableResize !== this._private__resizeEnabled) {\n            this._private__resizeEnabled = this._private__chartWidget._internal_options()['layout'].panes.enableResize;\n            if (this._private__resizeEnabled) {\n                this._private__addResizableHandle();\n            }\n            else {\n                if (this._private__handle !== null) {\n                    this._private__cell.removeChild(this._private__handle._internal_backgroundElement);\n                    this._private__cell.removeChild(this._private__handle._internal_element);\n                    this._private__handle = null;\n                }\n                if (this._private__mouseEventHandler !== null) {\n                    this._private__mouseEventHandler._internal_destroy();\n                    this._private__mouseEventHandler = null;\n                }\n            }\n        }\n    }\n    _private__addResizableHandle() {\n        const backgroundElement = document.createElement('div');\n        const bgStyle = backgroundElement.style;\n        bgStyle.position = 'fixed';\n        bgStyle.display = 'none';\n        bgStyle.zIndex = '49';\n        bgStyle.top = '0';\n        bgStyle.left = '0';\n        bgStyle.width = '100%';\n        bgStyle.height = '100%';\n        bgStyle.cursor = 'row-resize';\n        this._private__cell.appendChild(backgroundElement);\n        const element = document.createElement('div');\n        const style = element.style;\n        style.position = 'absolute';\n        style.zIndex = '50';\n        style.top = '-4px';\n        style.height = '9px';\n        style.width = '100%';\n        style.backgroundColor = '';\n        style.cursor = 'row-resize';\n        this._private__cell.appendChild(element);\n        const handlers = {\n            _internal_mouseEnterEvent: this._private__mouseOverEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(element, handlers, {\n            _internal_treatVertTouchDragAsPageScroll: () => false,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n        this._private__handle = { _internal_element: element, _internal_backgroundElement: backgroundElement };\n    }\n    _private__updateBorderColor() {\n        this._private__cell.style.background = this._private__chartWidget._internal_options()['layout'].panes.separatorColor;\n    }\n    _private__mouseOverEvent(event) {\n        if (this._private__handle !== null) {\n            this._private__handle._internal_element.style.backgroundColor = this._private__chartWidget._internal_options()['layout'].panes.separatorHoverColor;\n        }\n    }\n    _private__mouseLeaveEvent(event) {\n        if (this._private__handle !== null && this._private__resizeInfo === null) {\n            this._private__handle._internal_element.style.backgroundColor = '';\n        }\n    }\n    _private__mouseDownEvent(event) {\n        if (this._private__handle === null) {\n            return;\n        }\n        const totalStretch = this._private__topPane._internal_state()._internal_stretchFactor() + this._private__bottomPane._internal_state()._internal_stretchFactor();\n        const totalHeight = this._private__topPane._internal_getSize().height + this._private__bottomPane._internal_getSize().height;\n        const pixelStretchFactor = totalStretch / totalHeight;\n        const minPaneStretch = 30 /* SeparatorConstants.MinPaneHeight */ * pixelStretchFactor;\n        if (totalStretch <= minPaneStretch * 2) {\n            // cannot resize panes that already have less than minimal height\n            // that's possible if there are many panes on the chart\n            return;\n        }\n        this._private__resizeInfo = {\n            _internal_startY: event.pageY,\n            _internal_prevStretchTopPane: this._private__topPane._internal_state()._internal_stretchFactor(),\n            _internal_maxPaneStretch: totalStretch - minPaneStretch,\n            _internal_totalStretch: totalStretch,\n            _internal_pixelStretchFactor: pixelStretchFactor,\n            _internal_minPaneStretch: minPaneStretch,\n        };\n        this._private__handle._internal_backgroundElement.style.display = 'block';\n    }\n    _private__pressedMouseMoveEvent(event) {\n        const resizeInfo = this._private__resizeInfo;\n        if (resizeInfo === null) {\n            return;\n        }\n        const deltaY = event.pageY - resizeInfo._internal_startY;\n        const deltaStretchFactor = deltaY * resizeInfo._internal_pixelStretchFactor;\n        const upperPaneNewStretch = clamp(resizeInfo._internal_prevStretchTopPane + deltaStretchFactor, resizeInfo._internal_minPaneStretch, resizeInfo._internal_maxPaneStretch);\n        this._private__topPane._internal_state()._internal_setStretchFactor(upperPaneNewStretch);\n        this._private__bottomPane._internal_state()._internal_setStretchFactor(resizeInfo._internal_totalStretch - upperPaneNewStretch);\n        this._private__chartWidget._internal_model()._internal_fullUpdate();\n    }\n    _private__mouseUpEvent(event) {\n        if (this._private__resizeInfo === null || this._private__handle === null) {\n            return;\n        }\n        this._private__resizeInfo = null;\n        this._private__handle._internal_backgroundElement.style.display = 'none';\n    }\n}\n\nfunction distanceBetweenPoints(pos1, pos2) {\n    return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n    const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n    return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n    const lnDumpingCoeff = Math.log(dumpingCoeff);\n    return Math.log((1 /* Constants.EpsilonDistance */ * lnDumpingCoeff) / -speed) / (lnDumpingCoeff);\n}\nclass KineticAnimation {\n    constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n        this._private__position1 = null;\n        this._private__position2 = null;\n        this._private__position3 = null;\n        this._private__position4 = null;\n        this._private__animationStartPosition = null;\n        this._private__durationMsecs = 0;\n        this._private__speedPxPerMsec = 0;\n        this._private__minSpeed = minSpeed;\n        this._private__maxSpeed = maxSpeed;\n        this._private__dumpingCoeff = dumpingCoeff;\n        this._private__minMove = minMove;\n    }\n    _internal_addPosition(position, time) {\n        if (this._private__position1 !== null) {\n            if (this._private__position1._internal_time === time) {\n                this._private__position1._internal_position = position;\n                return;\n            }\n            if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n                return;\n            }\n        }\n        this._private__position4 = this._private__position3;\n        this._private__position3 = this._private__position2;\n        this._private__position2 = this._private__position1;\n        this._private__position1 = { _internal_time: time, _internal_position: position };\n    }\n    _internal_start(position, time) {\n        if (this._private__position1 === null || this._private__position2 === null) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n        if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n            return;\n        }\n        // To calculate all the rest parameters we should calculate the speed af first\n        let totalDistance = 0;\n        const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n        const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n        // We're calculating weighted average speed\n        // Than more distance for a segment, than more its weight\n        const speedItems = [speed1];\n        const distanceItems = [distance1];\n        totalDistance += distance1;\n        if (this._private__position3 !== null) {\n            const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n            // stop at this moment if direction of the segment is opposite\n            if (Math.sign(speed2) === Math.sign(speed1)) {\n                const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n                speedItems.push(speed2);\n                distanceItems.push(distance2);\n                totalDistance += distance2;\n                if (this._private__position4 !== null) {\n                    const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n                    if (Math.sign(speed3) === Math.sign(speed1)) {\n                        const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n                        speedItems.push(speed3);\n                        distanceItems.push(distance3);\n                        totalDistance += distance3;\n                    }\n                }\n            }\n        }\n        let resultSpeed = 0;\n        for (let i = 0; i < speedItems.length; ++i) {\n            resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n        }\n        if (Math.abs(resultSpeed) < this._private__minSpeed) {\n            return;\n        }\n        this._private__animationStartPosition = { _internal_position: position, _internal_time: time };\n        this._private__speedPxPerMsec = resultSpeed;\n        this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n    }\n    _internal_getPosition(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const durationMsecs = time - startPosition._internal_time;\n        return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / (Math.log(this._private__dumpingCoeff));\n    }\n    _internal_finished(time) {\n        return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n    }\n    _private__progressDuration(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const progress = time - startPosition._internal_time;\n        return Math.min(progress, this._private__durationMsecs);\n    }\n}\n\nconst svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"19\" fill=\"none\"><g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path fill=\"var(--stroke)\" d=\"M2 0H0v10h6v9h21.4l.5-1.3 6-15 1-2.7H23.7l-.5 1.3-.2.6a5 5 0 0 0-7-.9V0H2Zm20 17h4l5.2-13 .8-2h-7l-1 2.5-.2.5-1.5 3.8-.3.7V17Zm-.8-10a3 3 0 0 0 .7-2.7A3 3 0 1 0 16.8 7h4.4ZM14 7V2H2v6h6v9h4V7h2Z\"/><path fill=\"var(--fill)\" d=\"M14 2H2v6h6v9h6V2Zm12 15h-7l6-15h7l-6 15Zm-7-9a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/></g><defs><clipPath id=\"a\"><path fill=\"var(--stroke)\" d=\"M0 0h35v19H0z\"/></clipPath></defs></svg>`;\nconst css = `a#tv-attr-logo{--fill:#131722;--stroke:#fff;position:absolute;left:10px;bottom:10px;height:19px;width:35px;margin:0;padding:0;border:0;z-index:3;}a#tv-attr-logo[data-dark]{--fill:#D1D4DC;--stroke:#131722;}`;\n// This widget doesn't support dynamically responding to options changes\n// because it is expected that the `attributionLogo` option won't be changed\n// and this saves some bundle size.\nclass AttributionLogoWidget {\n    constructor(container, chart) {\n        this._private__element = undefined;\n        this._private__cssElement = undefined;\n        this._private__theme = undefined;\n        this._private__visible = false;\n        this._private__container = container;\n        this._private__chart = chart;\n        this._private__render();\n    }\n    _internal_update() {\n        this._private__render();\n    }\n    _internal_removeElement() {\n        if (this._private__element) {\n            this._private__container.removeChild(this._private__element);\n        }\n        if (this._private__cssElement) {\n            this._private__container.removeChild(this._private__cssElement);\n        }\n        this._private__element = undefined;\n        this._private__cssElement = undefined;\n    }\n    _private__shouldUpdate() {\n        return this._private__visible !== this._private__shouldBeVisible() || this._private__theme !== this._private__themeToUse();\n    }\n    _private__themeToUse() {\n        return this._private__chart._internal_model()._internal_colorParser()._internal_colorStringToGrayscale(this._private__chart._internal_options()['layout'].textColor) > 160\n            ? 'dark'\n            : 'light';\n    }\n    _private__shouldBeVisible() {\n        return this._private__chart._internal_options()['layout'].attributionLogo;\n    }\n    _private__getUTMSource() {\n        const url = new URL(location.href);\n        if (!url.hostname) {\n            // ignore local testing\n            return '';\n        }\n        return '&utm_source=' + url.hostname + url.pathname;\n    }\n    _private__render() {\n        if (!this._private__shouldUpdate()) {\n            return;\n        }\n        this._internal_removeElement();\n        this._private__visible = this._private__shouldBeVisible();\n        if (this._private__visible) {\n            this._private__theme = this._private__themeToUse();\n            this._private__cssElement = document.createElement('style');\n            this._private__cssElement.innerText = css;\n            this._private__element = document.createElement('a');\n            this._private__element.href = `https://www.tradingview.com/?utm_medium=lwc-link&utm_campaign=lwc-chart${this._private__getUTMSource()}`;\n            this._private__element.title = 'Charting by TradingView';\n            this._private__element.id = 'tv-attr-logo';\n            this._private__element.target = '_blank';\n            this._private__element.innerHTML = svg;\n            this._private__element.toggleAttribute('data-dark', this._private__theme === 'dark');\n            this._private__container.appendChild(this._private__cssElement);\n            this._private__container.appendChild(this._private__element);\n        }\n    }\n}\n\nfunction createBoundCanvas(parentElement, size) {\n    const doc = ensureNotNull(parentElement.ownerDocument);\n    const canvas = doc.createElement('canvas');\n    parentElement.appendChild(canvas);\n    const binding = bindCanvasElementBitmapSizeTo(canvas, {\n        type: 'device-pixel-content-box',\n        options: {\n            allowResizeObserver: true,\n        },\n        transform: (bitmapSize, canvasElementClientSize) => ({\n            width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n            height: Math.max(bitmapSize.height, canvasElementClientSize.height),\n        }),\n    });\n    binding.resizeCanvasElement(size);\n    return binding;\n}\nfunction releaseCanvas(canvas) {\n    // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n    // Seems that iOS Safari stores canvas elements for some additional time internally.\n    // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n    // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.getContext('2d')?.clearRect(0, 0, 1, 1);\n}\n\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n    if (renderer._internal_drawBackground) {\n        renderer._internal_drawBackground(target, isHovered, hitTestData);\n    }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n    renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourceViews(paneViewsGetter, drawRendererFn, source, pane) {\n    const views = paneViewsGetter(source, pane);\n    for (const view of views) {\n        const renderer = view._internal_renderer(pane);\n        if (renderer !== null) {\n            drawRendererFn(renderer);\n        }\n    }\n}\n\nfunction hasPriceScale(source) {\n    return source._internal_priceScale !== undefined;\n}\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n    return (source) => {\n        if (!hasPriceScale(source)) {\n            return [];\n        }\n        const psId = source._internal_priceScale()?._internal_id() ?? '';\n        if (psId !== priceScaleId) {\n            // exclude if source is using a different price scale.\n            return [];\n        }\n        return source._internal_pricePaneViews?.(zOrder) ?? [];\n    };\n}\nfunction recalculateOverlapping(views, direction, scaleHeight, rendererOptions) {\n    if (!views.length) {\n        return;\n    }\n    let currentGroupStart = 0;\n    const initLabelHeight = views[0]._internal_height(rendererOptions, true);\n    let spaceBeforeCurrentGroup = direction === 1\n        ? scaleHeight / 2 - (views[0]._internal_getFixedCoordinate() - initLabelHeight / 2)\n        : views[0]._internal_getFixedCoordinate() - initLabelHeight / 2 - scaleHeight / 2;\n    spaceBeforeCurrentGroup = Math.max(0, spaceBeforeCurrentGroup);\n    for (let i = 1; i < views.length; i++) {\n        const view = views[i];\n        const prev = views[i - 1];\n        const height = prev._internal_height(rendererOptions, false);\n        const coordinate = view._internal_getFixedCoordinate();\n        const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n        const overlap = direction === 1\n            ? coordinate > prevFixedCoordinate - height\n            : coordinate < prevFixedCoordinate + height;\n        if (overlap) {\n            const fixedCoordinate = prevFixedCoordinate - height * direction;\n            view._internal_setFixedCoordinate(fixedCoordinate);\n            const edgePoint = fixedCoordinate - direction * height / 2;\n            const outOfViewport = direction === 1 ? edgePoint < 0 : edgePoint > scaleHeight;\n            if (outOfViewport && spaceBeforeCurrentGroup > 0) {\n                // shift the whole group up or down\n                const desiredGroupShift = direction === 1 ? -1 - edgePoint : edgePoint - scaleHeight;\n                const possibleShift = Math.min(desiredGroupShift, spaceBeforeCurrentGroup);\n                for (let k = currentGroupStart; k < views.length; k++) {\n                    views[k]._internal_setFixedCoordinate(views[k]._internal_getFixedCoordinate() + direction * possibleShift);\n                }\n                spaceBeforeCurrentGroup -= possibleShift;\n            }\n        }\n        else {\n            currentGroupStart = i;\n            spaceBeforeCurrentGroup = direction === 1\n                ? prevFixedCoordinate - height - coordinate\n                : coordinate - (prevFixedCoordinate + height);\n        }\n    }\n}\nfunction priceScaleCrosshairLabelVisible(crosshair) {\n    return crosshair.mode !== 2 /* CrosshairMode.Hidden */ && crosshair.horzLine.visible && crosshair.horzLine.labelVisible;\n}\nclass PriceAxisWidget {\n    constructor(pane, options, rendererOptionsProvider, side) {\n        this._private__priceScale = null;\n        this._private__size = null;\n        this._private__mousedown = false;\n        this._private__widthCache = new TextWidthCache(200);\n        this._private__font = null;\n        this._private__prevOptimalWidth = 0;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__pane = pane;\n        this._private__options = options;\n        this._private__layoutOptions = options['layout'];\n        this._private__rendererOptionsProvider = rendererOptionsProvider;\n        this._private__isLeft = side === 'left';\n        this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n        this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n        this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.left = '0';\n        this._private__cell.style.position = 'relative';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        const handler = {\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n            _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n            _internal_treatVertTouchDragAsPageScroll: () => !this._private__options['handleScroll'].vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = null;\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_rendererOptions() {\n        const options = this._private__rendererOptionsProvider._internal_options();\n        const isFontChanged = this._private__font !== options._internal_font;\n        if (isFontChanged) {\n            this._private__widthCache._internal_reset();\n            this._private__font = options._internal_font;\n        }\n        return options;\n    }\n    _internal_optimalWidth() {\n        if (this._private__priceScale === null) {\n            return 0;\n        }\n        let tickMarkMaxWidth = 0;\n        const rendererOptions = this._internal_rendererOptions();\n        const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d', {\n            colorSpace: this._private__pane._internal_chart()._internal_options().layout.colorSpace,\n        }));\n        ctx.save();\n        const tickMarks = this._private__priceScale._internal_marks();\n        ctx.font = this._private__baseFont();\n        if (tickMarks.length > 0) {\n            tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n        }\n        const views = this._private__backLabels();\n        for (let j = views.length; j--;) {\n            const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n            if (width > tickMarkMaxWidth) {\n                tickMarkMaxWidth = width;\n            }\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (firstValue !== null &&\n            this._private__size !== null &&\n            priceScaleCrosshairLabelVisible(this._private__options.crosshair)) {\n            const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n            const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n            tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n        }\n        ctx.restore();\n        const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n        const res = Math.ceil(rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingInner +\n            rendererOptions._internal_paddingOuter +\n            5 /* Constants.LabelOffset */ +\n            resultTickMarksMaxWidth);\n        // make it even, remove this after migration to perfect fancy canvas\n        return suggestPriceScaleWidth(res);\n    }\n    _internal_setSize(newSize) {\n        if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__topCanvasBinding.resizeCanvasElement(newSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n        }\n    }\n    _internal_getWidth() {\n        return ensureNotNull(this._private__size).width;\n    }\n    _internal_setPriceScale(priceScale) {\n        if (this._private__priceScale === priceScale) {\n            return;\n        }\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = priceScale;\n        priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n    }\n    _internal_priceScale() {\n        return this._private__priceScale;\n    }\n    _internal_reset() {\n        const pane = this._private__pane._internal_state();\n        const model = this._private__pane._internal_chart()._internal_model();\n        model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n    }\n    _internal_paint(type) {\n        if (this._private__size === null) {\n            return;\n        }\n        const canvasOptions = {\n            colorSpace: this._private__pane._internal_chart()._internal_options().layout.colorSpace,\n        };\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__alignLabels();\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n                this._private__drawTickMarks(target);\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n                this._private__drawBackLabels(target);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshairLabel(topTarget);\n            this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the price scale\n        this._private__priceScale?._internal_marks();\n    }\n    _private__mouseDownEvent(e) {\n        if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = true;\n        model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n    }\n    _private__pressedMouseMoveEvent(e) {\n        if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        model._internal_scalePriceTo(pane, priceScale, e.localY);\n    }\n    _private__mouseDownOutsideEvent() {\n        if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        if (this._private__mousedown) {\n            this._private__mousedown = false;\n            model._internal_endScalePrice(pane, priceScale);\n        }\n    }\n    _private__mouseUpEvent(e) {\n        if (this._private__priceScale === null || !this._private__options['handleScale'].axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = false;\n        model._internal_endScalePrice(pane, this._private__priceScale);\n    }\n    _private__mouseDoubleClickEvent(e) {\n        if (this._private__options['handleScale'].axisDoubleClickReset.price) {\n            this._internal_reset();\n        }\n    }\n    _private__mouseEnterEvent(e) {\n        if (this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        if (model._internal_options()['handleScale'].axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n            this._private__setCursor(1 /* CursorType.NsResize */);\n        }\n    }\n    _private__mouseLeaveEvent(e) {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _private__backLabels() {\n        const res = [];\n        const priceScale = (this._private__priceScale === null) ? undefined : this._private__priceScale;\n        const addViewsForSources = (sources) => {\n            for (let i = 0; i < sources.length; ++i) {\n                const source = sources[i];\n                const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n                for (let j = 0; j < views.length; j++) {\n                    res.push(views[j]);\n                }\n            }\n        };\n        // calculate max and min coordinates for views on selection\n        // crosshair individually\n        addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n        return res;\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__pane._internal_state()._internal_model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, topColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio }) {\n        if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n            return;\n        }\n        ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n        const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n        let left;\n        if (this._private__isLeft) {\n            left = bitmapSize.width - borderSize;\n        }\n        else {\n            left = 0;\n        }\n        ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n    }\n    _private__drawTickMarks(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const tickMarks = this._private__priceScale._internal_marks();\n        const priceScaleOptions = this._private__priceScale._internal_options();\n        const rendererOptions = this._internal_rendererOptions();\n        const tickMarkLeftX = this._private__isLeft ?\n            (this._private__size.width - rendererOptions._internal_tickLength) :\n            0;\n        if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.fillStyle = priceScaleOptions.borderColor;\n                const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n                const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n                const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n                ctx.beginPath();\n                for (const tickMark of tickMarks) {\n                    ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = this._private__baseFont();\n            ctx.fillStyle = priceScaleOptions.textColor ?? this._private__layoutOptions.textColor;\n            ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            const textLeftX = this._private__isLeft ?\n                Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) :\n                Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n            const yMidCorrections = tickMarks.map((mark) => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n            for (let i = tickMarks.length; i--;) {\n                const tickMark = tickMarks[i];\n                ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n            }\n        });\n    }\n    _private__alignLabels() {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        let center = this._private__size.height / 2;\n        const views = [];\n        const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n        const pane = this._private__pane;\n        const paneState = pane._internal_state();\n        const rendererOptions = this._internal_rendererOptions();\n        // if we are default price scale, append labels from no-scale\n        const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n        if (isDefault) {\n            this._private__pane._internal_state()._internal_orderedSources().forEach((source) => {\n                if (paneState._internal_isOverlay(source)) {\n                    orderedSources.push(source);\n                }\n            });\n        }\n        // we can use any, but let's use the first source as \"center\" one\n        const centerSource = this._private__priceScale._internal_dataSources()[0];\n        const priceScale = this._private__priceScale;\n        const updateForSources = (sources) => {\n            sources.forEach((source) => {\n                const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n                // never align selected sources\n                sourceViews.forEach((view) => {\n                    view._internal_setFixedCoordinate(null);\n                    if (view._internal_isVisible()) {\n                        views.push(view);\n                    }\n                });\n                if (centerSource === source && sourceViews.length > 0) {\n                    center = sourceViews[0]._internal_coordinate();\n                }\n            });\n        };\n        // crosshair individually\n        updateForSources(orderedSources);\n        views.forEach((view) => view._internal_setFixedCoordinate(view._internal_coordinate()));\n        const options = this._private__priceScale._internal_options();\n        if (!options.alignLabels) {\n            return;\n        }\n        this._private__fixLabelOverlap(views, rendererOptions, center);\n    }\n    _private__fixLabelOverlap(views, rendererOptions, center) {\n        if (this._private__size === null) {\n            return;\n        }\n        // split into two parts\n        const top = views.filter((view) => view._internal_coordinate() <= center);\n        const bottom = views.filter((view) => view._internal_coordinate() > center);\n        // sort top from center to top\n        top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n        // share center label\n        if (top.length && bottom.length) {\n            bottom.push(top[0]);\n        }\n        bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n        for (const view of views) {\n            const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n            const coordinate = view._internal_coordinate();\n            if (coordinate > -halfHeight && coordinate < halfHeight) {\n                view._internal_setFixedCoordinate(halfHeight);\n            }\n            if (coordinate > (this._private__size.height - halfHeight) && coordinate < this._private__size.height + halfHeight) {\n                view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n            }\n        }\n        recalculateOverlapping(top, 1, this._private__size.height, rendererOptions);\n        recalculateOverlapping(bottom, -1, this._private__size.height, rendererOptions);\n    }\n    _private__drawBackLabels(target) {\n        if (this._private__size === null) {\n            return;\n        }\n        const views = this._private__backLabels();\n        const rendererOptions = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((view) => {\n            if (view._internal_isAxisLabelVisible()) {\n                const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n                renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n            }\n        });\n    }\n    _private__drawCrosshairLabel(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const views = []; // array of arrays\n        const pane = this._private__pane._internal_state();\n        const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n        if (v.length) {\n            views.push(v);\n        }\n        const ro = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((arr) => {\n            arr.forEach((view) => {\n                view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n            });\n        });\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n    }\n    _private__onMarksChanged() {\n        const width = this._internal_optimalWidth();\n        // avoid price scale is shrunk\n        // using < instead !== to avoid infinite changes\n        if (this._private__prevOptimalWidth < width) {\n            this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n        }\n        this._private__prevOptimalWidth = width;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n    }\n}\n\nfunction sourceBottomPaneViews$1(source, pane) {\n    return source._internal_bottomPaneViews?.(pane) ?? [];\n}\nfunction sourcePaneViews$1(source, pane) {\n    return source._internal_paneViews?.(pane) ?? [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n    return source._internal_labelPaneViews?.(pane) ?? [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n    return source._internal_topPaneViews?.(pane) ?? [];\n}\nclass PaneWidget {\n    constructor(chart, state) {\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__leftPriceAxisWidget = null;\n        this._private__rightPriceAxisWidget = null;\n        this._private__attributionLogoWidget = null;\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__prevPinchScale = 0;\n        this._private__longTap = false;\n        this._private__startTrackPoint = null;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__initCrosshairPosition = null;\n        this._private__scrollXAnimation = null;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__chart = chart;\n        this._private__state = state;\n        this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n        this._private__paneCell = document.createElement('td');\n        this._private__paneCell.style.padding = '0';\n        this._private__paneCell.style.position = 'relative';\n        const paneWrapper = document.createElement('div');\n        paneWrapper.style.width = '100%';\n        paneWrapper.style.height = '100%';\n        paneWrapper.style.position = 'relative';\n        paneWrapper.style.overflow = 'hidden';\n        this._private__leftAxisCell = document.createElement('td');\n        this._private__leftAxisCell.style.padding = '0';\n        this._private__rightAxisCell = document.createElement('td');\n        this._private__rightAxisCell.style.padding = '0';\n        this._private__paneCell.appendChild(paneWrapper);\n        this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.appendChild(this._private__leftAxisCell);\n        this._private__rowElement.appendChild(this._private__paneCell);\n        this._private__rowElement.appendChild(this._private__rightAxisCell);\n        this._internal_updatePriceAxisWidgetsStates();\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options()['handleScroll'].vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options()['handleScroll'].horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_destroy();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_destroy();\n        }\n        this._private__attributionLogoWidget = null;\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n            this._private__state._internal_destroy();\n        }\n        this._private__mouseEventHandler._internal_destroy();\n    }\n    _internal_state() {\n        return ensureNotNull(this._private__state);\n    }\n    _internal_setState(pane) {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = pane;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n        }\n        this._internal_updatePriceAxisWidgetsStates();\n        if (this._private__chart._internal_paneWidgets().indexOf(this) === this._private__chart._internal_paneWidgets().length - 1) {\n            this._private__attributionLogoWidget = this._private__attributionLogoWidget ?? new AttributionLogoWidget(this._private__paneCell, this._private__chart);\n            this._private__attributionLogoWidget._internal_update();\n        }\n        else {\n            this._private__attributionLogoWidget?._internal_removeElement();\n            this._private__attributionLogoWidget = null;\n        }\n    }\n    _internal_chart() {\n        return this._private__chart;\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_updatePriceAxisWidgetsStates() {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__recreatePriceAxisWidgets();\n        if (this._private__model()._internal_serieses().length === 0) {\n            return;\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            const leftPriceScale = this._private__state._internal_leftPriceScale();\n            this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            const rightPriceScale = this._private__state._internal_rightPriceScale();\n            this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n        }\n    }\n    _internal_updatePriceAxisWidgets() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_update();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_update();\n        }\n    }\n    _internal_stretchFactor() {\n        return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n    }\n    _internal_setStretchFactor(stretchFactor) {\n        if (this._private__state) {\n            this._private__state._internal_setStretchFactor(stretchFactor);\n        }\n    }\n    _internal_mouseEnterEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseDownEvent(event) {\n        this._private__onMouseEvent();\n        this._private__mouseTouchDownEvent();\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseMoveEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_mouseDoubleClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n    }\n    _internal_doubleTapEvent(event) {\n        this._internal_mouseDoubleClickEvent(event);\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        this._private__onMouseEvent();\n        this._private__pressedMouseTouchMoveEvent(event);\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseUpEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__longTap = false;\n        this._private__endScroll(event);\n    }\n    _internal_tapEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_longTapEvent(event) {\n        this._private__longTap = true;\n        if (this._private__startTrackPoint === null) {\n            const point = { x: event.localX, y: event.localY };\n            this._private__startTrackingMode(point, point, event);\n        }\n    }\n    _internal_mouseLeaveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__state._internal_model()._internal_setHoveredSource(null);\n        this._private__clearCrosshairPosition();\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_pinchStartEvent() {\n        this._private__prevPinchScale = 1;\n        this._private__model()._internal_stopTimeScaleAnimation();\n    }\n    _internal_pinchEvent(middlePoint, scale) {\n        if (!this._private__chart._internal_options()['handleScale'].pinch) {\n            return;\n        }\n        const zoomScale = (scale - this._private__prevPinchScale) * 5;\n        this._private__prevPinchScale = scale;\n        this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n    }\n    _internal_touchStartEvent(event) {\n        this._private__longTap = false;\n        this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n        this._private__mouseTouchDownEvent();\n        const crosshair = this._private__model()._internal_crosshairSource();\n        if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n            this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n            this._private__startTrackPoint = { x: event.localX, y: event.localY };\n        }\n    }\n    _internal_touchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__startTrackPoint !== null) {\n            // tracking mode: move crosshair\n            this._private__exitTrackingModeOnNextTry = false;\n            const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n            const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n            const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n            this._private__setCrosshairPosition(newX, newY, event);\n            return;\n        }\n        this._private__pressedMouseTouchMoveEvent(event);\n    }\n    _internal_touchEndEvent(event) {\n        if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n            this._private__exitTrackingModeOnNextTry = true;\n        }\n        this._private__tryExitTrackingMode();\n        this._private__endScroll(event);\n    }\n    _internal_hitTest(x, y) {\n        const state = this._private__state;\n        if (state === null) {\n            return null;\n        }\n        return hitTestPane(state, x, y);\n    }\n    _internal_setPriceAxisSize(width, position) {\n        const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n        ensureNotNull(priceAxisWidget)._internal_setSize(size$1({ width, height: this._private__size.height }));\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (equalSizes(this._private__size, newSize)) {\n            return;\n        }\n        this._private__size = newSize;\n        this._private__isSettingSize = true;\n        this._private__canvasBinding.resizeCanvasElement(newSize);\n        this._private__topCanvasBinding.resizeCanvasElement(newSize);\n        this._private__isSettingSize = false;\n        this._private__paneCell.style.width = newSize.width + 'px';\n        this._private__paneCell.style.height = newSize.height + 'px';\n    }\n    _internal_recalculatePriceScales() {\n        const pane = ensureNotNull(this._private__state);\n        pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n        pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n        for (const source of pane._internal_dataSources()) {\n            if (pane._internal_isOverlay(source)) {\n                const priceScale = source._internal_priceScale();\n                if (priceScale !== null) {\n                    pane._internal_recalculatePriceScale(priceScale);\n                }\n                // for overlay drawings price scale is owner's price scale\n                // however owner's price scale could not contain ds\n                source._internal_updateAllViews();\n            }\n        }\n        for (const primitive of pane._internal_primitives()) {\n            primitive._internal_updateAllViews();\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (this._private__state === null) {\n            return;\n        }\n        if (type > 1 /* InvalidationLevel.Cursor */) {\n            this._internal_recalculatePriceScales();\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_paint(type);\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_paint(type);\n        }\n        const canvasOptions = {\n            colorSpace: this._private__chart._internal_options().layout.colorSpace,\n        };\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                });\n                if (this._private__state) {\n                    this._private__drawSources(target, sourceBottomPaneViews$1);\n                    this._private__drawGrid(target);\n                    this._private__drawSources(target, sourcePaneViews$1);\n                    this._private__drawSources(target, sourceLabelPaneViews);\n                }\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshair(topTarget);\n            this._private__drawSources(topTarget, sourceTopPaneViews$1);\n            this._private__drawSources(topTarget, sourceLabelPaneViews);\n        }\n    }\n    _internal_leftPriceAxisWidget() {\n        return this._private__leftPriceAxisWidget;\n    }\n    _internal_rightPriceAxisWidget() {\n        return this._private__rightPriceAxisWidget;\n    }\n    _internal_drawAdditionalSources(target, paneViewsGetter) {\n        this._private__drawSources(target, paneViewsGetter);\n    }\n    _private__onStateDestroyed() {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = null;\n    }\n    _private__fireClickedDelegate(event) {\n        this._private__fireMouseClickDelegate(this._private__clicked, event);\n    }\n    _private__fireMouseClickDelegate(delegate, event) {\n        const x = event.localX;\n        const y = event.localY;\n        if (delegate._internal_hasListeners()) {\n            delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), { x, y }, event);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, bottomColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawGrid(target) {\n        const state = ensureNotNull(this._private__state);\n        const paneView = state._internal_grid()._internal_paneView();\n        const renderer = paneView._internal_renderer(state);\n        if (renderer !== null) {\n            renderer._internal_draw(target, false);\n        }\n    }\n    _private__drawCrosshair(target) {\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n    }\n    _private__drawSources(target, paneViewsGetter) {\n        const state = ensureNotNull(this._private__state);\n        const sources = state._internal_orderedSources();\n        const panePrimitives = state._internal_primitives();\n        for (const panePrimitive of panePrimitives) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, panePrimitive);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n        }\n        for (const panePrimitive of panePrimitives) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, panePrimitive);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n        }\n    }\n    _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n        const state = ensureNotNull(this._private__state);\n        const hoveredSource = state._internal_model()._internal_hoveredSource();\n        const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n        const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_hitTestData\n            : undefined;\n        const drawRendererFn = (renderer) => drawFn(renderer, target, isHovered, objecId);\n        drawSourceViews(paneViewsGetter, drawRendererFn, source, state);\n    }\n    _private__recreatePriceAxisWidgets() {\n        if (this._private__state === null) {\n            return;\n        }\n        const chart = this._private__chart;\n        const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n        const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n        if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n            this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n            this._private__leftPriceAxisWidget._internal_destroy();\n            this._private__leftPriceAxisWidget = null;\n        }\n        if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n            this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n            this._private__rightPriceAxisWidget._internal_destroy();\n            this._private__rightPriceAxisWidget = null;\n        }\n        const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n        if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n            this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n            this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n        }\n        if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n            this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n            this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n        }\n    }\n    _private__preventScroll(event) {\n        return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n    }\n    _private__correctXCoord(x) {\n        return Math.max(0, Math.min(x, this._private__size.width - 1));\n    }\n    _private__correctYCoord(y) {\n        return Math.max(0, Math.min(y, this._private__size.height - 1));\n    }\n    _private__setCrosshairPosition(x, y, event) {\n        this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n    }\n    _private__clearCrosshairPosition() {\n        this._private__model()._internal_clearCurrentPosition();\n    }\n    _private__tryExitTrackingMode() {\n        if (this._private__exitTrackingModeOnNextTry) {\n            this._private__startTrackPoint = null;\n            this._private__clearCrosshairPosition();\n        }\n    }\n    _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n        this._private__startTrackPoint = startTrackPoint;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n        const crosshair = this._private__model()._internal_crosshairSource();\n        this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n    }\n    _private__model() {\n        return this._private__chart._internal_model();\n    }\n    _private__endScroll(event) {\n        if (!this._private__isScrolling) {\n            return;\n        }\n        const model = this._private__model();\n        const state = this._internal_state();\n        model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        model._internal_endScrollTime();\n        if (this._private__scrollXAnimation !== null) {\n            const startAnimationTime = performance.now();\n            const timeScale = model._internal_timeScale();\n            this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n            if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n                model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n            }\n        }\n    }\n    _private__onMouseEvent() {\n        this._private__startTrackPoint = null;\n    }\n    _private__mouseTouchDownEvent() {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__model()._internal_stopTimeScaleAnimation();\n        if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n            // If any focusable element except the page itself is focused, remove the focus\n            ensureNotNull(document.activeElement).blur();\n        }\n        else {\n            // Clear selection\n            const selection = document.getSelection();\n            if (selection !== null) {\n                selection.removeAllRanges();\n            }\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n            return;\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__pressedMouseTouchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const model = this._private__model();\n        const timeScale = model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        const chartOptions = this._private__chart._internal_options();\n        const scrollOptions = chartOptions['handleScroll'];\n        const kineticScrollOptions = chartOptions.kineticScroll;\n        if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) &&\n            (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n            return;\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        const now = performance.now();\n        if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n            this._private__startScrollingPos = {\n                x: event.clientX,\n                y: event.clientY,\n                _internal_timestamp: now,\n                _internal_localX: event.localX,\n                _internal_localY: event.localY,\n            };\n        }\n        if (this._private__startScrollingPos !== null &&\n            !this._private__isScrolling &&\n            (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n            if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n                const barSpacing = timeScale._internal_barSpacing();\n                this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n            }\n            else {\n                this._private__scrollXAnimation = null;\n            }\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n            }\n            model._internal_startScrollTime(event.localX);\n            this._private__isScrolling = true;\n        }\n        if (this._private__isScrolling) {\n            // this allows scrolling not default price scales\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n            }\n            model._internal_scrollTimeTo(event.localX);\n            if (this._private__scrollXAnimation !== null) {\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n            }\n        }\n    }\n}\n\nclass PriceAxisStub {\n    constructor(side, options, params, borderVisible, bottomColor) {\n        this._private__invalidated = true;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n        this._private__isLeft = side === 'left';\n        this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n        this._private__options = options;\n        this._private__borderVisible = borderVisible;\n        this._private__bottomColor = bottomColor;\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    }\n    _internal_destroy() {\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (!equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n            this._private__invalidated = true;\n        }\n    }\n    _internal_paint(type) {\n        if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n            return;\n        }\n        if (this._private__size.width === 0 || this._private__size.height === 0) {\n            return;\n        }\n        this._private__invalidated = false;\n        this._private__canvasBinding.applySuggestedBitmapSize();\n        const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, {\n            colorSpace: this._private__options.layout.colorSpace,\n        });\n        if (target !== null) {\n            target.useBitmapCoordinateSpace((scope) => {\n                this._private__drawBackground(scope);\n                this._private__drawBorder(scope);\n            });\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (!this._private__borderVisible()) {\n            return;\n        }\n        ctx.fillStyle = this._private__options.timeScale.borderColor;\n        const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n        const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n        const left = (this._private__isLeft) ? bitmapSize.width - horzBorderSize : 0;\n        ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n    }\n}\n\nfunction buildTimeAxisViewsGetter(zOrder) {\n    return (source) => source._internal_timePaneViews?.(zOrder) ?? [];\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n    constructor(chartWidget, horzScaleBehavior) {\n        this._private__leftStub = null;\n        this._private__rightStub = null;\n        this._private__rendererOptions = null;\n        this._private__mouseDown = false;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__sizeChanged = new Delegate();\n        this._private__widthCache = new TextWidthCache(5);\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__chart = chartWidget;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__options = chartWidget._internal_options()['layout'];\n        this._private__element = document.createElement('tr');\n        this._private__leftStubCell = document.createElement('td');\n        this._private__leftStubCell.style.padding = '0';\n        this._private__rightStubCell = document.createElement('td');\n        this._private__rightStubCell.style.padding = '0';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.height = '25px';\n        this._private__cell.style.padding = '0';\n        this._private__dv = document.createElement('div');\n        this._private__dv.style.width = '100%';\n        this._private__dv.style.height = '100%';\n        this._private__dv.style.position = 'relative';\n        this._private__dv.style.overflow = 'hidden';\n        this._private__cell.appendChild(this._private__dv);\n        this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__element.appendChild(this._private__leftStubCell);\n        this._private__element.appendChild(this._private__cell);\n        this._private__element.appendChild(this._private__rightStubCell);\n        this._private__recreateStubs();\n        this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => true,\n            _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options()['handleScroll'].horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_destroy();\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__element;\n    }\n    _internal_leftStub() {\n        return this._private__leftStub;\n    }\n    _internal_rightStub() {\n        return this._private__rightStub;\n    }\n    _internal_mouseDownEvent(event) {\n        if (this._private__mouseDown) {\n            return;\n        }\n        this._private__mouseDown = true;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_startScaleTime(event.localX);\n    }\n    _internal_touchStartEvent(event) {\n        this._internal_mouseDownEvent(event);\n    }\n    _internal_mouseDownOutsideEvent() {\n        const model = this._private__chart._internal_model();\n        if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n            this._private__mouseDown = false;\n            if (this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n                model._internal_endScaleTime();\n            }\n        }\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_scaleTimeTo(event.localX);\n    }\n    _internal_touchMoveEvent(event) {\n        this._internal_pressedMouseMoveEvent(event);\n    }\n    _internal_mouseUpEvent() {\n        this._private__mouseDown = false;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_endScaleTime();\n    }\n    _internal_touchEndEvent() {\n        this._internal_mouseUpEvent();\n    }\n    _internal_mouseDoubleClickEvent() {\n        if (this._private__chart._internal_options()['handleScale'].axisDoubleClickReset.time) {\n            this._private__chart._internal_model()._internal_resetTimeScale();\n        }\n    }\n    _internal_doubleTapEvent() {\n        this._internal_mouseDoubleClickEvent();\n    }\n    _internal_mouseEnterEvent() {\n        if (this._private__chart._internal_model()._internal_options()['handleScale'].axisPressedMouseMove.time) {\n            this._private__setCursor(1 /* CursorType.EwResize */);\n        }\n    }\n    _internal_mouseLeaveEvent() {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_sizeChanged() {\n        return this._private__sizeChanged;\n    }\n    _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n        if (!equalSizes(this._private__size, timeAxisSize)) {\n            this._private__size = timeAxisSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${timeAxisSize.width}px`;\n            this._private__cell.style.height = `${timeAxisSize.height}px`;\n            this._private__sizeChanged._internal_fire(timeAxisSize);\n        }\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_setSize(size$1({ width: leftStubWidth, height: timeAxisSize.height }));\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_setSize(size$1({ width: rightStubWidth, height: timeAxisSize.height }));\n        }\n    }\n    _internal_optimalHeight() {\n        const rendererOptions = this._private__getRendererOptions();\n        return Math.ceil(\n        // rendererOptions.offsetSize +\n        rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_paddingBottom +\n            rendererOptions._internal_labelBottomOffset);\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the time scale\n        this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        const canvasOptions = {\n            colorSpace: this._private__options.colorSpace,\n        };\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding, canvasOptions);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                    this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n                });\n                this._private__drawTickMarks(target);\n                this._private__drawAdditionalSources(target, sourcePaneViews);\n                // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n                // so let's don't call this code at all for now\n                // this._drawLabels(this._chart.model().dataSources(), target);\n            }\n            if (this._private__leftStub !== null) {\n                this._private__leftStub._internal_paint(type);\n            }\n            if (this._private__rightStub !== null) {\n                this._private__rightStub._internal_paint(type);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding, canvasOptions);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n            this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n        }\n    }\n    _private__drawAdditionalSources(target, axisViewsGetter) {\n        const sources = this._private__chart._internal_model()._internal_serieses();\n        for (const source of sources) {\n            drawSourceViews(axisViewsGetter, (renderer) => drawBackground(renderer, target, false, undefined), source, undefined);\n        }\n        for (const source of sources) {\n            drawSourceViews(axisViewsGetter, (renderer) => drawForeground(renderer, target, false, undefined), source, undefined);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, verticalPixelRatio }) {\n        if (this._private__chart._internal_options().timeScale.borderVisible) {\n            ctx.fillStyle = this._private__lineColor();\n            const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n            ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n        }\n    }\n    _private__drawTickMarks(target) {\n        const timeScale = this._private__chart._internal_model()._internal_timeScale();\n        const tickMarks = timeScale._internal_marks();\n        if (!tickMarks || tickMarks.length === 0) {\n            return;\n        }\n        const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n        const rendererOptions = this._private__getRendererOptions();\n        const options = timeScale._internal_options();\n        if (options.borderVisible && options.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.strokeStyle = this._private__lineColor();\n                ctx.fillStyle = this._private__lineColor();\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.beginPath();\n                const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n                for (let index = tickMarks.length; index--;) {\n                    const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n                    ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const yText = (rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._private__textColor();\n            // draw base marks\n            ctx.font = this._private__baseFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight < maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n            if (this._private__chart._internal_options().timeScale.allowBoldLabels) {\n                ctx.font = this._private__baseBoldFont();\n            }\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight >= maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n        });\n    }\n    _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n        const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n        const labelWidthHalf = labelWidth / 2;\n        const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (leftTextCoordinate < 0) {\n            coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n        }\n        else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n            coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n        }\n        return coordinate;\n    }\n    _private__drawLabels(sources, target) {\n        const rendererOptions = this._private__getRendererOptions();\n        for (const source of sources) {\n            for (const view of source._internal_timeAxisViews()) {\n                view._internal_renderer()._internal_draw(target, rendererOptions);\n            }\n        }\n    }\n    _private__lineColor() {\n        return this._private__chart._internal_options().timeScale.borderColor;\n    }\n    _private__textColor() {\n        return this._private__options.textColor;\n    }\n    _private__fontSize() {\n        return this._private__options.fontSize;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n    }\n    _private__baseBoldFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n    }\n    _private__getRendererOptions() {\n        if (this._private__rendererOptions === null) {\n            this._private__rendererOptions = {\n                _internal_borderSize: 1 /* Constants.BorderSize */,\n                _internal_baselineOffset: NaN,\n                _internal_paddingTop: NaN,\n                _internal_paddingBottom: NaN,\n                _internal_paddingHorizontal: NaN,\n                _internal_tickLength: 5 /* Constants.TickLength */,\n                _internal_fontSize: NaN,\n                _internal_font: '',\n                _internal_widthCache: new TextWidthCache(),\n                _internal_labelBottomOffset: 0,\n            };\n        }\n        const rendererOptions = this._private__rendererOptions;\n        const newFont = this._private__baseFont();\n        if (rendererOptions._internal_font !== newFont) {\n            const fontSize = this._private__fontSize();\n            rendererOptions._internal_fontSize = fontSize;\n            rendererOptions._internal_font = newFont;\n            rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n            rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n            rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n            rendererOptions._internal_baselineOffset = 0;\n            rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n            rendererOptions._internal_widthCache._internal_reset();\n        }\n        return this._private__rendererOptions;\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n    }\n    _private__recreateStubs() {\n        const model = this._private__chart._internal_model();\n        const options = model._internal_options();\n        if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n            this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n            this._private__leftStub._internal_destroy();\n            this._private__leftStub = null;\n        }\n        if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n            this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n            this._private__rightStub._internal_destroy();\n            this._private__rightStub = null;\n        }\n        const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n        const params = {\n            _internal_rendererOptionsProvider: rendererOptionsProvider,\n        };\n        const borderVisibleGetter = () => {\n            return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n        };\n        const bottomColorGetter = () => model._internal_backgroundBottomColor();\n        if (options.leftPriceScale.visible && this._private__leftStub === null) {\n            this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n        }\n        if (options.rightPriceScale.visible && this._private__rightStub === null) {\n            this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n        }\n    }\n}\n\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n    constructor(container, options, horzScaleBehavior) {\n        this._private__paneWidgets = [];\n        this._private__paneSeparators = [];\n        this._private__drawRafId = 0;\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__leftPriceAxisWidth = 0;\n        this._private__rightPriceAxisWidth = 0;\n        this._private__invalidateMask = null;\n        this._private__drawPlanned = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__observer = null;\n        this._private__cursorStyleOverride = null;\n        this._private__container = container;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__element = document.createElement('div');\n        this._private__element.classList.add('tv-lightweight-charts');\n        this._private__element.style.overflow = 'hidden';\n        this._private__element.style.direction = 'ltr';\n        this._private__element.style.width = '100%';\n        this._private__element.style.height = '100%';\n        disableSelection(this._private__element);\n        this._private__tableElement = document.createElement('table');\n        this._private__tableElement.setAttribute('cellspacing', '0');\n        this._private__element.appendChild(this._private__tableElement);\n        this._private__onWheelBound = this._private__onMousewheel.bind(this);\n        if (shouldSubscribeMouseWheel(this._private__options)) {\n            this._private__setMouseWheelEventListener(true);\n        }\n        this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n        this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n        this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n        this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n        const usedObserver = options.autoSize && this._private__installObserver();\n        // observer could not fire event immediately for some cases\n        // so we have to set initial size manually\n        let width = this._private__options.width;\n        let height = this._private__options.height;\n        // ignore width/height options if observer has actually been used\n        // however respect options if installing resize observer failed\n        if (usedObserver || width === 0 || height === 0) {\n            const containerRect = container.getBoundingClientRect();\n            width = width || containerRect.width;\n            height = height || containerRect.height;\n        }\n        // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n        // or after but with adjustSize to properly update time scale\n        this._internal_resize(width, height);\n        this._private__syncGuiWithModel();\n        container.appendChild(this._private__element);\n        this._private__updateTimeAxisVisibility();\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneWidgets() {\n        return this._private__paneWidgets;\n    }\n    _internal_timeAxisWidget() {\n        return this._private__timeAxisWidget;\n    }\n    _internal_destroy() {\n        this._private__setMouseWheelEventListener(false);\n        if (this._private__drawRafId !== 0) {\n            window.cancelAnimationFrame(this._private__drawRafId);\n        }\n        this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__model._internal_destroy();\n        for (const paneWidget of this._private__paneWidgets) {\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n        }\n        this._private__paneWidgets = [];\n        for (const paneSeparator of this._private__paneSeparators) {\n            this._private__destroySeparator(paneSeparator);\n        }\n        this._private__paneSeparators = [];\n        ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n        if (this._private__element.parentElement !== null) {\n            this._private__element.parentElement.removeChild(this._private__element);\n        }\n        this._private__crosshairMoved._internal_destroy();\n        this._private__clicked._internal_destroy();\n        this._private__dblClicked._internal_destroy();\n        this._private__uninstallObserver();\n    }\n    _internal_resize(width, height, forceRepaint = false) {\n        if (this._private__height === height && this._private__width === width) {\n            return;\n        }\n        const sizeHint = suggestChartSize(size$1({ width, height }));\n        this._private__height = sizeHint.height;\n        this._private__width = sizeHint.width;\n        const heightStr = this._private__height + 'px';\n        const widthStr = this._private__width + 'px';\n        ensureNotNull(this._private__element).style.height = heightStr;\n        ensureNotNull(this._private__element).style.width = widthStr;\n        this._private__tableElement.style.height = heightStr;\n        this._private__tableElement.style.width = widthStr;\n        if (forceRepaint) {\n            this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n        }\n        else {\n            this._private__model._internal_fullUpdate();\n        }\n    }\n    _internal_paint(invalidateMask) {\n        if (invalidateMask === undefined) {\n            invalidateMask = InvalidateMask._internal_full();\n        }\n        for (let i = 0; i < this._private__paneWidgets.length; i++) {\n            this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n        }\n        if (this._private__options.timeScale.visible) {\n            this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n        }\n    }\n    _internal_applyOptions(options) {\n        const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        // we don't need to merge options here because it's done in chart model\n        // and since both model and widget share the same object it will be done automatically for widget as well\n        // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n        this._private__model._internal_applyOptions(options);\n        const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n            this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n        }\n        if (options['layout']?.panes) {\n            this._private__applyPanesOptions();\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__applyAutoSizeOptions(options);\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_takeScreenshot() {\n        if (this._private__invalidateMask !== null) {\n            this._private__drawImpl(this._private__invalidateMask, performance.now());\n            this._private__invalidateMask = null;\n        }\n        const screeshotBitmapSize = this._private__traverseLayout(null);\n        const screenshotCanvas = document.createElement('canvas');\n        screenshotCanvas.width = screeshotBitmapSize.width;\n        screenshotCanvas.height = screeshotBitmapSize.height;\n        const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n        this._private__traverseLayout(ctx);\n        return screenshotCanvas;\n    }\n    _internal_getPriceAxisWidth(position) {\n        if (position === \"left\" /* DefaultPriceScaleId.Left */ && !this._private__isLeftAxisVisible()) {\n            return 0;\n        }\n        if (position === \"right\" /* DefaultPriceScaleId.Right */ && !this._private__isRightAxisVisible()) {\n            return 0;\n        }\n        if (this._private__paneWidgets.length === 0) {\n            return 0;\n        }\n        // we don't need to worry about exactly pane widget here\n        // because all pane widgets have the same width of price axis widget\n        // see _adjustSizeImpl\n        const priceAxisWidget = position === \"left\" /* DefaultPriceScaleId.Left */\n            ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget()\n            : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n        return ensureNotNull(priceAxisWidget)._internal_getWidth();\n    }\n    _internal_autoSizeActive() {\n        return this._private__options.autoSize && this._private__observer !== null;\n    }\n    _internal_element() {\n        return this._private__element;\n    }\n    _internal_setCursorStyle(style) {\n        this._private__cursorStyleOverride = style;\n        if (this._private__cursorStyleOverride) {\n            this._internal_element().style.setProperty('cursor', style);\n        }\n        else {\n            this._internal_element().style.removeProperty('cursor');\n        }\n    }\n    _internal_getCursorOverrideStyle() {\n        return this._private__cursorStyleOverride;\n    }\n    _internal_paneSize(paneIndex) {\n        return ensureDefined(this._private__paneWidgets[paneIndex])._internal_getSize();\n    }\n    _private__applyPanesOptions() {\n        this._private__paneSeparators.forEach((separator) => {\n            separator._internal_update();\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__applyAutoSizeOptions(options) {\n        if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n            warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n            return;\n        }\n        if (options.autoSize && !this._private__observer) {\n            // installing observer will override resize if successful\n            this._private__installObserver();\n        }\n        if (options.autoSize === false && this._private__observer !== null) {\n            this._private__uninstallObserver();\n        }\n        if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n            this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n        }\n    }\n    /**\n     * Traverses the widget's layout (pane and axis child widgets),\n     * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n     *\n     * @param ctx - if passed, used to draw the screenshot of widget\n     * @returns screenshot bitmap size\n     */\n    _private__traverseLayout(ctx) {\n        let totalWidth = 0;\n        let totalHeight = 0;\n        const firstPane = this._private__paneWidgets[0];\n        const drawPriceAxises = (position, targetX) => {\n            let targetY = 0;\n            for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n                const paneWidget = this._private__paneWidgets[paneIndex];\n                const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n                const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n                if (ctx !== null) {\n                    priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n                }\n                targetY += bitmapSize.height;\n                if (paneIndex < this._private__paneWidgets.length - 1) {\n                    const separator = this._private__paneSeparators[paneIndex];\n                    const separatorBitmapSize = separator._internal_getBitmapSize();\n                    if (ctx !== null) {\n                        separator._internal_drawBitmap(ctx, targetX, targetY);\n                    }\n                    targetY += separatorBitmapSize.height;\n                }\n            }\n        };\n        // draw left price scale if exists\n        if (this._private__isLeftAxisVisible()) {\n            drawPriceAxises('left', 0);\n            const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += leftAxisBitmapWidth;\n        }\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            const bitmapSize = paneWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n            }\n            totalHeight += bitmapSize.height;\n            if (paneIndex < this._private__paneWidgets.length - 1) {\n                const separator = this._private__paneSeparators[paneIndex];\n                const separatorBitmapSize = separator._internal_getBitmapSize();\n                if (ctx !== null) {\n                    separator._internal_drawBitmap(ctx, totalWidth, totalHeight);\n                }\n                totalHeight += separatorBitmapSize.height;\n            }\n        }\n        const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n        totalWidth += firstPaneBitmapWidth;\n        // draw right price scale if exists\n        if (this._private__isRightAxisVisible()) {\n            drawPriceAxises('right', totalWidth);\n            const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += rightAxisBitmapWidth;\n        }\n        const drawStub = (position, targetX, targetY) => {\n            const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n            stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n        };\n        // draw time scale and stubs\n        if (this._private__options.timeScale.visible) {\n            const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                let targetX = 0;\n                if (this._private__isLeftAxisVisible()) {\n                    drawStub('left', targetX, totalHeight);\n                    targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n                }\n                this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n                targetX += timeAxisBitmapSize.width;\n                if (this._private__isRightAxisVisible()) {\n                    drawStub('right', targetX, totalHeight);\n                }\n            }\n            totalHeight += timeAxisBitmapSize.height;\n        }\n        return size$1({\n            width: totalWidth,\n            height: totalHeight,\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__adjustSizeImpl() {\n        let totalStretch = 0;\n        let leftPriceAxisWidth = 0;\n        let rightPriceAxisWidth = 0;\n        for (const paneWidget of this._private__paneWidgets) {\n            if (this._private__isLeftAxisVisible()) {\n                leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n            }\n            if (this._private__isRightAxisVisible()) {\n                rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n            }\n            totalStretch += paneWidget._internal_stretchFactor();\n        }\n        leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n        rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n        const width = this._private__width;\n        const height = this._private__height;\n        const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n        const separatorCount = this._private__paneSeparators.length;\n        const separatorHeight = 1 /* SeparatorConstants.SeparatorHeight */;\n        const separatorsHeight = separatorHeight * separatorCount;\n        const timeAxisVisible = this._private__options.timeScale.visible;\n        let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n        timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n        const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n        const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n        const stretchPixels = totalPaneHeight / totalStretch;\n        let accumulatedHeight = 0;\n        const pixelRatio = window.devicePixelRatio || 1;\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n            let paneHeight = 0;\n            let calculatePaneHeight = 0;\n            if (paneIndex === this._private__paneWidgets.length - 1) {\n                calculatePaneHeight = Math.ceil((totalPaneHeight - accumulatedHeight) * pixelRatio) / pixelRatio;\n            }\n            else {\n                calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels * pixelRatio) / pixelRatio;\n            }\n            paneHeight = Math.max(calculatePaneHeight, 2);\n            accumulatedHeight += paneHeight;\n            paneWidget._internal_setSize(size$1({ width: paneWidth, height: paneHeight }));\n            if (this._private__isLeftAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n            }\n            if (this._private__isRightAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n            }\n            if (paneWidget._internal_state()) {\n                this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n            }\n        }\n        this._private__timeAxisWidget._internal_setSizes(size$1({ width: timeAxisVisible ? paneWidth : 0, height: timeAxisHeight }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n        this._private__model._internal_setWidth(paneWidth);\n        if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n            this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n        }\n        if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n            this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n        }\n    }\n    _private__setMouseWheelEventListener(add) {\n        if (add) {\n            this._private__element.addEventListener('wheel', this._private__onWheelBound, { passive: false });\n            return;\n        }\n        this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n    }\n    _private__determineWheelSpeedAdjustment(event) {\n        switch (event.deltaMode) {\n            case event.DOM_DELTA_PAGE:\n                // one screen at time scroll mode\n                return 120;\n            case event.DOM_DELTA_LINE:\n                // one line at time scroll mode\n                return 32;\n        }\n        if (!windowsChrome) {\n            return 1;\n        }\n        // Chromium on Windows has a bug where the scroll speed isn't correctly\n        // adjusted for high density displays. We need to correct for this so that\n        // scroll speed is consistent between browsers.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n        return (1 / window.devicePixelRatio);\n    }\n    _private__onMousewheel(event) {\n        if ((event.deltaX === 0 || !this._private__options['handleScroll'].mouseWheel) &&\n            (event.deltaY === 0 || !this._private__options['handleScale'].mouseWheel)) {\n            return;\n        }\n        const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n        const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n        const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        if (deltaY !== 0 && this._private__options['handleScale'].mouseWheel) {\n            const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n            const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n            this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n        }\n        if (deltaX !== 0 && this._private__options['handleScroll'].mouseWheel) {\n            this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n        }\n    }\n    _private__drawImpl(invalidateMask, time) {\n        const invalidationType = invalidateMask._internal_fullInvalidation();\n        // actions for full invalidation ONLY (not shared with light)\n        if (invalidationType === 3 /* InvalidationLevel.Full */) {\n            this._private__updateGui();\n        }\n        // light or full invalidate actions\n        if (invalidationType === 3 /* InvalidationLevel.Full */ ||\n            invalidationType === 2 /* InvalidationLevel.Light */) {\n            this._private__applyMomentaryAutoScale(invalidateMask);\n            this._private__applyTimeScaleInvalidations(invalidateMask, time);\n            this._private__timeAxisWidget._internal_update();\n            this._private__paneWidgets.forEach((pane) => {\n                pane._internal_updatePriceAxisWidgets();\n            });\n            // In the case a full invalidation has been postponed during the draw, reapply\n            // the timescale invalidations. A full invalidation would mean there is a change\n            // in the timescale width (caused by price scale changes) that needs to be drawn\n            // right away to avoid flickering.\n            if (this._private__invalidateMask?._internal_fullInvalidation() === 3 /* InvalidationLevel.Full */) {\n                this._private__invalidateMask._internal_merge(invalidateMask);\n                this._private__updateGui();\n                this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n                this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n                invalidateMask = this._private__invalidateMask;\n                this._private__invalidateMask = null;\n            }\n        }\n        this._internal_paint(invalidateMask);\n    }\n    _private__applyTimeScaleInvalidations(invalidateMask, time) {\n        for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n        }\n    }\n    _private__applyMomentaryAutoScale(invalidateMask) {\n        const panes = this._private__model._internal_panes();\n        for (let i = 0; i < panes.length; i++) {\n            if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n                panes[i]._internal_momentaryAutoScale();\n            }\n        }\n    }\n    _private__applyTimeScaleInvalidation(invalidation, time) {\n        const timeScale = this._private__model._internal_timeScale();\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                timeScale._internal_fitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                timeScale._internal_setLogicalRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                timeScale._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                timeScale._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                timeScale._internal_restoreDefault();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                if (!invalidation._internal_value._internal_finished(time)) {\n                    timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n                }\n                break;\n        }\n    }\n    _private__invalidateHandler(invalidateMask) {\n        if (this._private__invalidateMask !== null) {\n            this._private__invalidateMask._internal_merge(invalidateMask);\n        }\n        else {\n            this._private__invalidateMask = invalidateMask;\n        }\n        if (!this._private__drawPlanned) {\n            this._private__drawPlanned = true;\n            this._private__drawRafId = window.requestAnimationFrame((time) => {\n                this._private__drawPlanned = false;\n                this._private__drawRafId = 0;\n                if (this._private__invalidateMask !== null) {\n                    const mask = this._private__invalidateMask;\n                    this._private__invalidateMask = null;\n                    this._private__drawImpl(mask, time);\n                    for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n                        if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n                            this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n    }\n    _private__updateGui() {\n        this._private__syncGuiWithModel();\n    }\n    _private__destroySeparator(separator) {\n        this._private__tableElement.removeChild(separator._internal_getElement());\n        separator._internal_destroy();\n    }\n    _private__syncGuiWithModel() {\n        const panes = this._private__model._internal_panes();\n        const targetPaneWidgetsCount = panes.length;\n        const actualPaneWidgetsCount = this._private__paneWidgets.length;\n        // Remove (if needed) pane widgets and separators\n        for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n            const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n            const paneSeparator = this._private__paneSeparators.pop();\n            if (paneSeparator !== undefined) {\n                this._private__destroySeparator(paneSeparator);\n            }\n        }\n        // Create (if needed) new pane widgets and separators\n        for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n            const paneWidget = new PaneWidget(this, panes[i]);\n            paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this, paneWidget), this);\n            paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this, paneWidget), this);\n            this._private__paneWidgets.push(paneWidget);\n            // create and insert separator\n            if (i > 0) {\n                const paneSeparator = new PaneSeparator(this, i - 1, i);\n                this._private__paneSeparators.push(paneSeparator);\n                this._private__tableElement.insertBefore(paneSeparator._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n            }\n            // insert paneWidget\n            this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n        }\n        for (let i = 0; i < targetPaneWidgetsCount; i++) {\n            const state = panes[i];\n            const paneWidget = this._private__paneWidgets[i];\n            if (paneWidget._internal_state() !== state) {\n                paneWidget._internal_setState(state);\n            }\n            else {\n                paneWidget._internal_updatePriceAxisWidgetsStates();\n            }\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__adjustSizeImpl();\n    }\n    _private__getMouseEventParamsImpl(index, point, event, pane) {\n        const seriesData = new Map();\n        if (index !== null) {\n            const serieses = this._private__model._internal_serieses();\n            serieses.forEach((s) => {\n                // TODO: replace with search left\n                const data = s._internal_bars()._internal_search(index);\n                if (data !== null) {\n                    seriesData.set(s, data);\n                }\n            });\n        }\n        let clientTime;\n        if (index !== null) {\n            const timePoint = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)?.originalTime;\n            if (timePoint !== undefined) {\n                clientTime = timePoint;\n            }\n        }\n        const hoveredSource = this._internal_model()._internal_hoveredSource();\n        const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series\n            ? hoveredSource._internal_source\n            : undefined;\n        const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_externalId\n            : undefined;\n        const paneIndex = this._private__getPaneIndex(pane);\n        return {\n            _internal_originalTime: clientTime,\n            _internal_index: index ?? undefined,\n            _internal_point: point ?? undefined,\n            _internal_paneIndex: paneIndex !== -1 ? paneIndex : undefined,\n            _internal_hoveredSeries: hoveredSeries,\n            _internal_seriesData: seriesData,\n            _internal_hoveredObject: hoveredObject,\n            _internal_touchMouseEventData: event ?? undefined,\n        };\n    }\n    _private__getPaneIndex(pane) {\n        let paneIndex = -1;\n        if (pane) {\n            paneIndex = this._private__paneWidgets.indexOf(pane);\n        }\n        else {\n            const crosshairPane = this._internal_model()._internal_crosshairSource()._internal_pane();\n            if (crosshairPane !== null) {\n                paneIndex = this._internal_model()._internal_panes().indexOf(crosshairPane);\n            }\n        }\n        return paneIndex;\n    }\n    _private__onPaneWidgetClicked(pane, time, point, event) {\n        this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event, pane));\n    }\n    _private__onPaneWidgetDblClicked(pane, time, point, event) {\n        this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event, pane));\n    }\n    _private__onPaneWidgetCrosshairMoved(time, point, event) {\n        this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__updateTimeAxisVisibility() {\n        const display = this._private__options.timeScale.visible ? '' : 'none';\n        this._private__timeAxisWidget._internal_getElement().style.display = display;\n    }\n    _private__isLeftAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n    }\n    _private__isRightAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n    }\n    _private__installObserver() {\n        // eslint-disable-next-line no-restricted-syntax\n        if (!('ResizeObserver' in window)) {\n            warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n            return false;\n        }\n        else {\n            this._private__observer = new ResizeObserver((entries) => {\n                // There is no need to check if entry.target === this._container since there is only\n                // a single element being observed.\n                // and we want to use the last entry (if multiple) because it would be most up to date\n                // (since the browser may batch multiple updates).\n                const containerEntry = entries[entries.length - 1];\n                if (!containerEntry) {\n                    // this may be undefined if the entries array was empty.\n                    return;\n                }\n                this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n            });\n            this._private__observer.observe(this._private__container, { box: 'border-box' });\n            return true;\n        }\n    }\n    _private__uninstallObserver() {\n        if (this._private__observer !== null) {\n            this._private__observer.disconnect();\n        }\n        this._private__observer = null;\n    }\n}\nfunction disableSelection(element) {\n    element.style.userSelect = 'none';\n    // eslint-disable-next-line deprecation/deprecation\n    element.style.webkitUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.msUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.MozUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n    return Boolean(options['handleScroll'].mouseWheel || options['handleScale'].mouseWheel);\n}\n\nfunction isWhitespaceData(data) {\n    return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n    return isFulfilledBarData(data) || isFulfilledLineData(data);\n}\nfunction isFulfilledBarData(data) {\n    return data.open !== undefined;\n}\nfunction isFulfilledLineData(data) {\n    return data.value !== undefined;\n}\n\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.lineColor !== undefined) {\n        res._internal_lineColor = item.lineColor;\n    }\n    if (item.topColor !== undefined) {\n        res._internal_topColor = item.topColor;\n    }\n    if (item.bottomColor !== undefined) {\n        res._internal_bottomColor = item.bottomColor;\n    }\n    return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.topLineColor !== undefined) {\n        res._internal_topLineColor = item.topLineColor;\n    }\n    if (item.bottomLineColor !== undefined) {\n        res._internal_bottomLineColor = item.bottomLineColor;\n    }\n    if (item.topFillColor1 !== undefined) {\n        res._internal_topFillColor1 = item.topFillColor1;\n    }\n    if (item.topFillColor2 !== undefined) {\n        res._internal_topFillColor2 = item.topFillColor2;\n    }\n    if (item.bottomFillColor1 !== undefined) {\n        res._internal_bottomFillColor1 = item.bottomFillColor1;\n    }\n    if (item.bottomFillColor2 !== undefined) {\n        res._internal_bottomFillColor2 = item.bottomFillColor2;\n    }\n    return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    if (item.borderColor !== undefined) {\n        res._internal_borderColor = item.borderColor;\n    }\n    if (item.wickColor !== undefined) {\n        res._internal_wickColor = item.wickColor;\n    }\n    return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n    const values = ensureDefined(dataToPlotRow)(item);\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const last = values[values.length - 1];\n    const value = [last, max, min, last];\n    const { time: excludedTime, color, ...data } = item;\n    return { _internal_index: index, _internal_time: time, _internal_value: value, _internal_originalTime: originalTime, _internal_data: data, _internal_color: color };\n}\nfunction isSeriesPlotRow(row) {\n    return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n    if (bar.customValues !== undefined) {\n        plotRow._internal_customValues = bar.customValues;\n    }\n    return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n    if (customIsWhitespace) {\n        return customIsWhitespace(bar);\n    }\n    return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n    return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n        if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n            return wrapCustomValues({ _internal_time: time, _internal_index: index, _internal_originalTime: originalTime }, bar);\n        }\n        return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n    };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n    const seriesPlotRowFnMap = {\n        Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n        Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n        Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n        Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n        Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Custom: wrapWhitespaceData(getCustomSeriesPlotRow),\n    };\n    return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n    return { _internal_index: 0, _internal_mapping: new Map(), _internal_timePoint: timePoint };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n    if (seriesRows === undefined || seriesRows.length === 0) {\n        return undefined;\n    }\n    return {\n        _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n        _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time),\n    };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n    const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n    const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n    if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n        return {\n            _internal_historicalUpdate: false,\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime &&\n                firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime,\n        };\n    }\n    return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n    let result;\n    mergedPointData.forEach((v) => {\n        if (result === undefined) {\n            result = v._internal_originalTime;\n        }\n    });\n    return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n    if (data._internal_originalTime === undefined) {\n        data._internal_originalTime = data.time;\n    }\n}\nclass DataLayer {\n    constructor(horzScaleBehavior) {\n        // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n        // it's just different kind of maps to make usages/perf better\n        this._private__pointDataByTimePoint = new Map();\n        this._private__seriesRowsBySeries = new Map();\n        this._private__seriesLastTimePoint = new Map();\n        // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n        this._private__sortedTimePoints = [];\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__pointDataByTimePoint.clear();\n        this._private__seriesRowsBySeries.clear();\n        this._private__seriesLastTimePoint.clear();\n        this._private__sortedTimePoints = [];\n    }\n    _internal_setSeriesData(series, data) {\n        let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n        let isTimeScaleAffected = false;\n        // save previous series rows data before it's replaced inside this._setRowsToSeries\n        const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n        if (prevSeriesRows !== undefined) {\n            if (this._private__seriesRowsBySeries.size === 1) {\n                needCleanupPoints = false;\n                isTimeScaleAffected = true;\n                // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n                this._private__pointDataByTimePoint.clear();\n            }\n            else {\n                // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n                // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n                for (const point of this._private__sortedTimePoints) {\n                    if (point.pointData._internal_mapping.delete(series)) {\n                        isTimeScaleAffected = true;\n                    }\n                }\n            }\n        }\n        let seriesRows = [];\n        if (data.length !== 0) {\n            const originalTimes = data.map((d) => d.time);\n            const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n            const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n            const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n            const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n            seriesRows = data.map((item, index) => {\n                const time = timeConverter(item.time);\n                const horzItemKey = this._private__horzScaleBehavior.key(time);\n                let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n                if (timePointData === undefined) {\n                    // the indexes will be sync later\n                    timePointData = createEmptyTimePointData(time);\n                    this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n                    isTimeScaleAffected = true;\n                }\n                const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n                timePointData._internal_mapping.set(series, row);\n                return row;\n            });\n        }\n        if (needCleanupPoints) {\n            // we deleted the old data from mapping and added the new ones\n            // so there might be empty points now, let's remove them first\n            this._private__cleanupPointsData();\n        }\n        this._private__setRowsToSeries(series, seriesRows);\n        let firstChangedPointIndex = -1;\n        if (isTimeScaleAffected) {\n            // then generate the time scale points\n            // timeWeight will be updates in _updateTimeScalePoints later\n            const newTimeScalePoints = [];\n            this._private__pointDataByTimePoint.forEach((pointData) => {\n                newTimeScalePoints.push({\n                    timeWeight: 0,\n                    time: pointData._internal_timePoint,\n                    pointData,\n                    originalTime: timeScalePointTime(pointData._internal_mapping),\n                });\n            });\n            newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n            firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n        }\n        return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n    }\n    _internal_removeSeries(series) {\n        return this._internal_setSeriesData(series, []);\n    }\n    _internal_updateSeriesData(series, data, historicalUpdate) {\n        const extendedData = data;\n        saveOriginalTime(extendedData);\n        // convertStringToBusinessDay(data);\n        this._private__horzScaleBehavior.preprocessData(data);\n        const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n        const time = timeConverter(data.time);\n        const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n        if (!historicalUpdate && lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n        }\n        let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n        if (historicalUpdate && pointDataAtTime === undefined) {\n            throw new Error('Cannot update non-existing data point when historicalUpdate is true');\n        }\n        // if no point data found for the new data item\n        // that means that we need to update scale\n        const affectsTimeScale = pointDataAtTime === undefined;\n        if (pointDataAtTime === undefined) {\n            // the indexes will be sync later\n            pointDataAtTime = createEmptyTimePointData(time);\n            this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n        }\n        const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n        const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n        pointDataAtTime._internal_mapping.set(series, plotRow);\n        if (historicalUpdate) {\n            this._private__updateHistoricalSeriesRow(series, plotRow, pointDataAtTime._internal_index);\n        }\n        else {\n            this._private__updateLastSeriesRow(series, plotRow);\n        }\n        const info = {\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow),\n            _internal_historicalUpdate: historicalUpdate,\n        };\n        // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n        if (!affectsTimeScale) {\n            return this._private__getUpdateResponse(series, -1, info);\n        }\n        const newPoint = {\n            timeWeight: 0,\n            time: pointDataAtTime._internal_timePoint,\n            pointData: pointDataAtTime,\n            originalTime: timeScalePointTime(pointDataAtTime._internal_mapping),\n        };\n        const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        // yes, I know that this array is readonly and this change is intended to make it performative\n        // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n        // but this place is exceptional case due performance reasons, sorry\n        this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n        for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n            assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n        }\n        this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n        return this._private__getUpdateResponse(series, insertIndex, info);\n    }\n    _private__updateLastSeriesRow(series, plotRow) {\n        let seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            seriesData = [];\n            this._private__seriesRowsBySeries.set(series, seriesData);\n        }\n        const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n        if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData.push(plotRow);\n            }\n        }\n        else {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData[seriesData.length - 1] = plotRow;\n            }\n            else {\n                seriesData.splice(-1, 1);\n            }\n        }\n        this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n    }\n    _private__updateHistoricalSeriesRow(series, plotRow, pointDataIndex) {\n        const seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            return;\n        }\n        // binary search for actual index in array.\n        const index = lowerBound(seriesData, pointDataIndex, (row, currentIndex) => row._internal_index < currentIndex);\n        if (isSeriesPlotRow(plotRow)) {\n            seriesData[index] = plotRow;\n        }\n        else {\n            seriesData.splice(index, 1);\n        }\n    }\n    _private__setRowsToSeries(series, seriesRows) {\n        if (seriesRows.length !== 0) {\n            this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n            this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n        }\n        else {\n            this._private__seriesRowsBySeries.delete(series);\n            this._private__seriesLastTimePoint.delete(series);\n        }\n    }\n    _private__cleanupPointsData() {\n        // let's treat all current points as \"potentially removed\"\n        // we could create an array with actually potentially removed points\n        // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n        // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n        for (const point of this._private__sortedTimePoints) {\n            if (point.pointData._internal_mapping.size === 0) {\n                this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n            }\n        }\n    }\n    /**\n     * Sets new time scale and make indexes valid for all series\n     *\n     * @returns The index of the first changed point or `-1` if there is no change.\n     */\n    _private__replaceTimeScalePoints(newTimePoints) {\n        let firstChangedPointIndex = -1;\n        // search the first different point and \"syncing\" time weight by the way\n        for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n            const oldPoint = this._private__sortedTimePoints[index];\n            const newPoint = newTimePoints[index];\n            if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n                firstChangedPointIndex = index;\n                break;\n            }\n            // re-assign point's time weight for points if time is the same (and all prior times was the same)\n            newPoint.timeWeight = oldPoint.timeWeight;\n            assignIndexToPointData(newPoint.pointData, index);\n        }\n        if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n            // the common part of the prev and the new points are the same\n            // so the first changed point is the next after the common part\n            firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n        }\n        if (firstChangedPointIndex === -1) {\n            // if no time scale changed, then do nothing\n            return -1;\n        }\n        // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n        // but first we need to synchronize indexes and re-fill time weights\n        for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n            assignIndexToPointData(newTimePoints[index].pointData, index);\n        }\n        // re-fill time weights for point after the first changed one\n        this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n        this._private__sortedTimePoints = newTimePoints;\n        return firstChangedPointIndex;\n    }\n    _private__getBaseIndex() {\n        if (this._private__seriesRowsBySeries.size === 0) {\n            // if we have no data then 'reset' the base index to null\n            return null;\n        }\n        let baseIndex = 0;\n        this._private__seriesRowsBySeries.forEach((data) => {\n            if (data.length !== 0) {\n                baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n            }\n        });\n        return baseIndex;\n    }\n    _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n        const dataUpdateResponse = {\n            _internal_series: new Map(),\n            _internal_timeScale: {\n                _internal_baseIndex: this._private__getBaseIndex(),\n            },\n        };\n        if (firstChangedPointIndex !== -1) {\n            // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n            // but let's skip for now\n            this._private__seriesRowsBySeries.forEach((data, s) => {\n                dataUpdateResponse._internal_series.set(s, {\n                    _internal_data: data,\n                    _internal_info: s === updatedSeries ? info : undefined,\n                });\n            });\n            // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n            // meaning the forEach above won't add the series to the data update response\n            // so we handle that case here\n            if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n                dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: [], _internal_info: info });\n            }\n            dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n            dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n        }\n        else {\n            const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n            // if no seriesData found that means that we just removed the series\n            dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: seriesData || [], _internal_info: info });\n        }\n        return dataUpdateResponse;\n    }\n}\nfunction assignIndexToPointData(pointData, index) {\n    // first, nevertheless update index of point data (\"make it valid\")\n    pointData._internal_index = index;\n    // and then we need to sync indexes for all series\n    pointData._internal_mapping.forEach((seriesRow) => {\n        seriesRow._internal_index = index;\n    });\n}\n\nfunction lowerBoundItemsCompare(item, time) {\n    return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n    return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n    const firstBar = range._internal_left();\n    const lastBar = range._internal_right();\n    const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n    const to = upperBound(items, lastBar, upperBoundItemsCompare);\n    if (!extendedRange) {\n        return { from, to };\n    }\n    let extendedFrom = from;\n    let extendedTo = to;\n    if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n        extendedFrom = from - 1;\n    }\n    if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n        extendedTo = to + 1;\n    }\n    return { from: extendedFrom, to: extendedTo };\n}\n\nclass SeriesPaneViewBase {\n    constructor(series, model, extendedVisibleRange) {\n        this._internal__invalidated = true;\n        this._internal__dataInvalidated = true;\n        this._internal__optionsInvalidated = true;\n        this._internal__items = [];\n        this._internal__itemsVisibleRange = null;\n        this._internal__series = series;\n        this._internal__model = model;\n        this._private__extendedVisibleRange = extendedVisibleRange;\n    }\n    _internal_update(updateType) {\n        this._internal__invalidated = true;\n        if (updateType === 'data') {\n            this._internal__dataInvalidated = true;\n        }\n        if (updateType === 'options') {\n            this._internal__optionsInvalidated = true;\n        }\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        this._private__makeValid();\n        return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n    }\n    _internal__updateOptions() {\n        this._internal__items = this._internal__items.map((item) => ({\n            ...item,\n            ...this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time),\n        }));\n    }\n    _internal__clearVisibleRange() {\n        this._internal__itemsVisibleRange = null;\n    }\n    _private__makeValid() {\n        if (this._internal__dataInvalidated) {\n            this._internal__fillRawPoints();\n            this._internal__dataInvalidated = false;\n        }\n        if (this._internal__optionsInvalidated) {\n            this._internal__updateOptions();\n            this._internal__optionsInvalidated = false;\n        }\n        if (this._internal__invalidated) {\n            this._private__makeValidImpl();\n            this._internal__invalidated = false;\n        }\n    }\n    _private__makeValidImpl() {\n        const priceScale = this._internal__series._internal_priceScale();\n        const timeScale = this._internal__model._internal_timeScale();\n        this._internal__clearVisibleRange();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return;\n        }\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        if (this._internal__series._internal_bars()._internal_size() === 0) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n        this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n        this._internal__prepareRendererData();\n    }\n}\n\nclass CustomSeriesPaneRendererWrapper {\n    constructor(sourceRenderer, priceScale) {\n        this._private__sourceRenderer = sourceRenderer;\n        this._private__priceScale = priceScale;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n    }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n    constructor(series, model, paneView) {\n        super(series, model, false);\n        this._private__paneView = paneView;\n        this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), (price) => {\n            const firstValue = series._internal_firstValue();\n            if (firstValue === null) {\n                return null;\n            }\n            return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n        });\n    }\n    _internal_priceValueBuilder(plotRow) {\n        return this._private__paneView.priceValueBuilder(plotRow);\n    }\n    _internal_isWhitespace(data) {\n        return this._private__paneView.isWhitespace(data);\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows()\n            .map((row) => {\n            return {\n                _internal_time: row._internal_index,\n                _internal_x: NaN,\n                ...colorer._internal_barStyle(row._internal_index),\n                _internal_originalData: row._internal_data,\n            };\n        });\n    }\n    _internal__convertToCoordinates(priceScale, timeScale) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__prepareRendererData() {\n        this._private__paneView.update({\n            bars: this._internal__items.map(unwrapItemData),\n            barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            visibleRange: this._internal__itemsVisibleRange,\n        }, this._internal__series._internal_options());\n    }\n}\nfunction unwrapItemData(item) {\n    return {\n        x: item._internal_x,\n        time: item._internal_time,\n        originalData: item._internal_originalData,\n        barColor: item._internal_barColor,\n    };\n}\n\nconst customStyleDefaults = {\n    color: '#2196f3',\n};\nconst createPaneView$6 = (series, model, customPaneView) => {\n    const paneView = ensure(customPaneView);\n    return new SeriesCustomPaneView(series, model, paneView);\n};\nconst createCustomSeriesDefinition = (paneView) => {\n    const definition = {\n        type: 'Custom',\n        isBuiltIn: false,\n        defaultOptions: { ...customStyleDefaults, ...paneView.defaultOptions() },\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$6,\n        _internal_customPaneView: paneView,\n    };\n    return definition;\n};\n\nconst isSeriesDefinition = (value) => {\n    return value._internal_createPaneView !== undefined;\n};\n\nfunction singleValueData(plotRow) {\n    const data = {\n        value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction lineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction areaData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_lineColor !== undefined) {\n        result.lineColor = plotRow._internal_lineColor;\n    }\n    if (plotRow._internal_topColor !== undefined) {\n        result.topColor = plotRow._internal_topColor;\n    }\n    if (plotRow._internal_bottomColor !== undefined) {\n        result.bottomColor = plotRow._internal_bottomColor;\n    }\n    return result;\n}\nfunction baselineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_topLineColor !== undefined) {\n        result.topLineColor = plotRow._internal_topLineColor;\n    }\n    if (plotRow._internal_bottomLineColor !== undefined) {\n        result.bottomLineColor = plotRow._internal_bottomLineColor;\n    }\n    if (plotRow._internal_topFillColor1 !== undefined) {\n        result.topFillColor1 = plotRow._internal_topFillColor1;\n    }\n    if (plotRow._internal_topFillColor2 !== undefined) {\n        result.topFillColor2 = plotRow._internal_topFillColor2;\n    }\n    if (plotRow._internal_bottomFillColor1 !== undefined) {\n        result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n    }\n    if (plotRow._internal_bottomFillColor2 !== undefined) {\n        result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n    }\n    return result;\n}\nfunction ohlcData(plotRow) {\n    const data = {\n        open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n        high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n        low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n        close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction barData(plotRow) {\n    const result = ohlcData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction candlestickData(plotRow) {\n    const result = ohlcData(plotRow);\n    const { _internal_color: color, _internal_borderColor: borderColor, _internal_wickColor: wickColor } = plotRow;\n    if (color !== undefined) {\n        result.color = color;\n    }\n    if (borderColor !== undefined) {\n        result.borderColor = borderColor;\n    }\n    if (wickColor !== undefined) {\n        result.wickColor = wickColor;\n    }\n    return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n    const seriesPlotRowToDataMap = {\n        Area: (areaData),\n        Line: (lineData),\n        Baseline: (baselineData),\n        Histogram: (lineData),\n        Bar: (barData),\n        Candlestick: (candlestickData),\n        Custom: (customData),\n    };\n    return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n    const time = plotRow._internal_originalTime;\n    return {\n        ...plotRow._internal_data,\n        time,\n    };\n}\n\nconst crosshairOptionsDefaults = {\n    vertLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    horzLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    mode: 1 /* CrosshairMode.Magnet */,\n};\n\nconst gridOptionsDefaults = {\n    vertLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n    horzLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n};\n\nconst layoutOptionsDefaults = {\n    background: {\n        type: \"solid\" /* ColorType.Solid */,\n        color: '#FFFFFF',\n    },\n    textColor: '#191919',\n    fontSize: 12,\n    fontFamily: defaultFontFamily,\n    panes: {\n        enableResize: true,\n        separatorColor: '#E0E3EB',\n        separatorHoverColor: 'rgba(178, 181, 189, 0.2)',\n    },\n    attributionLogo: true,\n    colorSpace: 'srgb',\n    colorParsers: [],\n};\n\nconst priceScaleOptionsDefaults = {\n    autoScale: true,\n    mode: 0 /* PriceScaleMode.Normal */,\n    invertScale: false,\n    alignLabels: true,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    entireTextOnly: false,\n    visible: false,\n    ticksVisible: false,\n    scaleMargins: {\n        bottom: 0.1,\n        top: 0.2,\n    },\n    minimumWidth: 0,\n};\n\nconst timeScaleOptionsDefaults = {\n    rightOffset: 0,\n    barSpacing: 6,\n    minBarSpacing: 0.5,\n    maxBarSpacing: 0,\n    fixLeftEdge: false,\n    fixRightEdge: false,\n    lockVisibleTimeRangeOnResize: false,\n    rightBarStaysOnScroll: false,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    visible: true,\n    timeVisible: false,\n    secondsVisible: true,\n    shiftVisibleRangeOnNewBar: true,\n    allowShiftVisibleRangeOnWhitespaceReplacement: false,\n    ticksVisible: false,\n    uniformDistribution: false,\n    minimumHeight: 0,\n    allowBoldLabels: true,\n    ignoreWhitespaceIndices: false,\n};\n\nfunction chartOptionsDefaults() {\n    return {\n        width: 0,\n        height: 0,\n        autoSize: false,\n        layout: layoutOptionsDefaults,\n        crosshair: crosshairOptionsDefaults,\n        grid: gridOptionsDefaults,\n        overlayPriceScales: {\n            ...priceScaleOptionsDefaults,\n        },\n        leftPriceScale: {\n            ...priceScaleOptionsDefaults,\n            visible: false,\n        },\n        rightPriceScale: {\n            ...priceScaleOptionsDefaults,\n            visible: true,\n        },\n        timeScale: timeScaleOptionsDefaults,\n        localization: {\n            locale: isRunningOnClientSide ? navigator.language : '',\n            dateFormat: 'dd MMM \\'yy',\n        },\n        handleScroll: {\n            mouseWheel: true,\n            pressedMouseMove: true,\n            horzTouchDrag: true,\n            vertTouchDrag: true,\n        },\n        handleScale: {\n            axisPressedMouseMove: {\n                time: true,\n                price: true,\n            },\n            axisDoubleClickReset: {\n                time: true,\n                price: true,\n            },\n            mouseWheel: true,\n            pinch: true,\n        },\n        kineticScroll: {\n            mouse: false,\n            touch: true,\n        },\n        trackingMode: {\n            exitMode: 1 /* TrackingModeExitMode.OnNextTap */,\n        },\n    };\n}\n\nclass PaneApi {\n    constructor(chartWidget, seriesApiGetter, pane, chartApi) {\n        this._private__chartWidget = chartWidget;\n        this._private__pane = pane;\n        this._private__seriesApiGetter = seriesApiGetter;\n        this._internal__chartApi = chartApi;\n    }\n    getHeight() {\n        return this._private__pane._internal_height();\n    }\n    setHeight(height) {\n        const chartModel = this._private__chartWidget._internal_model();\n        const paneIndex = chartModel._internal_getPaneIndex(this._private__pane);\n        chartModel._internal_changePanesHeight(paneIndex, height);\n    }\n    paneIndex() {\n        return this._private__chartWidget._internal_model()._internal_getPaneIndex(this._private__pane);\n    }\n    moveTo(paneIndex) {\n        const currentIndex = this.paneIndex();\n        if (currentIndex === paneIndex) {\n            return;\n        }\n        assert(paneIndex >= 0 && paneIndex < this._private__chartWidget._internal_paneWidgets().length, 'Invalid pane index');\n        this._private__chartWidget._internal_model()._internal_swapPanes(currentIndex, paneIndex);\n    }\n    getSeries() {\n        return this._private__pane._internal_series().map((source) => this._private__seriesApiGetter(source)) ?? [];\n    }\n    getHTMLElement() {\n        return this._private__chartWidget._internal_paneWidgets()[this.paneIndex()]._internal_getElement();\n    }\n    attachPrimitive(primitive) {\n        this._private__pane._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                requestUpdate: () => this._private__pane._internal_model()._internal_fullUpdate(),\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._private__pane._internal_detachPrimitive(primitive);\n    }\n}\n\nclass PriceScaleApi {\n    constructor(chartWidget, priceScaleId) {\n        this._private__chartWidget = chartWidget;\n        this._private__priceScaleId = priceScaleId;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n    }\n    options() {\n        return this._private__priceScale()._internal_options();\n    }\n    width() {\n        if (!isDefaultPriceScale(this._private__priceScaleId)) {\n            return 0;\n        }\n        return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n    }\n    _private__priceScale() {\n        return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n    assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n    if (data.length === 0) {\n        return;\n    }\n    let prevTime = bh.key(data[0].time);\n    for (let i = 1; i < data.length; ++i) {\n        const currentTime = bh.key(data[i].time);\n        const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n        assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n        prevTime = currentTime;\n    }\n}\nfunction checkSeriesValuesType(type, data) {\n    data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n    switch (type) {\n        case 'Bar':\n        case 'Candlestick':\n            return checkBarItem.bind(null, type);\n        case 'Area':\n        case 'Baseline':\n        case 'Line':\n        case 'Histogram':\n            return checkLineItem.bind(null, type);\n        case 'Custom':\n            return checkCustomItem.bind(null);\n    }\n}\nfunction checkBarItem(type, barItem) {\n    if (!isFulfilledData(barItem)) {\n        return;\n    }\n    ['open', 'high', 'low', 'close'].forEach((key) => {\n        assert(typeof barItem[key] === 'number', `${type} series item data value of ${key} must be a number, got=${typeof barItem[key]}, value=${barItem[key]}`);\n        assert(isSafeValue(barItem[key]), `${type} series item data value of ${key} must be between ${MIN_SAFE_VALUE.toPrecision(16)} and ${MAX_SAFE_VALUE.toPrecision(16)}, got=${typeof barItem[key]}, value=${barItem[key]}`);\n    });\n}\nfunction checkLineItem(type, lineItem) {\n    if (!isFulfilledData(lineItem)) {\n        return;\n    }\n    assert(typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n    assert(isSafeValue(lineItem.value), `${type} series item data value must be between ${MIN_SAFE_VALUE.toPrecision(16)} and ${MAX_SAFE_VALUE.toPrecision(16)}, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n// type: 'Custom',\n// customItem: SeriesDataItemTypeMap[typeof type]\n) {\n    // Nothing to check yet...\n    return;\n}\nconst MIN_SAFE_VALUE = Number.MIN_SAFE_INTEGER / 100;\nconst MAX_SAFE_VALUE = Number.MAX_SAFE_INTEGER / 100;\nfunction isSafeValue(value) {\n    return value >= MIN_SAFE_VALUE && value <= MAX_SAFE_VALUE;\n}\n\nconst priceLineOptionsDefaults = {\n    color: '#FF0000',\n    price: 0,\n    lineStyle: 2 /* LineStyle.Dashed */,\n    lineWidth: 1,\n    lineVisible: true,\n    axisLabelVisible: true,\n    title: '',\n    axisLabelColor: '',\n    axisLabelTextColor: '',\n};\n\nclass PriceLine {\n    constructor(priceLine) {\n        this._private__priceLine = priceLine;\n    }\n    applyOptions(options) {\n        this._private__priceLine._internal_applyOptions(options);\n    }\n    options() {\n        return this._private__priceLine._internal_options();\n    }\n    _internal_priceLine() {\n        return this._private__priceLine;\n    }\n}\n\nclass SeriesApi {\n    constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior, paneApiGetter) {\n        this._private__dataChangedDelegate = new Delegate();\n        this._internal__series = series;\n        this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n        this._private__priceScaleApiProvider = priceScaleApiProvider;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._internal__chartApi = chartApi;\n        this._private__paneApiGetter = paneApiGetter;\n    }\n    _internal_destroy() {\n        this._private__dataChangedDelegate._internal_destroy();\n    }\n    priceFormatter() {\n        return this._internal__series._internal_formatter();\n    }\n    priceToCoordinate(price) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    }\n    coordinateToPrice(coordinate) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n    }\n    barsInLogicalRange(range) {\n        if (range === null) {\n            return null;\n        }\n        // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n        const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n        const bars = this._internal__series._internal_bars();\n        if (bars._internal_isEmpty()) {\n            return null;\n        }\n        const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n        const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n        const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n        const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n        // this means that we request data in the data gap\n        // e.g. let's say we have series with data [0..10, 30..60]\n        // and we request bars info in range [15, 25]\n        // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n            return {\n                barsBefore: range.from - dataFirstIndex,\n                barsAfter: dataLastIndex - range.to,\n            };\n        }\n        const barsBefore = (dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex)\n            ? range.from - dataFirstIndex\n            : dataFirstBarInRange._internal_index - dataFirstIndex;\n        const barsAfter = (dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex)\n            ? dataLastIndex - range.to\n            : dataLastIndex - dataLastBarInRange._internal_index;\n        const result = { barsBefore, barsAfter };\n        // actually they can't exist separately\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n            result.from = dataFirstBarInRange._internal_originalTime;\n            result.to = dataLastBarInRange._internal_originalTime;\n        }\n        return result;\n    }\n    setData(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n        this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n        this._private__onDataChanged('full');\n    }\n    update(bar, historicalUpdate = false) {\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n        this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar, historicalUpdate);\n        this._private__onDataChanged('update');\n    }\n    dataByIndex(logicalIndex, mismatchDirection) {\n        const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n        if (data === null) {\n            // actually it can be a whitespace\n            return null;\n        }\n        const creator = getSeriesDataCreator(this.seriesType());\n        return creator(data);\n    }\n    data() {\n        const seriesCreator = getSeriesDataCreator(this.seriesType());\n        const rows = this._internal__series._internal_bars()._internal_rows();\n        return rows.map((row) => seriesCreator(row));\n    }\n    subscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._internal__series._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._internal__series._internal_options());\n    }\n    priceScale() {\n        return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n    }\n    createPriceLine(options) {\n        checkPriceLineOptions(options);\n        const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n        const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n        return new PriceLine(priceLine);\n    }\n    removePriceLine(line) {\n        this._internal__series._internal_removePriceLine(line._internal_priceLine());\n    }\n    priceLines() {\n        return this._internal__series._internal_priceLines().map((priceLine) => new PriceLine(priceLine));\n    }\n    seriesType() {\n        return this._internal__series._internal_seriesType();\n    }\n    attachPrimitive(primitive) {\n        // at this point we cast the generic to unknown because we\n        // don't want the model to know the types of the API (â—‘_â—‘)\n        this._internal__series._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                series: this,\n                requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate(),\n                horzScaleBehavior: this._private__horzScaleBehavior,\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._internal__series._internal_detachPrimitive(primitive);\n        if (primitive.detached) {\n            primitive.detached();\n        }\n        this._internal__series._internal_model()._internal_fullUpdate();\n    }\n    getPane() {\n        const series = this._internal__series;\n        const pane = ensureNotNull(this._internal__series._internal_model()._internal_paneForSource(series));\n        return this._private__paneApiGetter(pane);\n    }\n    moveToPane(paneIndex) {\n        this._internal__series._internal_model()._internal_moveSeriesToPane(this._internal__series, paneIndex);\n    }\n    _private__onDataChanged(scope) {\n        if (this._private__dataChangedDelegate._internal_hasListeners()) {\n            this._private__dataChangedDelegate._internal_fire(scope);\n        }\n    }\n}\n\nclass TimeScaleApi {\n    constructor(model, timeAxisWidget, horzScaleBehavior) {\n        this._private__timeRangeChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__sizeChanged = new Delegate();\n        this._private__model = model;\n        this._private__timeScale = model._internal_timeScale();\n        this._private__timeAxisWidget = timeAxisWidget;\n        this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n        this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n        this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n        this._private__timeRangeChanged._internal_destroy();\n        this._private__logicalRangeChanged._internal_destroy();\n        this._private__sizeChanged._internal_destroy();\n    }\n    scrollPosition() {\n        return this._private__timeScale._internal_rightOffset();\n    }\n    scrollToPosition(position, animated) {\n        if (!animated) {\n            this._private__model._internal_setRightOffset(position);\n            return;\n        }\n        this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n    }\n    scrollToRealTime() {\n        this._private__timeScale._internal_scrollToRealTime();\n    }\n    getVisibleRange() {\n        const timeRange = this._private__timeScale._internal_visibleTimeRange();\n        if (timeRange === null) {\n            return null;\n        }\n        return {\n            from: timeRange.from.originalTime,\n            to: timeRange.to.originalTime,\n        };\n    }\n    setVisibleRange(range) {\n        const convertedRange = {\n            from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n            to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to),\n        };\n        const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n        this._private__model._internal_setTargetLogicalRange(logicalRange);\n    }\n    getVisibleLogicalRange() {\n        const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n        if (logicalRange === null) {\n            return null;\n        }\n        return {\n            from: logicalRange._internal_left(),\n            to: logicalRange._internal_right(),\n        };\n    }\n    setVisibleLogicalRange(range) {\n        assert(range.from <= range.to, 'The from index cannot be after the to index.');\n        this._private__model._internal_setTargetLogicalRange(range);\n    }\n    resetTimeScale() {\n        this._private__model._internal_resetTimeScale();\n    }\n    fitContent() {\n        this._private__model._internal_fitContent();\n    }\n    logicalToCoordinate(logical) {\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return timeScale._internal_indexToCoordinate(logical);\n        }\n    }\n    coordinateToLogical(x) {\n        if (this._private__timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return this._private__timeScale._internal_coordinateToIndex(x);\n        }\n    }\n    timeToIndex(time, findNearest) {\n        const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n        return this._private__timeScale._internal_timeToIndex(timePoint, findNearest);\n    }\n    timeToCoordinate(time) {\n        const timePointIndex = this.timeToIndex(time, false);\n        if (timePointIndex === null) {\n            return null;\n        }\n        return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n    }\n    coordinateToTime(x) {\n        const timeScale = this._private__model._internal_timeScale();\n        const timePointIndex = timeScale._internal_coordinateToIndex(x);\n        const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n        if (timePoint === null) {\n            return null;\n        }\n        return timePoint.originalTime;\n    }\n    width() {\n        return this._private__timeAxisWidget._internal_getSize().width;\n    }\n    height() {\n        return this._private__timeAxisWidget._internal_getSize().height;\n    }\n    subscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_subscribe(handler);\n    }\n    unsubscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._private__timeScale._internal_applyOptions(options);\n    }\n    options() {\n        return {\n            ...clone(this._private__timeScale._internal_options()),\n            barSpacing: this._private__timeScale._internal_barSpacing(),\n        };\n    }\n    _private__onVisibleBarsChanged() {\n        if (this._private__timeRangeChanged._internal_hasListeners()) {\n            this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n        }\n    }\n    _private__onVisibleLogicalRangeChanged() {\n        if (this._private__logicalRangeChanged._internal_hasListeners()) {\n            this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n        }\n    }\n    _private__onSizeChanged(size) {\n        this._private__sizeChanged._internal_fire(size.width, size.height);\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction patchPriceFormat(priceFormat) {\n    if (priceFormat === undefined || priceFormat.type === 'custom') {\n        return;\n    }\n    const priceFormatBuiltIn = priceFormat;\n    if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n        priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n    }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n    if (isBoolean(options['handleScale'])) {\n        const handleScale = options['handleScale'];\n        options['handleScale'] = {\n            axisDoubleClickReset: {\n                time: handleScale,\n                price: handleScale,\n            },\n            axisPressedMouseMove: {\n                time: handleScale,\n                price: handleScale,\n            },\n            mouseWheel: handleScale,\n            pinch: handleScale,\n        };\n    }\n    else if (options['handleScale'] !== undefined) {\n        const { axisPressedMouseMove, axisDoubleClickReset } = options['handleScale'];\n        if (isBoolean(axisPressedMouseMove)) {\n            options['handleScale'].axisPressedMouseMove = {\n                time: axisPressedMouseMove,\n                price: axisPressedMouseMove,\n            };\n        }\n        if (isBoolean(axisDoubleClickReset)) {\n            options['handleScale'].axisDoubleClickReset = {\n                time: axisDoubleClickReset,\n                price: axisDoubleClickReset,\n            };\n        }\n    }\n    const handleScroll = options['handleScroll'];\n    if (isBoolean(handleScroll)) {\n        options['handleScroll'] = {\n            horzTouchDrag: handleScroll,\n            vertTouchDrag: handleScroll,\n            mouseWheel: handleScroll,\n            pressedMouseMove: handleScroll,\n        };\n    }\n}\nfunction toInternalOptions(options) {\n    migrateHandleScaleScrollOptions(options);\n    return options;\n}\nclass ChartApi {\n    constructor(container, horzScaleBehavior, options) {\n        this._private__seriesMap = new Map();\n        this._private__seriesMapReversed = new Map();\n        this._private__clickedDelegate = new Delegate();\n        this._private__dblClickedDelegate = new Delegate();\n        this._private__crosshairMovedDelegate = new Delegate();\n        this._private__panes = new WeakMap();\n        this._private__dataLayer = new DataLayer(horzScaleBehavior);\n        const internalOptions = (options === undefined) ?\n            clone(chartOptionsDefaults()) :\n            merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n        this._internal__horzScaleBehavior = horzScaleBehavior;\n        this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n        this._private__chartWidget._internal_clicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__clickedDelegate._internal_hasListeners()) {\n                this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_dblClicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__dblClickedDelegate._internal_hasListeners()) {\n                this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_subscribe((paramSupplier) => {\n            if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n                this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        const model = this._private__chartWidget._internal_model();\n        this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._internal__horzScaleBehavior);\n    }\n    remove() {\n        this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__timeScaleApi._internal_destroy();\n        this._private__chartWidget._internal_destroy();\n        this._private__seriesMap.clear();\n        this._private__seriesMapReversed.clear();\n        this._private__clickedDelegate._internal_destroy();\n        this._private__dblClickedDelegate._internal_destroy();\n        this._private__crosshairMovedDelegate._internal_destroy();\n        this._private__dataLayer._internal_destroy();\n    }\n    resize(width, height, forceRepaint) {\n        if (this.autoSizeActive()) {\n            // We return early here instead of checking this within the actual _chartWidget.resize method\n            // because this should only apply to external resize requests.\n            warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n            return;\n        }\n        this._private__chartWidget._internal_resize(width, height, forceRepaint);\n    }\n    addCustomSeries(customPaneView, options = {}, paneIndex = 0) {\n        const paneView = ensure(customPaneView);\n        const definition = createCustomSeriesDefinition(paneView);\n        return this._private__addSeriesImpl(definition, options, paneIndex);\n    }\n    addSeries(definition, options = {}, paneIndex = 0) {\n        return this._private__addSeriesImpl(definition, options, paneIndex);\n    }\n    removeSeries(seriesApi) {\n        const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n        const update = this._private__dataLayer._internal_removeSeries(series);\n        const model = this._private__chartWidget._internal_model();\n        model._internal_removeSeries(series);\n        this._private__sendUpdateToChart(update);\n        this._private__seriesMap.delete(seriesApi);\n        this._private__seriesMapReversed.delete(series);\n    }\n    _internal_applyNewData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n    }\n    _internal_updateData(series, data, historicalUpdate) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data, historicalUpdate));\n    }\n    subscribeClick(handler) {\n        this._private__clickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeClick(handler) {\n        this._private__clickedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_unsubscribe(handler);\n    }\n    priceScale(priceScaleId) {\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n    }\n    timeScale() {\n        return this._private__timeScaleApi;\n    }\n    applyOptions(options) {\n        {\n            const colorSpace = options.layout?.colorSpace;\n            if (colorSpace !== undefined && colorSpace !== this.options().layout.colorSpace) {\n                throw new Error(`colorSpace option should not be changed once the chart has been created.`);\n            }\n            const colorParsers = options.layout?.colorParsers;\n            if (colorParsers !== undefined && colorParsers !== this.options().layout.colorParsers) {\n                throw new Error(`colorParsers option should not be changed once the chart has been created.`);\n            }\n        }\n        this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n    }\n    options() {\n        return this._private__chartWidget._internal_options();\n    }\n    takeScreenshot() {\n        return this._private__chartWidget._internal_takeScreenshot();\n    }\n    removePane(index) {\n        this._private__chartWidget._internal_model()._internal_removePane(index);\n    }\n    swapPanes(first, second) {\n        this._private__chartWidget._internal_model()._internal_swapPanes(first, second);\n    }\n    autoSizeActive() {\n        return this._private__chartWidget._internal_autoSizeActive();\n    }\n    chartElement() {\n        return this._private__chartWidget._internal_element();\n    }\n    panes() {\n        return this._private__chartWidget._internal_model()._internal_panes().map((pane) => this._private__getPaneApi(pane));\n    }\n    paneSize(paneIndex = 0) {\n        const size = this._private__chartWidget._internal_paneSize(paneIndex);\n        return {\n            height: size.height,\n            width: size.width,\n        };\n    }\n    setCrosshairPosition(price, horizontalPosition, seriesApi) {\n        const series = this._private__seriesMap.get(seriesApi);\n        if (series === undefined) {\n            return;\n        }\n        const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n        if (pane === null) {\n            return;\n        }\n        this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n    }\n    clearCrosshairPosition() {\n        this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n    }\n    horzBehaviour() {\n        return this._internal__horzScaleBehavior;\n    }\n    _private__addSeriesImpl(definition, options = {}, paneIndex = 0) {\n        assert(isSeriesDefinition(definition));\n        patchPriceFormat(options.priceFormat);\n        if (definition.type === 'Candlestick') {\n            fillUpDownCandlesticksColors(options);\n        }\n        const strictOptions = merge(clone(seriesOptionsDefaults), clone(definition.defaultOptions), options);\n        const createPaneView = definition._internal_createPaneView;\n        const series = new Series(this._private__chartWidget._internal_model(), definition.type, strictOptions, createPaneView, definition._internal_customPaneView);\n        this._private__chartWidget._internal_model()._internal_addSeriesToPane(series, paneIndex);\n        const res = new SeriesApi(series, this, this, this, this._internal__horzScaleBehavior, (pane) => this._private__getPaneApi(pane));\n        this._private__seriesMap.set(res, series);\n        this._private__seriesMapReversed.set(series, res);\n        return res;\n    }\n    _private__sendUpdateToChart(update) {\n        const model = this._private__chartWidget._internal_model();\n        model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n        update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n        model._internal_timeScale()._internal_recalculateIndicesWithData();\n        model._internal_recalculateAllPanes();\n    }\n    _private__mapSeriesToApi(series) {\n        return ensureDefined(this._private__seriesMapReversed.get(series));\n    }\n    _private__convertMouseParams(param) {\n        const seriesData = new Map();\n        param._internal_seriesData.forEach((plotRow, series) => {\n            const seriesType = series._internal_seriesType();\n            const data = getSeriesDataCreator(seriesType)(plotRow);\n            if (seriesType !== 'Custom') {\n                assert(isFulfilledData(data));\n            }\n            else {\n                const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n                assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n            }\n            seriesData.set(this._private__mapSeriesToApi(series), data);\n        });\n        const hoveredSeries = param._internal_hoveredSeries === undefined ||\n            !this._private__seriesMapReversed.has(param._internal_hoveredSeries)\n            ? undefined\n            : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n        return {\n            time: param._internal_originalTime,\n            logical: param._internal_index,\n            point: param._internal_point,\n            paneIndex: param._internal_paneIndex,\n            hoveredSeries,\n            hoveredObjectId: param._internal_hoveredObject,\n            seriesData,\n            sourceEvent: param._internal_touchMouseEventData,\n        };\n    }\n    _private__getPaneApi(pane) {\n        let result = this._private__panes.get(pane);\n        if (!result) {\n            result = new PaneApi(this._private__chartWidget, (series) => this._private__mapSeriesToApi(series), pane, this);\n            this._private__panes.set(pane, result);\n        }\n        return result;\n    }\n}\n\nfunction fetchHtmlElement(container) {\n    if (isString(container)) {\n        const element = document.getElementById(container);\n        assert(element !== null, `Cannot find element in DOM with id=${container}`);\n        return element;\n    }\n    return container;\n}\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n    const htmlElement = fetchHtmlElement(container);\n    const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n    horzScaleBehavior.setOptions(res.options());\n    return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n/**\n * Provides the default implementation of the horizontal scale (time-based) that can be used as a base for extending the horizontal scale with custom behavior.\n * This allows for the introduction of custom functionality without re-implementing the entire {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface.\n *\n * For further details, refer to the {@link createChartEx} chart constructor method.\n *\n * @returns An uninitialized class implementing the {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface\n */\nfunction defaultHorzScaleBehavior() {\n    return HorzScaleBehaviorTime;\n}\n\nclass LinePaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, true);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createRawItemBase(time, price) {\n        return {\n            _internal_time: time,\n            _internal_price: price,\n            _internal_x: NaN,\n            _internal_y: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => {\n            const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n            return this._internal__createRawItem(row._internal_index, value, colorer);\n        });\n    }\n}\n\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n    if (visibleRange.to - visibleRange.from <= 0) {\n        return;\n    }\n    const { horizontalPixelRatio, verticalPixelRatio, context } = renderingScope;\n    let prevStyle = null;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    const radius = pointMarkersRadius * verticalPixelRatio + correction;\n    for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = items[i];\n        if (point) {\n            const style = styleGetter(renderingScope, point);\n            if (style !== prevStyle) {\n                context.beginPath();\n                if (prevStyle !== null) {\n                    context.fill();\n                }\n                context.fillStyle = style;\n                prevStyle = style;\n            }\n            const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n            const centerY = point._internal_y * verticalPixelRatio;\n            context.moveTo(centerX, centerY);\n            context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        }\n    }\n    context.fill();\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n    if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n        return;\n    }\n    const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n    const firstItem = items[visibleRange.from];\n    let currentStyle = styleGetter(renderingScope, firstItem);\n    let currentStyleFirstItem = firstItem;\n    if (visibleRange.to - visibleRange.from < 2) {\n        const halfBarWidth = barWidth / 2;\n        ctx.beginPath();\n        const item1 = { _internal_x: firstItem._internal_x - halfBarWidth, _internal_y: firstItem._internal_y };\n        const item2 = { _internal_x: firstItem._internal_x + halfBarWidth, _internal_y: firstItem._internal_y };\n        ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n        ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n        finishStyledArea(renderingScope, currentStyle, item1, item2);\n    }\n    else {\n        const changeStyle = (newStyle, currentItem) => {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n            ctx.beginPath();\n            currentStyle = newStyle;\n            currentStyleFirstItem = currentItem;\n        };\n        let currentItem = currentStyleFirstItem;\n        ctx.beginPath();\n        ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n        for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n            currentItem = items[i];\n            const itemStyle = styleGetter(renderingScope, currentItem);\n            switch (lineType) {\n                case 0 /* LineType.Simple */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 1 /* LineType.WithSteps */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    if (itemStyle !== currentStyle) {\n                        changeStyle(itemStyle, currentItem);\n                        ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    }\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 2 /* LineType.Curved */: {\n                    const [cp1, cp2] = getControlPoints(items, i - 1, i);\n                    ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                }\n            }\n            if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n                changeStyle(itemStyle, currentItem);\n                ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            }\n        }\n        if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n        }\n    }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n    return { _internal_x: p1._internal_x - p2._internal_x, _internal_y: p1._internal_y - p2._internal_y };\n}\nfunction add(p1, p2) {\n    return { _internal_x: p1._internal_x + p2._internal_x, _internal_y: p1._internal_y + p2._internal_y };\n}\nfunction divide(p1, n) {\n    return { _internal_x: p1._internal_x / n, _internal_y: p1._internal_y / n };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n    const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n    const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n    const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n    const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n    return [cp1, cp2];\n}\n\nfunction finishStyledArea$1(scope, style) {\n    const ctx = scope.context;\n    ctx.strokeStyle = style;\n    ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineType: lineType, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_pointMarkersRadius: pointMarkersRadius } = this._internal__data;\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n        setLineStyle(ctx, lineStyle);\n        ctx.lineJoin = 'round';\n        const styleGetter = this._internal__strokeStyle.bind(this);\n        if (lineType !== undefined) {\n            walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea$1);\n        }\n        if (pointMarkersRadius) {\n            drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n        }\n    }\n}\n\nclass PaneRendererLine extends PaneRendererLineBase {\n    _internal__strokeStyle(renderingScope, item) {\n        return item._internal_lineColor;\n    }\n}\n\nclass SeriesLinePaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererLine();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_lineWidth: options.lineWidth,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst lineStyleDefaults = {\n    color: '#2196f3',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst createPaneView$5 = (series, model) => new SeriesLinePaneView(series, model);\nconst createLineSeries = () => {\n    const definition = {\n        type: 'Line',\n        isBuiltIn: true,\n        defaultOptions: lineStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$5,\n    };\n    return definition;\n};\nconst lineSeries = createLineSeries();\n\nfunction createDebouncedMicroTaskHandler(callback) {\n    let scheduled = false;\n    return function (...args) {\n        if (!scheduled) {\n            scheduled = true;\n            queueMicrotask(() => {\n                callback(...args);\n                scheduled = false;\n            });\n        }\n    };\n}\nfunction markWithGreaterWeight$1(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nfunction toInternalHorzScaleItem(item) {\n    return item;\n}\nfunction fromInternalHorzScaleItem(item) {\n    return item;\n}\nclass YieldCurveHorzScaleBehavior {\n    constructor() {\n        this._private__pointsChangedDelegate = new Delegate();\n        this._private__invalidateWhitespace = createDebouncedMicroTaskHandler(() => this._private__pointsChangedDelegate._internal_fire(this._private__largestIndex));\n        this._private__largestIndex = 0;\n    }\n    /** Data changes might require that the whitespace be generated again */\n    _internal_whitespaceInvalidated() {\n        return this._private__pointsChangedDelegate;\n    }\n    _internal_destroy() {\n        this._private__pointsChangedDelegate._internal_destroy();\n    }\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n    }\n    preprocessData(data) {\n        // No preprocessing needed for yield curve data\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        this._private__options.localization = options;\n    }\n    createConverterToInternalObj(data) {\n        this._private__invalidateWhitespace();\n        return (time) => {\n            if (time > this._private__largestIndex) {\n                this._private__largestIndex = time;\n            }\n            return toInternalHorzScaleItem(time);\n        };\n    }\n    key(internalItem) {\n        return internalItem;\n    }\n    cacheKey(internalItem) {\n        return fromInternalHorzScaleItem(internalItem);\n    }\n    convertHorzItemToInternal(item) {\n        return toInternalHorzScaleItem(item);\n    }\n    formatHorzItem(item) {\n        return this._private__formatTime(item);\n    }\n    formatTickmark(item) {\n        return this._private__formatTime(item.time);\n    }\n    maxTickMarkWeight(marks) {\n        return marks.reduce(markWithGreaterWeight$1, marks[0]).weight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        const timeWeight = (time) => {\n            if (time % 120 === 0) {\n                return 10;\n            }\n            if (time % 60 === 0) {\n                return 9;\n            }\n            if (time % 36 === 0) {\n                return 8;\n            }\n            if (time % 12 === 0) {\n                return 7;\n            }\n            if (time % 6 === 0) {\n                return 6;\n            }\n            if (time % 3 === 0) {\n                return 5;\n            }\n            if (time % 1 === 0) {\n                return 4;\n            }\n            return 0;\n        };\n        for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n            sortedTimePoints[index].timeWeight = timeWeight(fromInternalHorzScaleItem(sortedTimePoints[index].time));\n        }\n        this._private__largestIndex = fromInternalHorzScaleItem(sortedTimePoints[sortedTimePoints.length - 1].time);\n        this._private__invalidateWhitespace();\n    }\n    _private__formatTime(months) {\n        if (this._private__options.localization?.timeFormatter) {\n            return this._private__options.localization.timeFormatter(months);\n        }\n        if (months < 12) {\n            return `${months}M`;\n        }\n        const years = Math.floor(months / 12);\n        const remainingMonths = months % 12;\n        if (remainingMonths === 0) {\n            return `${years}Y`;\n        }\n        return `${years}Y${remainingMonths}M`;\n    }\n}\n\nconst yieldChartOptionsDefaults = {\n    baseResolution: 1,\n    minimumTimeRange: 120,\n    startTimeRange: 0,\n};\n\nfunction generateWhitespaceData({ _internal_start: start, _internal_end: end, _internal_resolution: resolution, }) {\n    return Array.from({ length: Math.floor((end - start) / resolution) + 1 }, \n    // eslint-disable-next-line quote-props\n    (item, i) => ({ 'time': start + i * resolution }));\n}\nfunction buildWhitespaceState(options, lastIndex) {\n    return {\n        _internal_start: Math.max(0, options.startTimeRange),\n        _internal_end: Math.max(0, options.minimumTimeRange, lastIndex || 0),\n        _internal_resolution: Math.max(1, options.baseResolution),\n    };\n}\nconst generateWhitespaceHash = ({ _internal_start: start, _internal_end: end, _internal_resolution: resolution, }) => `${start}~${end}~${resolution}`;\nconst defaultOptions = {\n    yieldCurve: yieldChartOptionsDefaults,\n    // and add sensible default options for yield charts which\n    // are different from the usual defaults.\n    timeScale: {\n        ignoreWhitespaceIndices: true,\n    },\n    leftPriceScale: {\n        visible: true,\n    },\n    rightPriceScale: {\n        visible: false,\n    },\n    localization: {\n        priceFormatter: (value) => {\n            return value.toFixed(3) + '%';\n        },\n    },\n};\nconst lineStyleDefaultOptionOverrides = {\n    lastValueVisible: false,\n    priceLineVisible: false,\n};\nclass YieldChartApi extends ChartApi {\n    constructor(container, options) {\n        const fullOptions = merge(defaultOptions, options || {});\n        const horzBehaviour = new YieldCurveHorzScaleBehavior();\n        super(container, horzBehaviour, fullOptions);\n        horzBehaviour.setOptions(this.options());\n        this._initWhitespaceSeries();\n    }\n    addSeries(definition, options = {}, paneIndex = 0) {\n        if (definition.isBuiltIn && ['Area', 'Line'].includes(definition.type) === false) {\n            throw new Error('Yield curve only support Area and Line series');\n        }\n        const optionOverrides = {\n            ...lineStyleDefaultOptionOverrides,\n            ...options,\n        };\n        return super.addSeries(definition, optionOverrides, paneIndex);\n    }\n    _initWhitespaceSeries() {\n        const horzBehaviour = this.horzBehaviour();\n        const whiteSpaceSeries = this.addSeries(lineSeries);\n        let currentWhitespaceHash;\n        function updateWhitespace(lastIndex) {\n            const newWhitespaceState = buildWhitespaceState(horzBehaviour.options().yieldCurve, lastIndex);\n            const newWhitespaceHash = generateWhitespaceHash(newWhitespaceState);\n            if (newWhitespaceHash !== currentWhitespaceHash) {\n                currentWhitespaceHash = newWhitespaceHash;\n                whiteSpaceSeries.setData(generateWhitespaceData(newWhitespaceState));\n            }\n        }\n        updateWhitespace(0);\n        horzBehaviour._internal_whitespaceInvalidated()._internal_subscribe(updateWhitespace);\n    }\n}\n\n/**\n * Creates a yield curve chart with the specified options.\n *\n * A yield curve chart differs from the default chart type\n * in the following ways:\n * - Horizontal scale is linearly spaced, and defined in monthly\n * time duration units\n * - Whitespace is ignored for the crosshair and grid lines\n *\n * @param container - ID of HTML element or element itself\n * @param options - The yield chart options.\n * @returns An interface to the created chart\n */\nfunction createYieldCurveChart(container, options) {\n    const htmlElement = fetchHtmlElement(container);\n    const chartApi = new YieldChartApi(htmlElement, options);\n    return chartApi;\n}\n\nfunction markWithGreaterWeight(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass HorzScaleBehaviorPrice {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n    }\n    preprocessData(data) { }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        this._private__options.localization = options;\n    }\n    createConverterToInternalObj(data) {\n        return (price) => price;\n    }\n    key(internalItem) {\n        return internalItem;\n    }\n    cacheKey(internalItem) {\n        return internalItem;\n    }\n    convertHorzItemToInternal(item) {\n        return item;\n    }\n    formatHorzItem(item) {\n        return item.toFixed(this._private__precision());\n    }\n    formatTickmark(item, localizationOptions) {\n        return item.time.toFixed(this._private__precision());\n    }\n    maxTickMarkWeight(marks) {\n        return marks.reduce(markWithGreaterWeight, marks[0]).weight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        const priceWeight = (price) => {\n            if (price === Math.ceil(price / 100) * 100) {\n                return 8;\n            }\n            if (price === Math.ceil(price / 50) * 50) {\n                return 7;\n            }\n            if (price === Math.ceil(price / 25) * 25) {\n                return 6;\n            }\n            if (price === Math.ceil(price / 10) * 10) {\n                return 5;\n            }\n            if (price === Math.ceil(price / 5) * 5) {\n                return 4;\n            }\n            if (price === Math.ceil(price)) {\n                return 3;\n            }\n            if (price * 2 === Math.ceil(price * 2)) {\n                return 1;\n            }\n            return 0;\n        };\n        for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n            sortedTimePoints[index].timeWeight = priceWeight(sortedTimePoints[index].time);\n        }\n    }\n    _private__precision() {\n        return this._private__options.localization\n            .precision;\n    }\n}\n\n/**\n * Creates an 'options' chart with price values on the horizontal scale.\n *\n * This function is used to create a specialized chart type where the horizontal scale\n * represents price values instead of time. It's particularly useful for visualizing\n * option chains, price distributions, or any data where price is the primary x-axis metric.\n *\n * @param container - The DOM element or its id where the chart will be rendered.\n * @param options - Optional configuration options for the price chart.\n * @returns An instance of IChartApiBase configured for price-based horizontal scaling.\n */\nfunction createOptionsChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorPrice(), options);\n}\n\nfunction finishStyledArea(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n    const { context, horizontalPixelRatio, verticalPixelRatio } = scope;\n    context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.closePath();\n    context.fillStyle = style;\n    context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_lineType: lineType } = this._internal__data;\n        const baseLevelCoordinate = this._internal__data._internal_baseLevelCoordinate ??\n            (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'round';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        // walk lines with width=1 to have more accurate gradient's filling\n        ctx.lineWidth = 1;\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea.bind(null, baseLevelCoordinate));\n    }\n}\n\nclass GradientStyleCache {\n    // eslint-disable-next-line complexity\n    _internal_get(scope, params) {\n        const cachedParams = this._private__params;\n        const { _internal_topColor1: topColor1, _internal_topColor2: topColor2, _internal_bottomColor1: bottomColor1, _internal_bottomColor2: bottomColor2, _internal_baseLevelCoordinate: baseLevelCoordinate, _internal_topCoordinate: topCoordinate, _internal_bottomCoordinate: bottomCoordinate, } = params;\n        if (this._private__cachedValue === undefined ||\n            cachedParams === undefined ||\n            cachedParams._internal_topColor1 !== topColor1 ||\n            cachedParams._internal_topColor2 !== topColor2 ||\n            cachedParams._internal_bottomColor1 !== bottomColor1 ||\n            cachedParams._internal_bottomColor2 !== bottomColor2 ||\n            cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate ||\n            cachedParams._internal_topCoordinate !== topCoordinate ||\n            cachedParams._internal_bottomCoordinate !== bottomCoordinate) {\n            const { verticalPixelRatio } = scope;\n            const multiplier = baseLevelCoordinate || topCoordinate > 0 ? verticalPixelRatio : 1;\n            const top = topCoordinate * multiplier;\n            const bottom = bottomCoordinate === scope.bitmapSize.height ? bottomCoordinate : bottomCoordinate * multiplier;\n            const baseline = (baseLevelCoordinate ?? 0) * multiplier;\n            const gradient = scope.context.createLinearGradient(0, top, 0, bottom);\n            gradient.addColorStop(0, topColor1);\n            if (baseLevelCoordinate !== null && baseLevelCoordinate !== undefined) {\n                const range = bottom - top;\n                const baselineRatio = clamp(((baseline - top) / range), 0, 1);\n                gradient.addColorStop(baselineRatio, topColor2);\n                gradient.addColorStop(baselineRatio, bottomColor1);\n            }\n            gradient.addColorStop(1, bottomColor2);\n            this._private__cachedValue = gradient;\n            this._private__params = params;\n        }\n        return this._private__cachedValue;\n    }\n}\n\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topFillColor1,\n            _internal_topColor2: item._internal_topFillColor2,\n            _internal_bottomColor1: item._internal_bottomFillColor1,\n            _internal_bottomColor2: item._internal_bottomFillColor2,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n            _internal_topCoordinate: data._internal_topCoordinate ?? 0,\n            _internal_bottomCoordinate: data._internal_bottomCoordinate ?? renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n    constructor() {\n        super(...arguments);\n        this._private__strokeCache = new GradientStyleCache();\n    }\n    _internal__strokeStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__strokeCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topLineColor,\n            _internal_topColor2: item._internal_topLineColor,\n            _internal_bottomColor1: item._internal_bottomLineColor,\n            _internal_bottomColor2: item._internal_bottomLineColor,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n            _internal_topCoordinate: data._internal_topCoordinate ?? 0,\n            _internal_bottomCoordinate: data._internal_bottomCoordinate ?? renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n        this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n        this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        const options = this._internal__series._internal_options();\n        const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n        const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n        if (this._internal__itemsVisibleRange === null || this._internal__items.length === 0) {\n            return;\n        }\n        let topCoordinate;\n        let bottomCoordinate;\n        if (options.relativeGradient) {\n            topCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n            bottomCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n            for (let i = this._internal__itemsVisibleRange.from; i < this._internal__itemsVisibleRange.to; i++) {\n                const item = this._internal__items[i];\n                if (item._internal_y < topCoordinate) {\n                    topCoordinate = item._internal_y;\n                }\n                if (item._internal_y > bottomCoordinate) {\n                    bottomCoordinate = item._internal_y;\n                }\n            }\n        }\n        this._private__baselineAreaRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_topCoordinate: topCoordinate,\n            _internal_bottomCoordinate: bottomCoordinate,\n            _internal_invertFilledArea: false,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n        this._private__baselineLineRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_topCoordinate: topCoordinate,\n            _internal_bottomCoordinate: bottomCoordinate,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n    }\n}\n\nconst baselineStyleDefaults = {\n    baseValue: {\n        type: 'price',\n        price: 0,\n    },\n    relativeGradient: false,\n    topFillColor1: 'rgba(38, 166, 154, 0.28)',\n    topFillColor2: 'rgba(38, 166, 154, 0.05)',\n    topLineColor: 'rgba(38, 166, 154, 1)',\n    bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n    bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n    bottomLineColor: 'rgba(239, 83, 80, 1)',\n    lineWidth: 3,\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst createPaneView$4 = (series, model) => new SeriesBaselinePaneView(series, model);\nconst createSeries$4 = () => {\n    const definition = {\n        type: 'Baseline',\n        isBuiltIn: true,\n        defaultOptions: baselineStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$4,\n    };\n    return definition;\n};\nconst baselineSeries = createSeries$4();\n\nclass PaneRendererArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topColor,\n            _internal_topColor2: '',\n            _internal_bottomColor1: '',\n            _internal_bottomColor2: item._internal_bottomColor,\n            _internal_topCoordinate: this._internal__data?._internal_topCoordinate ?? 0,\n            _internal_bottomCoordinate: renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nclass SeriesAreaPaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__areaRenderer = new PaneRendererArea();\n        this._private__lineRenderer = new PaneRendererLine();\n        this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        if (this._internal__itemsVisibleRange === null || this._internal__items.length === 0) {\n            return;\n        }\n        let topCoordinate;\n        if (options.relativeGradient) {\n            topCoordinate = this._internal__items[this._internal__itemsVisibleRange.from]._internal_y;\n            for (let i = this._internal__itemsVisibleRange.from; i < this._internal__itemsVisibleRange.to; i++) {\n                const item = this._internal__items[i];\n                if (item._internal_y < topCoordinate) {\n                    topCoordinate = item._internal_y;\n                }\n            }\n        }\n        this._private__areaRenderer._internal_setData({\n            _internal_lineType: options.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_baseLevelCoordinate: null,\n            _internal_topCoordinate: topCoordinate,\n            _internal_invertFilledArea: options.invertFilledArea,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n        this._private__lineRenderer._internal_setData({\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n        });\n    }\n}\n\nconst areaStyleDefaults = {\n    topColor: 'rgba( 46, 220, 135, 0.4)',\n    bottomColor: 'rgba( 40, 221, 100, 0)',\n    invertFilledArea: false,\n    relativeGradient: false,\n    lineColor: '#33D778',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst createPaneView$3 = (series, model) => new SeriesAreaPaneView(series, model);\nconst createSeries$3 = () => {\n    const definition = {\n        type: 'Area',\n        isBuiltIn: true,\n        defaultOptions: areaStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$3,\n    };\n    return definition;\n};\nconst areaSeries = createSeries$3();\n\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n    return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n    const barSpacingSpecialCaseFrom = 2.5;\n    const barSpacingSpecialCaseTo = 4;\n    const barSpacingSpecialCaseCoeff = 3;\n    if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n        return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n    }\n    // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n    const barSpacingReducingCoeff = 0.2;\n    const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n    const res = Math.floor(barSpacing * coeff * pixelRatio);\n    const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n    const optimal = Math.min(res, scaledBarSpacing);\n    return Math.max(Math.floor(pixelRatio), optimal);\n}\n\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__barWidth = 0;\n        this._private__barLineWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    // eslint-disable-next-line complexity\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make bars' width odd\n        // if this value is even, we have to make bars' width even\n        // in order of keeping crosshair-over-bar drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n            if ((lineWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        // if scale is compressed, bar could become less than 1 CSS pixel\n        this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n        let prevColor = null;\n        const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n            const bar = this._private__data._internal_bars[i];\n            if (prevColor !== bar._internal_barColor) {\n                ctx.fillStyle = bar._internal_barColor;\n                prevColor = bar._internal_barColor;\n            }\n            const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n            const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n            const bodyLeft = bodyCenter - bodyWidthHalf;\n            const bodyWidth = this._private__barLineWidth;\n            const bodyRight = bodyLeft + bodyWidth - 1;\n            const high = Math.min(bar._internal_highY, bar._internal_lowY);\n            const low = Math.max(bar._internal_highY, bar._internal_lowY);\n            const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n            const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n            const bodyHeight = Math.max((bodyBottom - bodyTop), this._private__barLineWidth);\n            ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n            const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n            if (drawOpenClose) {\n                if (this._private__data._internal_openVisible) {\n                    const openLeft = bodyCenter - sideWidth;\n                    let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n                    let openBottom = openTop + bodyWidth - 1;\n                    if (openBottom > bodyTop + bodyHeight - 1) {\n                        openBottom = bodyTop + bodyHeight - 1;\n                        openTop = openBottom - bodyWidth + 1;\n                    }\n                    ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n                }\n                const closeRight = bodyCenter + sideWidth;\n                let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n                let closeBottom = closeTop + bodyWidth - 1;\n                if (closeBottom > bodyTop + bodyHeight - 1) {\n                    closeBottom = bodyTop + bodyHeight - 1;\n                    closeTop = closeBottom - bodyWidth + 1;\n                }\n                ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n            }\n        }\n    }\n    _private__calcBarWidth(pixelRatio) {\n        const limit = Math.floor(pixelRatio);\n        return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n    }\n}\n\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, false);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createDefaultItem(time, bar, colorer) {\n        return {\n            _internal_time: time,\n            _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n            _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n            _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n            _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_x: NaN,\n            _internal_openY: NaN,\n            _internal_highY: NaN,\n            _internal_lowY: NaN,\n            _internal_closeY: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => this._internal__createRawItem(row._internal_index, row, colorer));\n    }\n}\n\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererBars();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return {\n            ...this._internal__createDefaultItem(time, bar, colorer),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const barStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_openVisible: barStyleProps.openVisible,\n            _internal_thinBars: barStyleProps.thinBars,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nconst barStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    openVisible: true,\n    thinBars: true,\n};\nconst createPaneView$2 = (series, model) => new SeriesBarsPaneView(series, model);\nconst createSeries$2 = () => {\n    const definition = {\n        type: 'Bar',\n        isBuiltIn: true,\n        defaultOptions: barStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$2,\n    };\n    return definition;\n};\nconst barSeries = createSeries$2();\n\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        // scaled with pixelRatio\n        this._private__barWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        const { horizontalPixelRatio } = renderingScope;\n        // now we know pixelRatio and we could calculate barWidth effectively\n        this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make candlesticks' width odd\n        // if this value is even, we have to make candlesticks' width even\n        // in order of keeping crosshair-over-candlesticks drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const wickWidth = Math.floor(horizontalPixelRatio);\n            if ((wickWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        const bars = this._private__data._internal_bars;\n        if (this._private__data._internal_wickVisible) {\n            this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        if (this._private__data._internal_borderVisible) {\n            this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n            this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n    }\n    _private__drawWicks(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevWickColor = '';\n        let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n        wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n        const wickOffset = Math.floor(wickWidth * 0.5);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barWickColor !== prevWickColor) {\n                ctx.fillStyle = bar._internal_barWickColor;\n                prevWickColor = bar._internal_barWickColor;\n            }\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const high = Math.round(bar._internal_highY * verticalPixelRatio);\n            const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n            const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n            let left = scaledX - wickOffset;\n            const right = left + wickWidth - 1;\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            const width = right - left + 1;\n            ctx.fillRect(left, high, width, top - high);\n            ctx.fillRect(left, bottom + 1, width, low - bottom);\n            prevEdge = right;\n        }\n    }\n    _private__calculateBorderWidth(pixelRatio) {\n        let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n        if (this._private__barWidth <= 2 * borderWidth) {\n            borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n        }\n        const res = Math.max(Math.floor(pixelRatio), borderWidth);\n        if (this._private__barWidth <= res * 2) {\n            // do not draw bodies, restore original value\n            return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n        }\n        return res;\n    }\n    _private__drawBorder(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBorderColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barBorderColor !== prevBorderColor) {\n                ctx.fillStyle = bar._internal_barBorderColor;\n                prevBorderColor = bar._internal_barBorderColor;\n            }\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            // this is important to calculate right before patching left\n            const right = left + this._private__barWidth - 1;\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n                fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n            }\n            else {\n                const width = right - left + 1;\n                ctx.fillRect(left, top, width, bottom - top + 1);\n            }\n            prevEdge = right;\n        }\n    }\n    _private__drawCandles(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBarColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            let right = left + this._private__barWidth - 1;\n            if (bar._internal_barColor !== prevBarColor) {\n                const barColor = bar._internal_barColor;\n                ctx.fillStyle = barColor;\n                prevBarColor = barColor;\n            }\n            if (this._private__data._internal_borderVisible) {\n                left += borderWidth;\n                top += borderWidth;\n                right -= borderWidth;\n                bottom -= borderWidth;\n            }\n            if (top > bottom) {\n                continue;\n            }\n            ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n        }\n    }\n}\n\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererCandlesticks();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return {\n            ...this._internal__createDefaultItem(time, bar, colorer),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const candlestickStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_wickVisible: candlestickStyleProps.wickVisible,\n            _internal_borderVisible: candlestickStyleProps.borderVisible,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nconst candlestickStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    wickVisible: true,\n    borderVisible: true,\n    borderColor: '#378658',\n    borderUpColor: '#26a69a',\n    borderDownColor: '#ef5350',\n    wickColor: '#737375',\n    wickUpColor: '#26a69a',\n    wickDownColor: '#ef5350',\n};\nconst createPaneView$1 = (series, model) => new SeriesCandlesticksPaneView(series, model);\nconst createSeries$1 = () => {\n    const definition = {\n        type: 'Candlestick',\n        isBuiltIn: true,\n        defaultOptions: candlestickStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView$1,\n    };\n    return definition;\n};\nconst candlestickSeries = createSeries$1();\n\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__precalculatedCache = [];\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n        this._private__precalculatedCache = [];\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        if (!this._private__precalculatedCache.length) {\n            this._private__fillPrecalculatedCache(horizontalPixelRatio);\n        }\n        const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n        const histogramBase = Math.round((this._private__data._internal_histogramBase) * verticalPixelRatio);\n        const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n        const bottomHistogramBase = topHistogramBase + tickWidth;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const y = Math.round(item._internal_y * verticalPixelRatio);\n            ctx.fillStyle = item._internal_barColor;\n            let top;\n            let bottom;\n            if (y <= topHistogramBase) {\n                top = y;\n                bottom = bottomHistogramBase;\n            }\n            else {\n                top = topHistogramBase;\n                bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n            }\n            ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__fillPrecalculatedCache(pixelRatio) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            this._private__precalculatedCache = [];\n            return;\n        }\n        const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n        const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n        this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            // force cast to avoid ensureDefined call\n            const x = Math.round(item._internal_x * pixelRatio);\n            let left;\n            let right;\n            if (columnWidth % 2) {\n                const halfWidth = (columnWidth - 1) / 2;\n                left = x - halfWidth;\n                right = x + halfWidth;\n            }\n            else {\n                // shift pixel to left\n                const halfWidth = columnWidth / 2;\n                left = x - halfWidth;\n                right = x + halfWidth - 1;\n            }\n            this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n                _internal_left: left,\n                _internal_right: right,\n                _internal_roundedCenter: x,\n                _internal_center: (item._internal_x * pixelRatio),\n                _internal_time: item._internal_time,\n            };\n        }\n        // correct positions\n        for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n            if (current._internal_time !== prev._internal_time + 1) {\n                continue;\n            }\n            if (current._internal_left - prev._internal_right !== (spacing + 1)) {\n                // have to align\n                if (prev._internal_roundedCenter > prev._internal_center) {\n                    // prev wasshifted to left, so add pixel to right\n                    prev._internal_right = current._internal_left - spacing - 1;\n                }\n                else {\n                    // extend current to left\n                    current._internal_left = prev._internal_right + spacing + 1;\n                }\n            }\n        }\n        let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            // this could happen if barspacing < 1\n            if (current._internal_right < current._internal_left) {\n                current._internal_right = current._internal_left;\n            }\n            const width = current._internal_right - current._internal_left + 1;\n            minWidth = Math.min(width, minWidth);\n        }\n        if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n            for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n                const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n                const width = current._internal_right - current._internal_left + 1;\n                if (width > minWidth) {\n                    if (current._internal_roundedCenter > current._internal_center) {\n                        current._internal_right -= 1;\n                    }\n                    else {\n                        current._internal_left += 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererHistogram();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return {\n            ...this._internal__createRawItemBase(time, price),\n            ...colorer._internal_barStyle(time),\n        };\n    }\n    _internal__prepareRendererData() {\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst histogramStyleDefaults = {\n    color: '#26a69a',\n    base: 0,\n};\nconst createPaneView = (series, model) => new SeriesHistogramPaneView(series, model);\nconst createSeries = () => {\n    const definition = {\n        type: 'Histogram',\n        isBuiltIn: true,\n        defaultOptions: histogramStyleDefaults,\n        /**\n         * @internal\n         */\n        _internal_createPaneView: createPaneView,\n    };\n    return definition;\n};\nconst histogramSeries = createSeries();\n\nclass PanePrimitiveWrapper {\n    constructor(pane, primitive) {\n        this._private__pane = pane;\n        this._private__primitive = primitive;\n        this._private__attach();\n    }\n    detach() {\n        this._private__pane.detachPrimitive(this._private__primitive);\n    }\n    getPane() {\n        return this._private__pane;\n    }\n    applyOptions(options) {\n        this._private__primitive._internal_applyOptions?.(options);\n    }\n    _private__attach() {\n        this._private__pane.attachPrimitive(this._private__primitive);\n    }\n}\n\nconst textWatermarkOptionsDefaults = {\n    visible: true,\n    horzAlign: 'center',\n    vertAlign: 'center',\n    lines: [],\n};\nconst textWatermarkLineOptionsDefaults = {\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontSize: 48,\n    fontFamily: defaultFontFamily,\n    fontStyle: '',\n    text: '',\n};\n\nclass TextWatermarkRenderer {\n    constructor(options) {\n        this._private__metricsCache = new Map();\n        this._private__data = options;\n    }\n    draw(target) {\n        target.useMediaCoordinateSpace((scope) => {\n            if (!this._private__data.visible) {\n                return;\n            }\n            const { context: ctx, mediaSize } = scope;\n            let textHeight = 0;\n            for (const line of this._private__data.lines) {\n                if (line.text.length === 0) {\n                    continue;\n                }\n                ctx.font = line._internal_font;\n                const textWidth = this._private__metrics(ctx, line.text);\n                if (textWidth > mediaSize.width) {\n                    line._internal_zoom = mediaSize.width / textWidth;\n                }\n                else {\n                    line._internal_zoom = 1;\n                }\n                textHeight += line.lineHeight * line._internal_zoom;\n            }\n            let vertOffset = 0;\n            switch (this._private__data.vertAlign) {\n                case 'top':\n                    vertOffset = 0;\n                    break;\n                case 'center':\n                    vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n                    break;\n                case 'bottom':\n                    vertOffset = Math.max(mediaSize.height - textHeight, 0);\n                    break;\n            }\n            for (const line of this._private__data.lines) {\n                ctx.save();\n                ctx.fillStyle = line.color;\n                let horzOffset = 0;\n                switch (this._private__data.horzAlign) {\n                    case 'left':\n                        ctx.textAlign = 'left';\n                        horzOffset = line.lineHeight / 2;\n                        break;\n                    case 'center':\n                        ctx.textAlign = 'center';\n                        horzOffset = mediaSize.width / 2;\n                        break;\n                    case 'right':\n                        ctx.textAlign = 'right';\n                        horzOffset = mediaSize.width - 1 - line.lineHeight / 2;\n                        break;\n                }\n                ctx.translate(horzOffset, vertOffset);\n                ctx.textBaseline = 'top';\n                ctx.font = line._internal_font;\n                ctx.scale(line._internal_zoom, line._internal_zoom);\n                ctx.fillText(line.text, 0, line._internal_vertOffset);\n                ctx.restore();\n                vertOffset += line.lineHeight * line._internal_zoom;\n            }\n        });\n    }\n    _private__metrics(ctx, text) {\n        const fontCache = this._private__fontCache(ctx.font);\n        let result = fontCache.get(text);\n        if (result === undefined) {\n            result = ctx.measureText(text).width;\n            fontCache.set(text, result);\n        }\n        return result;\n    }\n    _private__fontCache(font) {\n        let fontCache = this._private__metricsCache.get(font);\n        if (fontCache === undefined) {\n            fontCache = new Map();\n            this._private__metricsCache.set(font, fontCache);\n        }\n        return fontCache;\n    }\n}\n\nclass TextWatermarkPaneView {\n    constructor(options) {\n        this._private__options = buildRendererOptions$1(options);\n    }\n    _internal_update(options) {\n        this._private__options = buildRendererOptions$1(options);\n    }\n    renderer() {\n        return new TextWatermarkRenderer(this._private__options);\n    }\n}\nfunction buildRendererLineOptions(lineOption) {\n    return {\n        ...lineOption,\n        _internal_font: makeFont(lineOption.fontSize, lineOption.fontFamily, lineOption.fontStyle),\n        lineHeight: lineOption.lineHeight || lineOption.fontSize * 1.2,\n        _internal_vertOffset: 0,\n        _internal_zoom: 0,\n    };\n}\nfunction buildRendererOptions$1(options) {\n    return {\n        ...options,\n        lines: options.lines.map(buildRendererLineOptions),\n    };\n}\n\nfunction mergeLineOptionsWithDefaults(options) {\n    return {\n        ...textWatermarkLineOptionsDefaults,\n        ...options,\n    };\n}\nfunction mergeOptionsWithDefaults$1(options) {\n    return {\n        ...textWatermarkOptionsDefaults,\n        ...options,\n        lines: options.lines?.map(mergeLineOptionsWithDefaults) ?? [],\n    };\n}\nclass TextWatermark {\n    constructor(options) {\n        this._private__options = mergeOptionsWithDefaults$1(options);\n        this._private__paneViews = [new TextWatermarkPaneView(this._private__options)];\n    }\n    updateAllViews() {\n        this._private__paneViews.forEach((pw) => pw._internal_update(this._private__options));\n    }\n    paneViews() {\n        return this._private__paneViews;\n    }\n    attached({ requestUpdate }) {\n        this._internal_requestUpdate = requestUpdate;\n    }\n    detached() {\n        this._internal_requestUpdate = undefined;\n    }\n    _internal_applyOptions(options) {\n        this._private__options = mergeOptionsWithDefaults$1({ ...this._private__options, ...options });\n        if (this._internal_requestUpdate) {\n            this._internal_requestUpdate();\n        }\n    }\n}\n/**\n * Creates an image watermark.\n *\n * @param pane - Target pane.\n * @param options - Watermark options.\n *\n * @returns Image watermark wrapper.\n *\n * @example\n * ```js\n * import { createTextWatermark } from 'lightweight-charts';\n *\n * const firstPane = chart.panes()[0];\n * const textWatermark = createTextWatermark(firstPane, {\n * \t  horzAlign: 'center',\n * \t  vertAlign: 'center',\n * \t  lines: [\n * \t    {\n * \t      text: 'Hello',\n * \t      color: 'rgba(255,0,0,0.5)',\n * \t      fontSize: 100,\n * \t      fontStyle: 'bold',\n * \t    },\n * \t    {\n * \t      text: 'This is a text watermark',\n * \t      color: 'rgba(0,0,255,0.5)',\n * \t      fontSize: 50,\n * \t      fontStyle: 'italic',\n * \t      fontFamily: 'monospace',\n * \t    },\n * \t  ],\n * });\n * // to change options\n * textWatermark.applyOptions({ horzAlign: 'left' });\n * // to remove watermark from the pane\n * textWatermark.detach();\n * ```\n */\nfunction createTextWatermark(pane, options) {\n    return new PanePrimitiveWrapper(pane, new TextWatermark(options));\n}\n\nconst imageWatermarkOptionsDefaults = {\n    alpha: 1,\n    padding: 0,\n};\n\nclass ImageWatermarkRenderer {\n    constructor(data) {\n        this._private__data = data;\n    }\n    draw(target) {\n        target.useMediaCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            const pos = this._private__determinePlacement(this._private__data, scope.mediaSize);\n            if (!pos || !this._private__data._internal_imgElement) {\n                return;\n            }\n            ctx.globalAlpha = this._private__data.alpha ?? 1;\n            ctx.drawImage(this._private__data._internal_imgElement, pos._internal_x, pos._internal_y, pos._internal_width, pos._internal_height);\n        });\n    }\n    _private__determinePlacement(data, paneSize) {\n        const { maxHeight, maxWidth, _internal_imgHeight: imgHeight, _internal_imgWidth: imgWidth, padding } = data;\n        const plotCentreX = Math.round(paneSize.width / 2);\n        const plotCentreY = Math.round(paneSize.height / 2);\n        const paddingSize = padding ?? 0;\n        let availableWidth = paneSize.width - 2 * paddingSize;\n        let availableHeight = paneSize.height - 2 * paddingSize;\n        if (maxHeight) {\n            availableHeight = Math.min(availableHeight, maxHeight);\n        }\n        if (maxWidth) {\n            availableWidth = Math.min(availableWidth, maxWidth);\n        }\n        const scaleX = availableWidth / imgWidth;\n        const scaleY = availableHeight / imgHeight;\n        const scaleToUse = Math.min(scaleX, scaleY);\n        const drawWidth = imgWidth * scaleToUse;\n        const drawHeight = imgHeight * scaleToUse;\n        const x = plotCentreX - 0.5 * drawWidth;\n        const y = plotCentreY - 0.5 * drawHeight;\n        return {\n            _internal_x: x,\n            _internal_y: y,\n            _internal_height: drawHeight,\n            _internal_width: drawWidth,\n        };\n    }\n}\n\nclass ImageWatermarkPaneView {\n    constructor(options) {\n        this._private__image = null;\n        this._private__imageWidth = 0; // don't draw until loaded\n        this._private__imageHeight = 0;\n        this._private__options = options;\n        this._private__rendererOptions = buildRendererOptions(this._private__options, this._private__image, this._private__imageWidth, this._private__imageHeight);\n    }\n    _internal_stateUpdate(state) {\n        if (state._internal_imageWidth !== undefined) {\n            this._private__imageWidth = state._internal_imageWidth;\n        }\n        if (state._internal_imageHeight !== undefined) {\n            this._private__imageHeight = state._internal_imageHeight;\n        }\n        if (state._internal_image !== undefined) {\n            this._private__image = state._internal_image;\n        }\n        this._internal_update();\n    }\n    _internal_optionsUpdate(options) {\n        this._private__options = options;\n        this._internal_update();\n    }\n    zOrder() {\n        return 'bottom';\n    }\n    _internal_update() {\n        this._private__rendererOptions = buildRendererOptions(this._private__options, this._private__image, this._private__imageWidth, this._private__imageHeight);\n    }\n    renderer() {\n        return new ImageWatermarkRenderer(this._private__rendererOptions);\n    }\n}\nfunction buildRendererOptions(options, imgElement, imgWidth, imgHeight) {\n    return {\n        ...options,\n        _internal_imgElement: imgElement,\n        _internal_imgWidth: imgWidth,\n        _internal_imgHeight: imgHeight,\n    };\n}\n\nfunction mergeOptionsWithDefaults(options) {\n    return {\n        ...imageWatermarkOptionsDefaults,\n        ...options,\n    };\n}\nclass ImageWatermark {\n    constructor(imageUrl, options) {\n        this._private__imgElement = null;\n        this._private__imageUrl = imageUrl;\n        this._private__options = mergeOptionsWithDefaults(options);\n        this._private__paneViews = [new ImageWatermarkPaneView(this._private__options)];\n    }\n    updateAllViews() {\n        this._private__paneViews.forEach((pw) => pw._internal_update());\n    }\n    paneViews() {\n        return this._private__paneViews;\n    }\n    attached(attachedParams) {\n        const { requestUpdate } = attachedParams;\n        this._private__requestUpdate = requestUpdate;\n        this._private__imgElement = new Image();\n        this._private__imgElement.onload = () => {\n            const imageHeight = this._private__imgElement?.naturalHeight ?? 1;\n            const imageWidth = this._private__imgElement?.naturalWidth ?? 1;\n            this._private__paneViews.forEach((pv) => pv._internal_stateUpdate({\n                _internal_imageHeight: imageHeight,\n                _internal_imageWidth: imageWidth,\n                _internal_image: this._private__imgElement,\n            }));\n            if (this._private__requestUpdate) {\n                this._private__requestUpdate();\n            }\n        };\n        this._private__imgElement.src = this._private__imageUrl;\n    }\n    detached() {\n        this._private__requestUpdate = undefined;\n        this._private__imgElement = null;\n    }\n    _internal_applyOptions(options) {\n        this._private__options = mergeOptionsWithDefaults({ ...this._private__options, ...options });\n        this._private__updateOptions();\n        if (this._internal_requestUpdate) {\n            this._internal_requestUpdate();\n        }\n    }\n    _internal_requestUpdate() {\n        if (this._private__requestUpdate) {\n            this._private__requestUpdate();\n        }\n    }\n    _private__updateOptions() {\n        this._private__paneViews.forEach((pw) => pw._internal_optionsUpdate(this._private__options));\n    }\n}\n/**\n * Creates an image watermark.\n *\n * @param pane - Target pane.\n * @param imageUrl - Image URL.\n * @param options - Watermark options.\n *\n * @returns Image watermark wrapper.\n *\n * @example\n * ```js\n * import { createImageWatermark } from 'lightweight-charts';\n *\n * const firstPane = chart.panes()[0];\n * const imageWatermark = createImageWatermark(firstPane, '/images/my-image.png', {\n *   alpha: 0.5,\n *   padding: 20,\n * });\n * // to change options\n * imageWatermark.applyOptions({ padding: 10 });\n * // to remove watermark from the pane\n * imageWatermark.detach();\n * ```\n */\nfunction createImageWatermark(pane, imageUrl, options) {\n    return new PanePrimitiveWrapper(pane, new ImageWatermark(imageUrl, options));\n}\n\nclass SeriesPrimitiveAdapter {\n    constructor(series, primitive) {\n        this._internal__series = series;\n        this._internal__primitive = primitive;\n        this._private__attach();\n    }\n    detach() {\n        this._internal__series.detachPrimitive(this._internal__primitive);\n    }\n    getSeries() {\n        return this._internal__series;\n    }\n    applyOptions(options) {\n        if (this._internal__primitive && this._internal__primitive._internal_applyOptions) {\n            this._internal__primitive._internal_applyOptions(options);\n        }\n    }\n    _private__attach() {\n        this._internal__series.attachPrimitive(this._internal__primitive);\n    }\n}\n\nfunction size(barSpacing, coeff) {\n    const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n    return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n    switch (shape) {\n        case 'arrowDown':\n        case 'arrowUp':\n            return size(originalSize, 1);\n        case 'circle':\n            return size(originalSize, 0.8);\n        case 'square':\n            return size(originalSize, 0.7);\n    }\n}\nfunction calculateShapeHeight(barSpacing) {\n    return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n    return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction calculateAdjustedMargin(margin, hasSide, hasInBar) {\n    if (hasSide) {\n        return margin;\n    }\n    else if (hasInBar) {\n        return Math.ceil(margin / 2);\n    }\n    return 0;\n}\n\nfunction drawArrow(up, ctx, coords, size) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = ((arrowSize - 1) / 2) * coords._internal_pixelRatio;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = ((baseSize - 1) / 2) * coords._internal_pixelRatio;\n    ctx.beginPath();\n    if (up) {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    else {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = (arrowSize - 1) / 2;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = (baseSize - 1) / 2;\n    const triangleTolerance = 3;\n    const rectTolerance = 2;\n    const baseLeft = centerX - halfBaseSize - rectTolerance;\n    const baseRight = centerX + halfBaseSize + rectTolerance;\n    const baseTop = up ? centerY : centerY - halfArrowSize;\n    const baseBottom = up ? centerY + halfArrowSize : centerY;\n    if (x >= baseLeft && x <= baseRight &&\n        y >= baseTop - rectTolerance && y <= baseBottom + rectTolerance) {\n        return true;\n    }\n    const isInTriangleBounds = () => {\n        const headLeft = centerX - halfArrowSize - triangleTolerance;\n        const headRight = centerX + halfArrowSize + triangleTolerance;\n        const headTop = up ? centerY - halfArrowSize - triangleTolerance : centerY;\n        const headBottom = up ? centerY : centerY + halfArrowSize + triangleTolerance;\n        if (x < headLeft || x > headRight ||\n            y < headTop || y > headBottom) {\n            return false;\n        }\n        const dx = Math.abs(x - centerX);\n        const dy = up\n            ? Math.abs(y - centerY) // up arrow\n            : Math.abs(y - centerY); // down arrow\n        return dy + triangleTolerance >= dx / 2;\n    };\n    return isInTriangleBounds();\n}\n\nfunction drawCircle(ctx, coords, size) {\n    const circleSize = shapeSize('circle', size);\n    const halfSize = (circleSize - 1) / 2;\n    ctx.beginPath();\n    ctx.arc(coords._internal_x, coords._internal_y, halfSize * coords._internal_pixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n    const circleSize = shapeSize('circle', size);\n    const tolerance = 2 + circleSize / 2;\n    const xOffset = centerX - x;\n    const yOffset = centerY - y;\n    const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n    return dist <= tolerance;\n}\n\nfunction drawSquare(ctx, coords, size) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = ((squareSize - 1) * coords._internal_pixelRatio) / 2;\n    const left = coords._internal_x - halfSize;\n    const top = coords._internal_y - halfSize;\n    ctx.fillRect(left, top, squareSize * coords._internal_pixelRatio, squareSize * coords._internal_pixelRatio);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    return x >= left && x <= left + squareSize &&\n        y >= top && y <= top + squareSize;\n}\n\nfunction drawText(ctx, text, x, y, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.save();\n    ctx.scale(horizontalPixelRatio, verticalPixelRatio);\n    ctx.fillText(text, x, y);\n    ctx.restore();\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n    const halfHeight = textHeight / 2;\n    return x >= textX && x <= textX + textWidth &&\n        y >= textY - halfHeight && y <= textY + halfHeight;\n}\n\nclass SeriesMarkersRenderer {\n    constructor() {\n        this._private__data = null;\n        this._private__textWidthCache = new TextWidthCache();\n        this._private__fontSize = -1;\n        this._private__fontFamily = '';\n        this._private__font = '';\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_setParams(fontSize, fontFamily) {\n        if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n            this._private__fontSize = fontSize;\n            this._private__fontFamily = fontFamily;\n            this._private__font = makeFont(fontSize, fontFamily);\n            this._private__textWidthCache._internal_reset();\n        }\n    }\n    _internal_hitTest(x, y) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return null;\n        }\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (item && hitTestItem(item, x, y)) {\n                return {\n                    zOrder: 'normal',\n                    externalId: item._internal_externalId ?? '',\n                };\n            }\n        }\n        return null;\n    }\n    draw(target) {\n        target.useBitmapCoordinateSpace((scope) => {\n            this._internal__drawImpl(scope);\n        });\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        ctx.textBaseline = 'middle';\n        ctx.font = this._private__font;\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const item = this._private__data._internal_items[index];\n            if (item._internal_text !== undefined) {\n                item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n                item._internal_text._internal_height = this._private__fontSize;\n                item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n            }\n            drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio);\n        }\n    }\n}\nfunction bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio) {\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    return {\n        _internal_x: Math.round(item._internal_x * horizontalPixelRatio) + correction,\n        _internal_y: item._internal_y * verticalPixelRatio,\n        _internal_pixelRatio: horizontalPixelRatio,\n    };\n}\nfunction drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.fillStyle = item._internal_color;\n    if (item._internal_text !== undefined) {\n        drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y, horizontalPixelRatio, verticalPixelRatio);\n    }\n    drawShape(item, ctx, bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio));\n}\nfunction drawShape(item, ctx, coordinates) {\n    if (item._internal_size === 0) {\n        return;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            drawArrow(false, ctx, coordinates, item._internal_size);\n            return;\n        case 'arrowUp':\n            drawArrow(true, ctx, coordinates, item._internal_size);\n            return;\n        case 'circle':\n            drawCircle(ctx, coordinates, item._internal_size);\n            return;\n        case 'square':\n            drawSquare(ctx, coordinates, item._internal_size);\n            return;\n    }\n    ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n    if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n        return true;\n    }\n    return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n    if (item._internal_size === 0) {\n        return false;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'arrowUp':\n            return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'circle':\n            return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'square':\n            return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n    }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, series, chart) {\n    const timeScale = chart.timeScale();\n    let inBarPrice;\n    let highPrice;\n    let lowPrice;\n    if (isValueData(seriesData)) {\n        inBarPrice = seriesData.value;\n        highPrice = seriesData.value;\n        lowPrice = seriesData.value;\n    }\n    else if (isOhlcData(seriesData)) {\n        inBarPrice = seriesData.close;\n        highPrice = seriesData.high;\n        lowPrice = seriesData.low;\n    }\n    else {\n        return;\n    }\n    const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n    const shapeSize = calculateShapeHeight(timeScale.options().barSpacing) * sizeMultiplier;\n    const halfSize = shapeSize / 2;\n    rendererItem._internal_size = shapeSize;\n    switch (marker.position) {\n        case 'inBar': {\n            rendererItem._internal_y = ensureNotNull(series.priceToCoordinate(inBarPrice));\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n            }\n            return;\n        }\n        case 'aboveBar': {\n            rendererItem._internal_y = (ensureNotNull(series.priceToCoordinate(highPrice)) - halfSize - offsets._internal_aboveBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_aboveBar += shapeSize + shapeMargin;\n            return;\n        }\n        case 'belowBar': {\n            rendererItem._internal_y = (ensureNotNull(series.priceToCoordinate(lowPrice)) + halfSize + offsets._internal_belowBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_belowBar += shapeSize + shapeMargin;\n            return;\n        }\n    }\n    ensureNever(marker.position);\n}\nfunction isValueData(data) {\n    // eslint-disable-next-line no-restricted-syntax\n    return 'value' in data && typeof data.value === 'number';\n}\nfunction isOhlcData(data) {\n    // eslint-disable-next-line no-restricted-syntax\n    return 'open' in data && 'high' in data && 'low' in data && 'close' in data;\n}\nclass SeriesMarkersPaneView {\n    constructor(series, chart) {\n        this._private__markers = [];\n        this._private__invalidated = true;\n        this._private__dataInvalidated = true;\n        this._private__renderer = new SeriesMarkersRenderer();\n        this._private__series = series;\n        this._private__chart = chart;\n        this._private__data = {\n            _internal_items: [],\n            _internal_visibleRange: null,\n        };\n    }\n    renderer() {\n        if (!this._private__series.options().visible) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__makeValid();\n        }\n        const layout = this._private__chart.options()['layout'];\n        this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n        this._private__renderer._internal_setData(this._private__data);\n        return this._private__renderer;\n    }\n    _internal_setMarkers(markers) {\n        this._private__markers = markers;\n        this._internal_update('data');\n    }\n    _internal_update(updateType) {\n        this._private__invalidated = true;\n        if (updateType === 'data') {\n            this._private__dataInvalidated = true;\n        }\n    }\n    _internal__makeValid() {\n        const timeScale = this._private__chart.timeScale();\n        const seriesMarkers = this._private__markers;\n        if (this._private__dataInvalidated) {\n            this._private__data._internal_items = seriesMarkers.map((marker) => ({\n                _internal_time: marker.time,\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_size: 0,\n                _internal_shape: marker.shape,\n                _internal_color: marker.color,\n                _internal_externalId: marker.id,\n                _internal_internalId: marker._internal_internalId,\n                _internal_text: undefined,\n            }));\n            this._private__dataInvalidated = false;\n        }\n        const layoutOptions = this._private__chart.options()['layout'];\n        this._private__data._internal_visibleRange = null;\n        const visibleBars = timeScale.getVisibleLogicalRange();\n        if (visibleBars === null) {\n            return;\n        }\n        const visibleBarsRange = new RangeImpl(Math.floor(visibleBars.from), Math.ceil(visibleBars.to));\n        const firstValue = this._private__series.data()[0];\n        if (firstValue === null) {\n            return;\n        }\n        if (this._private__data._internal_items.length === 0) {\n            return;\n        }\n        let prevTimeIndex = NaN;\n        const shapeMargin$1 = shapeMargin(timeScale.options().barSpacing);\n        const offsets = {\n            _internal_aboveBar: shapeMargin$1,\n            _internal_belowBar: shapeMargin$1,\n        };\n        this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBarsRange, true);\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const marker = seriesMarkers[index];\n            if (marker.time !== prevTimeIndex) {\n                // new bar, reset stack counter\n                offsets._internal_aboveBar = shapeMargin$1;\n                offsets._internal_belowBar = shapeMargin$1;\n                prevTimeIndex = marker.time;\n            }\n            const rendererItem = this._private__data._internal_items[index];\n            rendererItem._internal_x = ensureNotNull(timeScale.logicalToCoordinate(marker.time));\n            if (marker.text !== undefined && marker.text.length > 0) {\n                rendererItem._internal_text = {\n                    _internal_content: marker.text,\n                    _internal_x: 0,\n                    _internal_y: 0,\n                    _internal_width: 0,\n                    _internal_height: 0,\n                };\n            }\n            const dataAt = ensureNotNull(this._private__series.dataByIndex(marker.time, -1));\n            if (dataAt === null) {\n                continue;\n            }\n            fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, this._private__series, this._private__chart);\n        }\n        this._private__invalidated = false;\n    }\n}\n\nclass SeriesMarkersPrimitive {\n    constructor() {\n        this._private__paneView = null;\n        this._private__markers = [];\n        this._private__indexedMarkers = [];\n        this._private__dataChangedHandler = null;\n        this._private__series = null;\n        this._private__chart = null;\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__autoScaleMargins = null;\n        this._private__markersPositions = null;\n        this._private__cachedBarSpacing = null;\n    }\n    attached(param) {\n        this._private__recalculateMarkers();\n        this._private__chart = param.chart;\n        this._private__series = param.series;\n        this._private__paneView = new SeriesMarkersPaneView(this._private__series, ensureNotNull(this._private__chart));\n        this._private__requestUpdate = param.requestUpdate;\n        this._private__series.subscribeDataChanged((scope) => this._private__onDataChanged(scope));\n        this._internal_requestUpdate();\n    }\n    _internal_requestUpdate() {\n        if (this._private__requestUpdate) {\n            this._private__requestUpdate();\n        }\n    }\n    detached() {\n        if (this._private__series && this._private__dataChangedHandler) {\n            this._private__series.unsubscribeDataChanged(this._private__dataChangedHandler);\n        }\n        this._private__chart = null;\n        this._private__series = null;\n        this._private__paneView = null;\n        this._private__dataChangedHandler = null;\n    }\n    _internal_setMarkers(markers) {\n        this._private__markers = markers;\n        this._private__recalculateMarkers();\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__markersPositions = null;\n        this._internal_requestUpdate();\n    }\n    _internal_markers() {\n        return this._private__markers;\n    }\n    paneViews() {\n        return this._private__paneView ? [this._private__paneView] : [];\n    }\n    updateAllViews() {\n        this._private__updateAllViews();\n    }\n    hitTest(x, y) {\n        if (this._private__paneView) {\n            return this._private__paneView.renderer()?._internal_hitTest(x, y) ?? null;\n        }\n        return null;\n    }\n    autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__paneView) {\n            const margins = this._private__getAutoScaleMargins();\n            if (margins) {\n                return {\n                    priceRange: null,\n                    margins: margins,\n                };\n            }\n        }\n        return null;\n    }\n    _private__getAutoScaleMargins() {\n        const chart = ensureNotNull(this._private__chart);\n        const barSpacing = chart.timeScale().options().barSpacing;\n        if (this._private__autoScaleMarginsInvalidated || barSpacing !== this._private__cachedBarSpacing) {\n            this._private__cachedBarSpacing = barSpacing;\n            if (this._private__markers.length > 0) {\n                const shapeMargin$1 = shapeMargin(barSpacing);\n                const marginValue = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n                const positions = this._private__getMarkerPositions();\n                this._private__autoScaleMargins = {\n                    above: calculateAdjustedMargin(marginValue, positions.aboveBar, positions.inBar),\n                    below: calculateAdjustedMargin(marginValue, positions.belowBar, positions.inBar),\n                };\n            }\n            else {\n                this._private__autoScaleMargins = null;\n            }\n            this._private__autoScaleMarginsInvalidated = false;\n        }\n        return this._private__autoScaleMargins;\n    }\n    _private__getMarkerPositions() {\n        if (this._private__markersPositions === null) {\n            this._private__markersPositions = this._private__markers.reduce((acc, marker) => {\n                if (!acc[marker.position]) {\n                    acc[marker.position] = true;\n                }\n                return acc;\n            }, {\n                inBar: false,\n                aboveBar: false,\n                belowBar: false,\n            });\n        }\n        return this._private__markersPositions;\n    }\n    _private__recalculateMarkers() {\n        if (!this._private__chart || !this._private__series) {\n            return;\n        }\n        const timeScale = this._private__chart.timeScale();\n        if (timeScale.getVisibleLogicalRange() == null || !this._private__series || this._private__series?.data().length === 0) {\n            this._private__indexedMarkers = [];\n            return;\n        }\n        const seriesData = this._private__series?.data();\n        const firstDataIndex = timeScale.timeToIndex(ensureNotNull(seriesData[0].time), true);\n        this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n            const timePointIndex = timeScale.timeToIndex(marker.time, true);\n            const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n            const seriesDataByIndex = ensureNotNull(this._private__series).dataByIndex(timePointIndex, searchMode);\n            // @TODO think about should we expose the series' `.search()` method\n            const finalIndex = timeScale.timeToIndex(ensureNotNull(seriesDataByIndex).time, false);\n            return {\n                time: finalIndex,\n                position: marker.position,\n                shape: marker.shape,\n                color: marker.color,\n                id: marker.id,\n                _internal_internalId: index,\n                text: marker.text,\n                size: marker.size,\n                _internal_originalTime: marker.time,\n            };\n        });\n    }\n    _private__updateAllViews(updateType) {\n        if (this._private__paneView) {\n            this._private__recalculateMarkers();\n            this._private__paneView._internal_setMarkers(this._private__indexedMarkers);\n            this._private__paneView._internal_update(updateType);\n        }\n    }\n    _private__onDataChanged(scope) {\n        this._internal_requestUpdate();\n    }\n}\n\nclass SeriesMarkersPrimitiveWrapper extends SeriesPrimitiveAdapter {\n    constructor(series, primitive, markers) {\n        super(series, primitive);\n        if (markers) {\n            this.setMarkers(markers);\n        }\n    }\n    setMarkers(markers) {\n        this._internal__primitive._internal_setMarkers(markers);\n    }\n    markers() {\n        return this._internal__primitive._internal_markers();\n    }\n}\n/**\n * A function to create a series markers primitive.\n *\n * @param series - The series to which the primitive will be attached.\n *\n * @param markers - An array of markers to be displayed on the series.\n *\n * @example\n * ```js\n * import { createSeriesMarkers } from 'lightweight-charts';\n *\n *\tconst seriesMarkers = createSeriesMarkers(\n *\t\tseries,\n *\t\t[\n *\t\t\t{\n *\t\t\t\tcolor: 'green',\n *\t\t\t\tposition: 'inBar',\n * \t\t\t\tshape: 'arrowDown',\n *\t\t\t\ttime: 1556880900,\n *\t\t\t},\n *\t\t]\n *\t);\n *  // and then you can modify the markers\n *  // set it to empty array to remove all markers\n *  seriesMarkers.setMarkers([]);\n *\n *  // `seriesMarkers.markers()` returns current markers\n * ```\n */\nfunction createSeriesMarkers(series, markers) {\n    const wrapper = new SeriesMarkersPrimitiveWrapper(series, new SeriesMarkersPrimitive());\n    if (markers) {\n        wrapper.setMarkers(markers);\n    }\n    return wrapper;\n}\n\nclass ExpiringMarkerManager {\n    constructor(updateCallback) {\n        this._private__markers = new Map();\n        this._private__updateCallback = updateCallback;\n    }\n    _internal_setMarker(marker, key, timeout) {\n        this._internal_clearMarker(key);\n        if (timeout !== undefined) {\n            const timeoutId = window.setTimeout(() => {\n                this._private__markers.delete(key);\n                this._private__triggerUpdate();\n            }, timeout);\n            const markerWithTimeout = {\n                ...marker,\n                _internal_timeoutId: timeoutId,\n                _internal_expiresAt: Date.now() + timeout,\n            };\n            this._private__markers.set(key, markerWithTimeout);\n        }\n        else {\n            // For markers without timeout, we set timeoutId and expiresAt to undefined\n            this._private__markers.set(key, {\n                ...marker,\n                _internal_timeoutId: undefined,\n                _internal_expiresAt: undefined,\n            });\n        }\n        this._private__triggerUpdate();\n    }\n    _internal_clearMarker(key) {\n        const marker = this._private__markers.get(key);\n        if (marker && marker._internal_timeoutId !== undefined) {\n            window.clearTimeout(marker._internal_timeoutId);\n        }\n        this._private__markers.delete(key);\n        this._private__triggerUpdate();\n    }\n    _internal_clearAllMarkers() {\n        for (const [point] of this._private__markers) {\n            this._internal_clearMarker(point);\n        }\n    }\n    _internal_getMarkers() {\n        const now = Date.now();\n        const activeMarkers = [];\n        for (const [time, marker] of this._private__markers) {\n            if (!marker._internal_expiresAt || marker._internal_expiresAt > now) {\n                activeMarkers.push({ time: marker.time, sign: marker.sign, value: marker.value });\n            }\n            else {\n                this._internal_clearMarker(time);\n            }\n        }\n        return activeMarkers;\n    }\n    _internal_setUpdateCallback(callback) {\n        this._private__updateCallback = callback;\n    }\n    _private__triggerUpdate() {\n        if (this._private__updateCallback) {\n            this._private__updateCallback();\n        }\n    }\n}\n\nconst upDownMarkersPluginOptionDefaults = {\n    positiveColor: '#22AB94',\n    negativeColor: '#F7525F',\n    updateVisibilityDuration: 5000,\n};\n\nclass MarkersPrimitiveRenderer {\n    constructor(data, neutralColor, negativeColor, positiveColor) {\n        this._private__data = data;\n        this._private__neutralColor = neutralColor;\n        this._private__negativeColor = negativeColor;\n        this._private__positiveColor = positiveColor;\n    }\n    draw(target) {\n        target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            const tickWidth = Math.max(1, Math.floor(scope.horizontalPixelRatio));\n            const correction = (tickWidth % 2) / 2;\n            const rad = 4 /* Constants.Radius */ * scope.verticalPixelRatio + correction;\n            this._private__data.forEach((item) => {\n                const centreX = Math.round(item._internal_x * scope.horizontalPixelRatio) + correction;\n                ctx.beginPath();\n                const color = this._private__getColor(item._internal_sign);\n                ctx.fillStyle = color;\n                ctx.arc(centreX, item._internal_y * scope.verticalPixelRatio, rad, 0, 2 * Math.PI, false);\n                ctx.fill();\n                if (item._internal_sign) {\n                    ctx.strokeStyle = color;\n                    ctx.lineWidth = Math.floor(2 /* Constants.ArrowLineWidth */ * scope.horizontalPixelRatio);\n                    ctx.beginPath();\n                    ctx.moveTo((item._internal_x - 4.7 /* Constants.ArrowSize */) * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign) *\n                        scope.verticalPixelRatio);\n                    ctx.lineTo(item._internal_x * scope.horizontalPixelRatio + correction, (item._internal_y -\n                        7 /* Constants.ArrowOffset */ * item._internal_sign -\n                        7 /* Constants.ArrowOffset */ * item._internal_sign * 0.5 /* Constants.VerticalScale */) *\n                        scope.verticalPixelRatio);\n                    ctx.lineTo((item._internal_x + 4.7 /* Constants.ArrowSize */) * scope.horizontalPixelRatio + correction, (item._internal_y - 7 /* Constants.ArrowOffset */ * item._internal_sign) *\n                        scope.verticalPixelRatio);\n                    ctx.stroke();\n                }\n            });\n        });\n    }\n    _private__getColor(sign) {\n        if (sign === 0) {\n            return this._private__neutralColor;\n        }\n        return sign > 0 ? this._private__positiveColor : this._private__negativeColor;\n    }\n}\n\nfunction isAreaStyleOptions(opts, seriesType) {\n    return seriesType === 'Area';\n}\nfunction getNeutralColor(opts, seriesType) {\n    if (isAreaStyleOptions(opts, seriesType)) {\n        return opts.lineColor;\n    }\n    return opts.color;\n}\nclass MarkersPrimitivePaneView {\n    constructor(series, timeScale, options) {\n        this._private__data = [];\n        this._private__series = series;\n        this._private__timeScale = timeScale;\n        this._private__options = options;\n    }\n    _internal_update(markers) {\n        this._private__data = markers.map((marker) => {\n            const y = this._private__series.priceToCoordinate(marker.value);\n            if (y === null) {\n                return null;\n            }\n            const x = ensureNotNull(this._private__timeScale.timeToCoordinate(marker.time));\n            return {\n                _internal_x: x,\n                _internal_y: y,\n                _internal_sign: marker.sign,\n            };\n        })\n            .filter(notNull);\n    }\n    renderer() {\n        const options = this._private__series.options();\n        const seriesType = this._private__series.seriesType();\n        const neutralColor = getNeutralColor(options, seriesType);\n        return new MarkersPrimitiveRenderer(this._private__data, neutralColor, this._private__options.negativeColor, this._private__options.positiveColor);\n    }\n}\n\nfunction isLineData(item, type) {\n    return type === 'Line' || type === 'Area';\n}\nclass UpDownMarkersPrimitive {\n    constructor(options) {\n        this._private__chart = undefined;\n        this._private__series = undefined;\n        this._private__paneViews = [];\n        this._private__horzScaleBehavior = null;\n        this._private__managedDataPoints = new Map();\n        this._private__markersManager = new ExpiringMarkerManager(() => this._internal_requestUpdate());\n        this._private__options = {\n            ...upDownMarkersPluginOptionDefaults,\n            ...options,\n        };\n    }\n    _internal_applyOptions(options) {\n        this._private__options = {\n            ...this._private__options,\n            ...options,\n        };\n        this._internal_requestUpdate();\n    }\n    _internal_setMarkers(markers) {\n        this._private__markersManager._internal_clearAllMarkers();\n        const horzBehaviour = this._private__horzScaleBehavior;\n        if (!horzBehaviour) {\n            return;\n        }\n        markers.forEach((marker) => {\n            this._private__markersManager._internal_setMarker(marker, horzBehaviour.key(marker.time));\n        });\n    }\n    _internal_markers() {\n        return this._private__markersManager._internal_getMarkers();\n    }\n    _internal_requestUpdate() {\n        this._private__requestUpdate?.();\n    }\n    attached(params) {\n        const { chart, series, requestUpdate, horzScaleBehavior, } = params;\n        this._private__chart = chart;\n        this._private__series = series;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        const seriesType = this._private__series.seriesType();\n        if (seriesType !== 'Area' && seriesType !== 'Line') {\n            throw new Error('UpDownMarkersPrimitive is only supported for Area and Line series types');\n        }\n        this._private__paneViews = [\n            new MarkersPrimitivePaneView(this._private__series, this._private__chart.timeScale(), this._private__options),\n        ];\n        this._private__requestUpdate = requestUpdate;\n        this._internal_requestUpdate();\n    }\n    detached() {\n        this._private__chart = undefined;\n        this._private__series = undefined;\n        this._private__requestUpdate = undefined;\n    }\n    _internal_chart() {\n        return ensureDefined(this._private__chart);\n    }\n    _internal_series() {\n        return ensureDefined(this._private__series);\n    }\n    updateAllViews() {\n        this._private__paneViews.forEach((pw) => pw._internal_update(this._internal_markers()));\n    }\n    paneViews() {\n        return this._private__paneViews;\n    }\n    _internal_setData(data) {\n        if (!this._private__series) {\n            throw new Error('Primitive not attached to series');\n        }\n        const seriesType = this._private__series.seriesType();\n        this._private__managedDataPoints.clear();\n        const horzBehaviour = this._private__horzScaleBehavior;\n        if (horzBehaviour) {\n            data.forEach((d) => {\n                if (isFulfilledData(d) && isLineData(d, seriesType)) {\n                    this._private__managedDataPoints.set(horzBehaviour.key(d.time), d.value);\n                }\n            });\n        }\n        ensureDefined(this._private__series).setData(data);\n    }\n    _internal_update(data, historicalUpdate) {\n        if (!this._private__series || !this._private__horzScaleBehavior) {\n            throw new Error('Primitive not attached to series');\n        }\n        const seriesType = this._private__series.seriesType();\n        const horzKey = this._private__horzScaleBehavior.key(data.time);\n        if (isWhitespaceData(data)) {\n            this._private__managedDataPoints.delete(horzKey);\n        }\n        if (isFulfilledData(data) && isLineData(data, seriesType)) {\n            const existingPrice = this._private__managedDataPoints.get(horzKey);\n            if (existingPrice) {\n                this._private__markersManager._internal_setMarker({\n                    time: data.time,\n                    value: data.value,\n                    sign: getSign(data.value, existingPrice),\n                }, horzKey, this._private__options.updateVisibilityDuration);\n            }\n        }\n        ensureDefined(this._private__series).update(data, historicalUpdate);\n    }\n    _internal_clearMarkers() {\n        this._private__markersManager._internal_clearAllMarkers();\n    }\n}\nfunction getSign(newValue, oldValue) {\n    if (newValue === oldValue) {\n        return 0;\n    }\n    return newValue - oldValue > 0 ? 1 : -1;\n}\n\nclass SeriesUpDownMarkerPrimitiveWrapper extends SeriesPrimitiveAdapter {\n    setData(data) {\n        return this._internal__primitive._internal_setData(data);\n    }\n    update(data, historicalUpdate) {\n        return this._internal__primitive._internal_update(data, historicalUpdate);\n    }\n    markers() {\n        return this._internal__primitive._internal_markers();\n    }\n    setMarkers(markers) {\n        return this._internal__primitive._internal_setMarkers(markers);\n    }\n    clearMarkers() {\n        return this._internal__primitive._internal_clearMarkers();\n    }\n}\n/**\n * Creates and attaches the Series Up Down Markers Plugin.\n *\n * @param series - Series to which attach the Up Down Markers Plugin\n * @param options - options for the Up Down Markers Plugin\n *\n * @returns Api for Series Up Down Marker Plugin. {@link ISeriesUpDownMarkerPluginApi}\n *\n * @example\n * ```js\n * import { createUpDownMarkers, createChart, LineSeries } from 'lightweight-charts';\n *\n * const chart = createChart('container');\n * const lineSeries = chart.addSeries(LineSeries);\n * const upDownMarkers = createUpDownMarkers(lineSeries, {\n *     positiveColor: '#22AB94',\n *     negativeColor: '#F7525F',\n *     updateVisibilityDuration: 5000,\n * });\n * // to add some data\n * upDownMarkers.setData(\n *     [\n *         { time: '2020-02-02', value: 12.34 },\n *         //... more line series data\n *     ]\n * );\n * // ... Update some values\n * upDownMarkers.update({ time: '2020-02-02', value: 13.54 }, true);\n * // to remove plugin from the series\n * upDownMarkers.detach();\n * ```\n */\nfunction createUpDownMarkers(series, options = {}) {\n    const wrapper = new SeriesUpDownMarkerPrimitiveWrapper(series, new UpDownMarkersPrimitive(options));\n    return wrapper;\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = {\n    ...seriesOptionsDefaults,\n    ...customStyleDefaults$1,\n};\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n    return \"5.0.2\";\n}\n\nexport { areaSeries as AreaSeries, barSeries as BarSeries, baselineSeries as BaselineSeries, candlestickSeries as CandlestickSeries, ColorType, CrosshairMode, histogramSeries as HistogramSeries, LastPriceAnimationMode, lineSeries as LineSeries, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, createImageWatermark, createOptionsChart, createSeriesMarkers, createTextWatermark, createUpDownMarkers, createYieldCurveChart, customSeriesDefaultOptions, defaultHorzScaleBehavior, isBusinessDay, isUTCTimestamp, version };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}