{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [trade, setTrade] = useState({\n    action: '',\n    price: '',\n    quantity: ''\n  });\n  const [trades, setTrades] = useState([]);\n  const [closeTrade, setCloseTrade] = useState({\n    tradeIndex: '',\n    quantity: '',\n    closePrice: ''\n  });\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [summary, setSummary] = useState({\n    unrealized: 0,\n    realized: 0,\n    total: 0\n  });\n  const handleInputChange = (key, value) => {\n    setTrade({\n      ...trade,\n      [key]: value\n    });\n  };\n  const handleCloseInputChange = (key, value) => {\n    setCloseTrade({\n      ...closeTrade,\n      [key]: value\n    });\n  };\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Function to fetch current price\n  const fetchCurrentPrice = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/current_price');\n      setCurrentPrice(response.data.currentPrice);\n\n      // Auto-fill the entry price if not already filled\n      if (!trade.price) {\n        setTrade(prev => ({\n          ...prev,\n          price: response.data.currentPrice\n        }));\n      }\n\n      // Auto-fill the close price if not already filled\n      if (!closeTrade.closePrice) {\n        setCloseTrade(prev => ({\n          ...prev,\n          closePrice: response.data.currentPrice\n        }));\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching current price:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return; // Prevent multiple submissions\n\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/account\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...trade,\n          time: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Trade placed successfully!\");\n        setTrade({\n          action: \"\",\n          price: \"\",\n          quantity: \"\"\n        });\n        // Refresh the trades list after adding a new trade\n        fetchTrades();\n        fetchCurrentPrice();\n      } else {\n        throw new Error(data.error || \"Failed to place trade\");\n      }\n    } catch (error) {\n      console.error(\"Error saving trade:\", error);\n      alert(\"Failed to save trade. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const [isClosing, setIsClosing] = useState(false);\n  const handleClose = async e => {\n    e.preventDefault();\n    if (isClosing) return; // Prevent multiple submissions\n\n    setIsClosing(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/close_trade\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tradeIndex: closeTrade.tradeIndex,\n          quantity: closeTrade.quantity,\n          closePrice: closeTrade.closePrice || currentPrice // Use entered price or current price\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`Trade closed successfully! Realized P/L: $${data.realizedPL}`);\n        // Reset the form\n        setCloseTrade({\n          tradeIndex: '',\n          quantity: '',\n          closePrice: ''\n        });\n        // Refresh the trades list\n        fetchTrades();\n        fetchCurrentPrice();\n      } else {\n        throw new Error(data.error || \"Failed to close trade\");\n      }\n    } catch (error) {\n      console.error(\"Error closing trade:\", error);\n      alert(\"Failed to close trade. Please try again.\");\n    } finally {\n      setIsClosing(false);\n    }\n  };\n  const fetchTrades = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/account');\n      setTrades(response.data.trades);\n      setSummary(response.data.pnl || {\n        unrealized: 0,\n        realized: 0,\n        total: 0\n      });\n      if (response.data.currentPrice) {\n        setCurrentPrice(response.data.currentPrice);\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error('Error fetching trades:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  const initializeSystem = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/initialize');\n      if (response.data.currentPrice) {\n        setCurrentPrice(response.data.currentPrice);\n        // Auto-fill the price fields with current price\n        setTrade(prev => ({\n          ...prev,\n          price: response.data.currentPrice\n        }));\n        setCloseTrade(prev => ({\n          ...prev,\n          closePrice: response.data.currentPrice\n        }));\n      }\n      fetchTrades(); // Get trades after initialization\n    } catch (error) {\n      var _error$response3;\n      console.error('Error initializing system:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    }\n  };\n\n  // Initialize system and setup periodic updates\n  useEffect(() => {\n    initializeSystem();\n\n    // Update prices and P/L periodically (every 5 seconds)\n    const intervalId = setInterval(() => {\n      fetchCurrentPrice();\n      fetchTrades();\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Get only open trades for the dropdown\n  const openTrades = trades.filter(trade => trade.isOpen);\n\n  // Update price field when action changes\n  useEffect(() => {\n    if (currentPrice) {\n      setTrade(prev => ({\n        ...prev,\n        price: currentPrice\n      }));\n    }\n  }, [trade.action]);\n\n  // Get the selected trade for display\n  const selectedTrade = closeTrade.tradeIndex !== '' ? trades.find(t => t.index === parseInt(closeTrade.tradeIndex)) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Market Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 12\n        }, this), \" $\", currentPrice ? currentPrice.toFixed(5) : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pnl-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Unrealized P/L:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: summary.unrealized >= 0 ? 'profit' : 'loss',\n            children: [\"$\", summary.unrealized.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Realized P/L:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: summary.realized >= 0 ? 'profit' : 'loss',\n            children: [\"$\", summary.realized.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total P/L:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: summary.total >= 0 ? 'profit' : 'loss',\n            children: [\"$\", summary.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Place Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"trade-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: trade.action,\n          onChange: e => handleInputChange('action', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"buy\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sell\",\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.0001\",\n            value: trade.price,\n            onChange: e => handleInputChange('price', e.target.value),\n            placeholder: \"Enter Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 5\n          }, this), currentPrice && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"use-current-btn\",\n            onClick: () => {\n              handleInputChange('price', currentPrice);\n            },\n            children: \"Use Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: trade.quantity,\n          onChange: e => handleInputChange('quantity', e.target.value),\n          placeholder: \"Enter Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Placing...' : 'Place Trade'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), trade.action && trade.price && trade.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trade Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Action: \", trade.action.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: $\", Number(trade.price).toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", trade.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Value: $\", (Number(trade.price) * Number(trade.quantity)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Close Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleClose,\n      className: \"trade-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: closeTrade.tradeIndex,\n          onChange: e => handleCloseInputChange('tradeIndex', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a trade to close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), openTrades.map(trade => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: trade.index,\n            children: [trade.action.toUpperCase(), \" \", trade.remainingQuantity, \" at $\", trade.entryPrice, \" (P/L: $\", trade.profitLoss, \")\"]\n          }, trade.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), selectedTrade && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-trade-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Entry Price: $\", selectedTrade.entryPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remaining Quantity: \", selectedTrade.remainingQuantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current P/L: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: selectedTrade.profitLoss >= 0 ? 'profit' : 'loss',\n            children: [\"$\", selectedTrade.profitLoss]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity to Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: closeTrade.quantity,\n          onChange: e => handleCloseInputChange('quantity', e.target.value),\n          placeholder: \"Enter Quantity to Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), selectedTrade && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"use-current-btn\",\n          onClick: () => handleCloseInputChange('quantity', selectedTrade.remainingQuantity),\n          children: \"Close All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Close Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.0001\",\n          value: closeTrade.closePrice,\n          onChange: e => handleCloseInputChange('closePrice', e.target.value),\n          placeholder: \"Enter Close Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), currentPrice && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"use-current-btn\",\n          onClick: () => handleCloseInputChange('closePrice', currentPrice),\n          children: \"Use Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: isClosing || !closeTrade.tradeIndex,\n        children: isClosing ? 'Closing...' : 'Close Trade'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trades-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), trades.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trades-list\",\n        children: trades.map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `trade-item ${trade.isOpen ? 'open-trade' : 'closed-trade'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trade-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trade-action\",\n              children: trade.action.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trade-status\",\n              children: trade.isOpen ? 'OPEN' : 'CLOSED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trade-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Entry: $\", trade.entryPrice, \" (\", trade.entryTime, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), trade.closePrice && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Close: $\", trade.closePrice, \" (\", trade.closeTime, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Quantity: \", trade.quantity, \" \", trade.isOpen && trade.remainingQuantity !== trade.quantity && `(${trade.remainingQuantity} remaining)`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this), trade.isOpen ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unrealized P/L: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: trade.profitLoss >= 0 ? 'profit' : 'loss',\n                children: [\"$\", trade.profitLoss]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Realized P/L: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: trade.realizedProfitLoss >= 0 ? 'profit' : 'loss',\n                children: [\"$\", trade.realizedProfitLoss]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this), trade.isOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Trade Index: \", trade.index]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)]\n        }, trade.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trades available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .form-container {\n          padding: 20px;\n          max-width: 800px;\n          margin: 0 auto;\n        }\n        .market-info {\n          background-color: #f5f5f5;\n          padding: 15px;\n          border-radius: 5px;\n          margin-bottom: 20px;\n        }\n        .pnl-summary {\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n        .pnl-summary p {\n          margin-right: 20px;\n        }\n        .trade-form {\n          margin-bottom: 30px;\n        }\n        .form-group {\n          margin-bottom: 15px;\n          position: relative;\n        }\n        .form-group label {\n          display: block;\n          margin-bottom: 5px;\n          font-weight: bold;\n        }\n        .form-group input, .form-group select {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .use-current-btn {\n          position: absolute;\n          right: 0;\n          top: 30px;\n          background: #f0f0f0;\n          border: 1px solid #ccc;\n          padding: 4px 8px;\n          cursor: pointer;\n          border-radius: 4px;\n        }\n        .submit-button {\n          background-color: #4CAF50;\n          color: white;\n          padding: 10px 15px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .submit-button:disabled {\n          background-color: #cccccc;\n          cursor: not-allowed;\n        }\n        .trade-preview {\n          background-color: #f9f9f9;\n          padding: 15px;\n          border-radius: 5px;\n          margin-bottom: 20px;\n        }\n        .selected-trade-info {\n          background-color: #f0f0f0;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 15px;\n        }\n        .trades-container {\n          margin-top: 30px;\n        }\n        .trades-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          gap: 15px;\n        }\n        .trade-item {\n          border: 1px solid #ddd;\n          border-radius: 5px;\n          padding: 15px;\n        }\n        .open-trade {\n          border-left: 4px solid #4CAF50;\n        }\n        .closed-trade {\n          border-left: 4px solid #999;\n          opacity: 0.8;\n        }\n        .trade-header {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 10px;\n          padding-bottom: 5px;\n          border-bottom: 1px solid #eee;\n        }\n        .trade-action {\n          font-weight: bold;\n        }\n        .trade-status {\n          padding: 2px 6px;\n          border-radius: 3px;\n          font-size: 0.8em;\n        }\n        .open-trade .trade-status {\n          background-color: #e8f5e9;\n          color: #2e7d32;\n        }\n        .closed-trade .trade-status {\n          background-color: #f5f5f5;\n          color: #.closed-trade .trade-status {\n  background-color: #f5f5f5;\n  color: #757575;\n}\n.trade-details p {\n  margin: 5px 0;\n}\n.profit {\n  color: #4CAF50;\n}\n.loss {\n  color: #f44336;\n}\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"HPBDTLIo9REIKhEg8m55EMU5uWc=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Form","_s","trade","setTrade","action","price","quantity","trades","setTrades","closeTrade","setCloseTrade","tradeIndex","closePrice","currentPrice","setCurrentPrice","summary","setSummary","unrealized","realized","total","handleInputChange","key","value","handleCloseInputChange","isSubmitting","setIsSubmitting","fetchCurrentPrice","response","get","data","prev","error","_error$response","console","message","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","time","Date","toISOString","split","json","ok","alert","fetchTrades","Error","isClosing","setIsClosing","handleClose","realizedPL","pnl","_error$response2","initializeSystem","_error$response3","intervalId","setInterval","clearInterval","openTrades","filter","isOpen","selectedTrade","find","t","index","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onSubmit","onChange","target","type","step","placeholder","onClick","disabled","toUpperCase","Number","map","remainingQuantity","entryPrice","profitLoss","length","entryTime","closeTime","realizedProfitLoss","jsx","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Form = () => {\n  const [trade, setTrade] = useState({\n    action: '',\n    price: '',\n    quantity: ''\n  });\n  const [trades, setTrades] = useState([]);\n  const [closeTrade, setCloseTrade] = useState({\n    tradeIndex: '',\n    quantity: '',\n    closePrice: ''\n  });\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [summary, setSummary] = useState({\n    unrealized: 0,\n    realized: 0,\n    total: 0\n  });\n\n  const handleInputChange = (key, value) => {\n    setTrade({ ...trade, [key]: value });\n  };\n\n  const handleCloseInputChange = (key, value) => {\n    setCloseTrade({ ...closeTrade, [key]: value });\n  };\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Function to fetch current price\n  const fetchCurrentPrice = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/current_price');\n      setCurrentPrice(response.data.currentPrice);\n      \n      // Auto-fill the entry price if not already filled\n      if (!trade.price) {\n        setTrade(prev => ({\n          ...prev,\n          price: response.data.currentPrice\n        }));\n      }\n      \n      // Auto-fill the close price if not already filled\n      if (!closeTrade.closePrice) {\n        setCloseTrade(prev => ({\n          ...prev,\n          closePrice: response.data.currentPrice\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching current price:', error.response?.data || error.message);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) return; // Prevent multiple submissions\n\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/account\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...trade,\n          time: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(\"Trade placed successfully!\");\n        setTrade({ action: \"\", price: \"\", quantity: \"\" });\n        // Refresh the trades list after adding a new trade\n        fetchTrades();\n        fetchCurrentPrice();\n      } else {\n        throw new Error(data.error || \"Failed to place trade\");\n      }\n    } catch (error) {\n      console.error(\"Error saving trade:\", error);\n      alert(\"Failed to save trade. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const [isClosing, setIsClosing] = useState(false);\n\n  const handleClose = async (e) => {\n    e.preventDefault();\n    if (isClosing) return; // Prevent multiple submissions\n\n    setIsClosing(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/close_trade\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          tradeIndex: closeTrade.tradeIndex, \n          quantity: closeTrade.quantity,\n          closePrice: closeTrade.closePrice || currentPrice // Use entered price or current price\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(`Trade closed successfully! Realized P/L: $${data.realizedPL}`);\n        // Reset the form\n        setCloseTrade({ tradeIndex: '', quantity: '', closePrice: '' });\n        // Refresh the trades list\n        fetchTrades();\n        fetchCurrentPrice();\n      } else {\n        throw new Error(data.error || \"Failed to close trade\");\n      }\n    } catch (error) {\n      console.error(\"Error closing trade:\", error);\n      alert(\"Failed to close trade. Please try again.\");\n    } finally {\n      setIsClosing(false);\n    }\n  };\n\n  const fetchTrades = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/account');\n      setTrades(response.data.trades);\n      setSummary(response.data.pnl || { unrealized: 0, realized: 0, total: 0 });\n      if (response.data.currentPrice) {\n        setCurrentPrice(response.data.currentPrice);\n      }\n    } catch (error) {\n      console.error('Error fetching trades:', error.response?.data || error.message);\n    }\n  };\n\n  const initializeSystem = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/initialize');\n      if (response.data.currentPrice) {\n        setCurrentPrice(response.data.currentPrice);\n        // Auto-fill the price fields with current price\n        setTrade(prev => ({ ...prev, price: response.data.currentPrice }));\n        setCloseTrade(prev => ({ ...prev, closePrice: response.data.currentPrice }));\n      }\n      fetchTrades(); // Get trades after initialization\n    } catch (error) {\n      console.error('Error initializing system:', error.response?.data || error.message);\n    }\n  };\n\n  // Initialize system and setup periodic updates\n  useEffect(() => {\n    initializeSystem();\n    \n    // Update prices and P/L periodically (every 5 seconds)\n    const intervalId = setInterval(() => {\n      fetchCurrentPrice();\n      fetchTrades();\n    }, 5000);\n    \n    return () => clearInterval(intervalId);\n  }, []);\n  \n  // Get only open trades for the dropdown\n  const openTrades = trades.filter(trade => trade.isOpen);\n\n  // Update price field when action changes\n  useEffect(() => {\n    if (currentPrice) {\n      setTrade(prev => ({...prev, price: currentPrice}));\n    }\n  }, [trade.action]);\n\n  // Get the selected trade for display\n  const selectedTrade = closeTrade.tradeIndex !== '' ? \n    trades.find(t => t.index === parseInt(closeTrade.tradeIndex)) : null;\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"market-info\">\n        <h2>Market Information</h2>\n        <p><strong>Current Price:</strong> ${currentPrice ? currentPrice.toFixed(5) : 'Loading...'}</p>\n        <div className=\"pnl-summary\">\n          <p><strong>Unrealized P/L:</strong> <span className={summary.unrealized >= 0 ? 'profit' : 'loss'}>${summary.unrealized.toFixed(2)}</span></p>\n          <p><strong>Realized P/L:</strong> <span className={summary.realized >= 0 ? 'profit' : 'loss'}>${summary.realized.toFixed(2)}</span></p>\n          <p><strong>Total P/L:</strong> <span className={summary.total >= 0 ? 'profit' : 'loss'}>${summary.total.toFixed(2)}</span></p>\n        </div>\n      </div>\n\n      <h2>Place Trade</h2>\n      <form onSubmit={handleSubmit} className=\"trade-form\">\n        <div className=\"form-group\">\n          <label>Action</label>\n          <select\n            value={trade.action}\n            onChange={(e) => handleInputChange('action', e.target.value)}\n          >\n            <option value=\"\">Select Action</option>\n            <option value=\"buy\">Buy</option>\n            <option value=\"sell\">Sell</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n  <label>Price</label>\n  <div className=\"price-input-container\">\n    <input\n      type=\"number\"\n      step=\"0.0001\"\n      value={trade.price}\n      onChange={(e) => handleInputChange('price', e.target.value)}\n      placeholder=\"Enter Price\"\n    />\n    {currentPrice && (\n      <button \n        type=\"button\" \n        className=\"use-current-btn\"\n        onClick={() => {\n          handleInputChange('price', currentPrice);\n        }}\n      >\n        Use Current\n      </button>\n    )}\n  </div>\n</div>\n\n\n        <div className=\"form-group\">\n          <label>Quantity</label>\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={trade.quantity}\n            onChange={(e) => handleInputChange('quantity', e.target.value)}\n            placeholder=\"Enter Quantity\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\" disabled={isSubmitting}>\n          {isSubmitting ? 'Placing...' : 'Place Trade'}\n        </button>\n      </form>\n\n      {trade.action && trade.price && trade.quantity && (\n        <div className=\"trade-preview\">\n          <h3>Trade Preview:</h3>\n          <p>Action: {trade.action.toUpperCase()}</p>\n          <p>Price: ${Number(trade.price).toFixed(4)}</p>\n          <p>Quantity: {trade.quantity}</p>\n          <p>Total Value: ${(Number(trade.price) * Number(trade.quantity)).toFixed(2)}</p>\n        </div>\n      )}\n\n      <h2>Close Trade</h2>\n      <form onSubmit={handleClose} className=\"trade-form\">\n        <div className=\"form-group\">\n          <label>Select Trade</label>\n          <select\n            value={closeTrade.tradeIndex}\n            onChange={(e) => handleCloseInputChange('tradeIndex', e.target.value)}\n          >\n            <option value=\"\">Select a trade to close</option>\n            {openTrades.map((trade) => (\n              <option key={trade.index} value={trade.index}>\n                {trade.action.toUpperCase()} {trade.remainingQuantity} at ${trade.entryPrice} (P/L: ${trade.profitLoss})\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedTrade && (\n          <div className=\"selected-trade-info\">\n            <p>Entry Price: ${selectedTrade.entryPrice}</p>\n            <p>Remaining Quantity: {selectedTrade.remainingQuantity}</p>\n            <p>Current P/L: <span className={selectedTrade.profitLoss >= 0 ? 'profit' : 'loss'}>${selectedTrade.profitLoss}</span></p>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label>Quantity to Close</label>\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={closeTrade.quantity}\n            onChange={(e) => handleCloseInputChange('quantity', e.target.value)}\n            placeholder=\"Enter Quantity to Close\"\n          />\n          {selectedTrade && (\n            <button \n              type=\"button\" \n              className=\"use-current-btn\"\n              onClick={() => handleCloseInputChange('quantity', selectedTrade.remainingQuantity)}\n            >\n              Close All\n            </button>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Close Price</label>\n          <input\n            type=\"number\"\n            step=\"0.0001\"\n            value={closeTrade.closePrice}\n            onChange={(e) => handleCloseInputChange('closePrice', e.target.value)}\n            placeholder=\"Enter Close Price\"\n          />\n          {currentPrice && (\n            <button \n              type=\"button\" \n              className=\"use-current-btn\"\n              onClick={() => handleCloseInputChange('closePrice', currentPrice)}\n            >\n              Use Current\n            </button>\n          )}\n        </div>\n\n        <button \n          type=\"submit\" \n          className=\"submit-button\" \n          disabled={isClosing || !closeTrade.tradeIndex}\n        >\n          {isClosing ? 'Closing...' : 'Close Trade'}\n        </button>\n      </form>\n\n      <div className=\"trades-container\">\n        <h3>Current Trades</h3>\n        {trades.length > 0 ? (\n          <div className=\"trades-list\">\n            {trades.map((trade) => (\n              <div key={trade.index} className={`trade-item ${trade.isOpen ? 'open-trade' : 'closed-trade'}`}>\n                <div className=\"trade-header\">\n                  <span className=\"trade-action\">{trade.action.toUpperCase()}</span>\n                  <span className=\"trade-status\">{trade.isOpen ? 'OPEN' : 'CLOSED'}</span>\n                </div>\n                <div className=\"trade-details\">\n                  <p>Entry: ${trade.entryPrice} ({trade.entryTime})</p>\n                  {trade.closePrice && <p>Close: ${trade.closePrice} ({trade.closeTime})</p>}\n                  <p>Quantity: {trade.quantity} {trade.isOpen && trade.remainingQuantity !== trade.quantity && `(${trade.remainingQuantity} remaining)`}</p>\n                  {trade.isOpen ? (\n                    <p>Unrealized P/L: <span className={trade.profitLoss >= 0 ? 'profit' : 'loss'}>${trade.profitLoss}</span></p>\n                  ) : (\n                    <p>Realized P/L: <span className={trade.realizedProfitLoss >= 0 ? 'profit' : 'loss'}>${trade.realizedProfitLoss}</span></p>\n                  )}\n                  {trade.isOpen && (<p>Trade Index: {trade.index}</p>)}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No trades available.</p>\n        )}\n      </div>\n      \n      <style jsx>{`\n        .form-container {\n          padding: 20px;\n          max-width: 800px;\n          margin: 0 auto;\n        }\n        .market-info {\n          background-color: #f5f5f5;\n          padding: 15px;\n          border-radius: 5px;\n          margin-bottom: 20px;\n        }\n        .pnl-summary {\n          display: flex;\n          justify-content: space-between;\n          flex-wrap: wrap;\n        }\n        .pnl-summary p {\n          margin-right: 20px;\n        }\n        .trade-form {\n          margin-bottom: 30px;\n        }\n        .form-group {\n          margin-bottom: 15px;\n          position: relative;\n        }\n        .form-group label {\n          display: block;\n          margin-bottom: 5px;\n          font-weight: bold;\n        }\n        .form-group input, .form-group select {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .use-current-btn {\n          position: absolute;\n          right: 0;\n          top: 30px;\n          background: #f0f0f0;\n          border: 1px solid #ccc;\n          padding: 4px 8px;\n          cursor: pointer;\n          border-radius: 4px;\n        }\n        .submit-button {\n          background-color: #4CAF50;\n          color: white;\n          padding: 10px 15px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .submit-button:disabled {\n          background-color: #cccccc;\n          cursor: not-allowed;\n        }\n        .trade-preview {\n          background-color: #f9f9f9;\n          padding: 15px;\n          border-radius: 5px;\n          margin-bottom: 20px;\n        }\n        .selected-trade-info {\n          background-color: #f0f0f0;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 15px;\n        }\n        .trades-container {\n          margin-top: 30px;\n        }\n        .trades-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          gap: 15px;\n        }\n        .trade-item {\n          border: 1px solid #ddd;\n          border-radius: 5px;\n          padding: 15px;\n        }\n        .open-trade {\n          border-left: 4px solid #4CAF50;\n        }\n        .closed-trade {\n          border-left: 4px solid #999;\n          opacity: 0.8;\n        }\n        .trade-header {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 10px;\n          padding-bottom: 5px;\n          border-bottom: 1px solid #eee;\n        }\n        .trade-action {\n          font-weight: bold;\n        }\n        .trade-status {\n          padding: 2px 6px;\n          border-radius: 3px;\n          font-size: 0.8em;\n        }\n        .open-trade .trade-status {\n          background-color: #e8f5e9;\n          color: #2e7d32;\n        }\n        .closed-trade .trade-status {\n          background-color: #f5f5f5;\n          color: #.closed-trade .trade-status {\n  background-color: #f5f5f5;\n  color: #757575;\n}\n.trade-details p {\n  margin: 5px 0;\n}\n.profit {\n  color: #4CAF50;\n}\n.loss {\n  color: #f44336;\n}\n      `}</style>\n    </div>\n  );\n};\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}