{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/ChartAndControls.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartAndControls = ({\n  chartContainerRef,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  handleTrade,\n  addNewCandle\n}) => {\n  _s();\n  const [projectionMode, setProjectionMode] = useState('long');\n  const [projections, setProjections] = useState([]);\n  const [chart, setChart] = useState(null);\n  const [selectedProjection, setSelectedProjection] = useState(null);\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const newChart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#eee'\n        },\n        horzLines: {\n          color: '#eee'\n        }\n      },\n      priceScale: {\n        minMove: 0.0001\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#ccc'\n      },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0\n        },\n        horzLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0\n        }\n      }\n    });\n    const series = newChart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    setChart(newChart);\n    axios.post('http://127.0.0.1:5000/api/historical_data', {\n      startDate,\n      timeInterval\n    }).then(response => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000,\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    }).catch(error => console.error('Error fetching data:', error));\n    return () => newChart.remove();\n  }, [chartContainerRef, setCandlestickSeries, setCurrentIndex, startDate, timeInterval]);\n  useEffect(() => {\n    if (!chart) return;\n    const handleClick = param => {\n      if (!param || !param.time || !param.point) return;\n      const price = chart.priceScale().coordinateToPrice(param.point.y);\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n\n      // Check if we clicked near an existing projection\n      const clickedProjection = findNearestProjection(param.point.y, param.time);\n      if (clickedProjection) {\n        setSelectedProjection(clickedProjection.id);\n        return;\n      }\n      const pipValue = 0.0001;\n      const longPips = 40 * pipValue;\n      const shortPips = 30 * pipValue;\n      const lastCandleTime = currentIndex > 0 ? currentIndex * timeInterval : param.time;\n      const projectionTimeRange = lastCandleTime + timeInterval * 5;\n      let topPrice, bottomPrice, topColor, bottomColor;\n      if (projectionMode === 'long') {\n        topPrice = price + longPips;\n        bottomPrice = price - shortPips;\n        topColor = 'rgba(76, 175, 80, 0.8)';\n        bottomColor = 'rgba(244, 67, 54, 0.8)';\n      } else {\n        topPrice = price + shortPips;\n        bottomPrice = price - longPips;\n        topColor = 'rgba(244, 67, 54, 0.8)';\n        bottomColor = 'rgba(76, 175, 80, 0.8)';\n      }\n      const projectionId = Date.now();\n      const projectionNumber = projections.length + 1;\n      const topLine = chart.addLineSeries({\n        color: topColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Top`\n      });\n      const bottomLine = chart.addLineSeries({\n        color: bottomColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Bottom`\n      });\n      topLine.setData([{\n        time: param.time,\n        value: topPrice\n      }, {\n        time: projectionTimeRange,\n        value: topPrice\n      }]);\n      bottomLine.setData([{\n        time: param.time,\n        value: bottomPrice\n      }, {\n        time: projectionTimeRange,\n        value: bottomPrice\n      }]);\n      setProjections(prev => [...prev, {\n        id: projectionId,\n        number: projectionNumber,\n        series: [topLine, bottomLine],\n        prices: {\n          top: topPrice,\n          bottom: bottomPrice\n        },\n        time: param.time\n      }]);\n    };\n    const findNearestProjection = (y, time) => {\n      const tolerance = 0.0002; // Adjust this value to change click sensitivity\n      const price = chart.priceScale().coordinateToPrice(y);\n      return projections.find(proj => {\n        const timeMatch = Math.abs(proj.time - time) < timeInterval;\n        const priceMatch = Math.abs(proj.prices.top - price) < tolerance || Math.abs(proj.prices.bottom - price) < tolerance;\n        return timeMatch && priceMatch;\n      });\n    };\n    chart.subscribeClick(handleClick);\n    return () => chart.unsubscribeClick(handleClick);\n  }, [chart, setClickedPoint, projectionMode, currentIndex, timeInterval, projections]);\n  const removeProjection = id => {\n    setProjections(prev => {\n      return prev.filter(proj => {\n        if (proj.id === id) {\n          proj.series.forEach(line => {\n            if (line) chart.removeSeries(line);\n          });\n          return false;\n        }\n        return true;\n      });\n    });\n    setSelectedProjection(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"w-full h-[400px] border border-gray-200 rounded-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setProjectionMode('long'),\n        className: `${projectionMode === 'long' ? 'bg-green-600' : 'bg-gray-200 text-gray-700'}`,\n        children: \"Long Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setProjectionMode('short'),\n        className: `${projectionMode === 'short' ? 'bg-red-600' : 'bg-gray-200 text-gray-700'}`,\n        children: \"Short Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleTrade('buy'),\n        className: \"bg-green-600\",\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleTrade('sell'),\n        className: \"bg-red-600\",\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addNewCandle,\n        className: \"bg-blue-600\",\n        children: \"Next Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          children: \"Active Projections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-3 gap-2\",\n          children: projections.map(proj => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-2 rounded border ${selectedProjection === proj.id ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [\"Projection \", proj.number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => removeProjection(proj.id),\n                variant: \"destructive\",\n                size: \"sm\",\n                className: \"h-6\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, proj.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartAndControls, \"VKoFX4sMzX2D3t2IFMhmtkWBo4A=\");\n_c = ChartAndControls;\nexport default ChartAndControls;\nvar _c;\n$RefreshReg$(_c, \"ChartAndControls\");","map":{"version":3,"names":["useEffect","useState","axios","createChart","Button","Card","CardHeader","CardTitle","CardContent","jsxDEV","_jsxDEV","ChartAndControls","chartContainerRef","setCandlestickSeries","currentIndex","setCurrentIndex","startDate","timeInterval","setClickedPoint","handleTrade","addNewCandle","_s","projectionMode","setProjectionMode","projections","setProjections","chart","setChart","selectedProjection","setSelectedProjection","current","newChart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","minMove","timeScale","timeVisible","secondsVisible","borderColor","crosshair","mode","vertLine","style","horzLine","series","addCandlestickSeries","post","then","response","data","length","adjustedData","map","candle","time","Date","getTime","open","high","low","close","setData","catch","error","console","remove","handleClick","param","point","price","coordinateToPrice","y","toLocaleString","clickedProjection","findNearestProjection","id","pipValue","longPips","shortPips","lastCandleTime","projectionTimeRange","topPrice","bottomPrice","topColor","bottomColor","projectionId","now","projectionNumber","topLine","addLineSeries","lineWidth","title","bottomLine","value","prev","number","prices","top","bottom","tolerance","find","proj","timeMatch","Math","abs","priceMatch","subscribeClick","unsubscribeClick","removeProjection","filter","forEach","line","removeSeries","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","size","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/ChartAndControls.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { createChart } from 'lightweight-charts';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n\nconst ChartAndControls = ({\n  chartContainerRef,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  handleTrade,\n  addNewCandle\n}) => {\n  const [projectionMode, setProjectionMode] = useState('long');\n  const [projections, setProjections] = useState([]);\n  const [chart, setChart] = useState(null);\n  const [selectedProjection, setSelectedProjection] = useState(null);\n\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const newChart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: { backgroundColor: '#ffffff', textColor: '#333' },\n      grid: { vertLines: { color: '#eee' }, horzLines: { color: '#eee' } },\n      priceScale: { minMove: 0.0001 },\n      timeScale: { timeVisible: true, secondsVisible: false, borderColor: '#ccc' },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0,\n        },\n        horzLine: {\n          width: 8,\n          color: '#C3BCDB44',\n          style: 0,\n        },\n      },\n    });\n\n    const series = newChart.addCandlestickSeries();\n    setCandlestickSeries(series);\n    setChart(newChart);\n\n    axios.post('http://127.0.0.1:5000/api/historical_data', { startDate, timeInterval })\n      .then((response) => {\n        if (response.data.length > 0) {\n          const adjustedData = response.data.map(candle => ({\n            time: new Date(candle.time).getTime() / 1000,\n            open: candle.open,\n            high: candle.high,\n            low: candle.low,\n            close: candle.close,\n          }));\n          series.setData(adjustedData);\n          setCurrentIndex(adjustedData.length);\n        }\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n    return () => newChart.remove();\n  }, [chartContainerRef, setCandlestickSeries, setCurrentIndex, startDate, timeInterval]);\n\n  useEffect(() => {\n    if (!chart) return;\n\n    const handleClick = (param) => {\n      if (!param || !param.time || !param.point) return;\n\n      const price = chart.priceScale().coordinateToPrice(param.point.y);\n      setClickedPoint({ time: new Date(param.time * 1000).toLocaleString(), price });\n\n      // Check if we clicked near an existing projection\n      const clickedProjection = findNearestProjection(param.point.y, param.time);\n      if (clickedProjection) {\n        setSelectedProjection(clickedProjection.id);\n        return;\n      }\n\n      const pipValue = 0.0001;\n      const longPips = 40 * pipValue;\n      const shortPips = 30 * pipValue;\n\n      const lastCandleTime = currentIndex > 0 ? currentIndex * timeInterval : param.time;\n      const projectionTimeRange = lastCandleTime + timeInterval * 5;\n\n      let topPrice, bottomPrice, topColor, bottomColor;\n\n      if (projectionMode === 'long') {\n        topPrice = price + longPips;\n        bottomPrice = price - shortPips;\n        topColor = 'rgba(76, 175, 80, 0.8)';\n        bottomColor = 'rgba(244, 67, 54, 0.8)';\n      } else {\n        topPrice = price + shortPips;\n        bottomPrice = price - longPips;\n        topColor = 'rgba(244, 67, 54, 0.8)';\n        bottomColor = 'rgba(76, 175, 80, 0.8)';\n      }\n\n      const projectionId = Date.now();\n      const projectionNumber = projections.length + 1;\n\n      const topLine = chart.addLineSeries({\n        color: topColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Top`,\n      });\n      \n      const bottomLine = chart.addLineSeries({\n        color: bottomColor,\n        lineWidth: 2,\n        title: `Projection ${projectionNumber} Bottom`,\n      });\n\n      topLine.setData([\n        { time: param.time, value: topPrice },\n        { time: projectionTimeRange, value: topPrice },\n      ]);\n\n      bottomLine.setData([\n        { time: param.time, value: bottomPrice },\n        { time: projectionTimeRange, value: bottomPrice },\n      ]);\n\n      setProjections((prev) => [\n        ...prev,\n        {\n          id: projectionId,\n          number: projectionNumber,\n          series: [topLine, bottomLine],\n          prices: { top: topPrice, bottom: bottomPrice },\n          time: param.time,\n        }\n      ]);\n    };\n\n    const findNearestProjection = (y, time) => {\n      const tolerance = 0.0002; // Adjust this value to change click sensitivity\n      const price = chart.priceScale().coordinateToPrice(y);\n      \n      return projections.find(proj => {\n        const timeMatch = Math.abs(proj.time - time) < timeInterval;\n        const priceMatch = \n          Math.abs(proj.prices.top - price) < tolerance ||\n          Math.abs(proj.prices.bottom - price) < tolerance;\n        return timeMatch && priceMatch;\n      });\n    };\n\n    chart.subscribeClick(handleClick);\n    return () => chart.unsubscribeClick(handleClick);\n  }, [chart, setClickedPoint, projectionMode, currentIndex, timeInterval, projections]);\n\n  const removeProjection = (id) => {\n    setProjections((prev) => {\n      return prev.filter((proj) => {\n        if (proj.id === id) {\n          proj.series.forEach((line) => {\n            if (line) chart.removeSeries(line);\n          });\n          return false;\n        }\n        return true;\n      });\n    });\n    setSelectedProjection(null);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div ref={chartContainerRef} className=\"w-full h-[400px] border border-gray-200 rounded-lg\"></div>\n\n      <div className=\"flex gap-2\">\n        <Button \n          onClick={() => setProjectionMode('long')}\n          className={`${projectionMode === 'long' ? 'bg-green-600' : 'bg-gray-200 text-gray-700'}`}\n        >\n          Long Mode\n        </Button>\n        <Button \n          onClick={() => setProjectionMode('short')}\n          className={`${projectionMode === 'short' ? 'bg-red-600' : 'bg-gray-200 text-gray-700'}`}\n        >\n          Short Mode\n        </Button>\n        <Button onClick={() => handleTrade('buy')} className=\"bg-green-600\">\n          Buy\n        </Button>\n        <Button onClick={() => handleTrade('sell')} className=\"bg-red-600\">\n          Sell\n        </Button>\n        <Button onClick={addNewCandle} className=\"bg-blue-600\">\n          Next Candle\n        </Button>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Active Projections</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n            {projections.map((proj) => (\n              <div\n                key={proj.id}\n                className={`p-2 rounded border ${\n                  selectedProjection === proj.id ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\n                }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"font-medium\">Projection {proj.number}</span>\n                  <Button\n                    onClick={() => removeProjection(proj.id)}\n                    variant=\"destructive\"\n                    size=\"sm\"\n                    className=\"h-6\"\n                  >\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ChartAndControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}