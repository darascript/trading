{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [trade, setTrade] = useState({\n    action: '',\n    price: '',\n    quantity: ''\n  });\n  const [trades, setTrades] = useState([]);\n  const [closeTrade, setCloseTrade] = useState({\n    tradeIndex: '',\n    quantity: ''\n  });\n  const [candlestickData, setCandlestickData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [totalPnL, setTotalPnL] = useState(0);\n  const handleInputChange = (key, value) => {\n    setTrade({\n      ...trade,\n      [key]: value\n    });\n  };\n  const handleCloseInputChange = (key, value) => {\n    setCloseTrade({\n      ...closeTrade,\n      [key]: value\n    });\n  };\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/account\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...trade,\n          time: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Trade placed successfully!\");\n        setTrade({\n          action: \"\",\n          price: \"\",\n          quantity: \"\"\n        });\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to place trade\");\n      }\n    } catch (error) {\n      console.error(\"Error saving trade:\", error);\n      alert(\"Failed to save trade. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const [isClosing, setIsClosing] = useState(false);\n  const handleClose = async e => {\n    e.preventDefault();\n    if (isClosing) return;\n    setIsClosing(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/close_trade\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tradeIndex: closeTrade.tradeIndex,\n          quantity: closeTrade.quantity\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Trade closed successfully!\");\n        setCloseTrade({\n          tradeIndex: '',\n          quantity: ''\n        });\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to close trade\");\n      }\n    } catch (error) {\n      console.error(\"Error closing trade:\", error);\n      alert(\"Failed to close trade. Please try again.\");\n    } finally {\n      setIsClosing(false);\n    }\n  };\n  const fetchTrades = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/account');\n      setTrades(response.data.trades);\n      calculateTotalPnL(response.data.trades);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching trades:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const calculateTotalPnL = trades => {\n    let total = 0;\n    trades.forEach(trade => {\n      const currentTradePrice = candlestickData.length > 0 ? candlestickData[candlestickData.length - 1].close : 0;\n      let pnl = 0;\n      if (trade.action === 'buy') {\n        pnl = (currentTradePrice - trade.entryPrice) * trade.quantity;\n      } else if (trade.action === 'sell') {\n        pnl = (trade.entryPrice - currentTradePrice) * trade.quantity;\n      }\n      trade.profitLoss = pnl;\n      total += pnl;\n    });\n    setTotalPnL(total);\n  };\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n  useEffect(() => {\n    if (candlestickData.length > 0) {\n      calculateTotalPnL(trades);\n    }\n  }, [candlestickData, trades]);\n  const openTrades = trades.filter(trade => trade.isOpen);\n\n  // Handle the addition of new candles\n  const addNewCandle = newCandle => {\n    setCandlestickData(prevData => {\n      const updatedData = [...prevData, newCandle];\n      calculateTotalPnL(trades); // Recalculate PnL when a new candle is added\n      return updatedData;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Place Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"trade-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: trade.action,\n          onChange: e => handleInputChange('action', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"buy\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sell\",\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.0001\",\n          value: trade.price,\n          onChange: e => handleInputChange('price', e.target.value),\n          placeholder: \"Enter Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: trade.quantity,\n          onChange: e => handleInputChange('quantity', e.target.value),\n          placeholder: \"Enter Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Place Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), trade.action && trade.price && trade.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trade Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Action: \", trade.action.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: $\", Number(trade.price).toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", trade.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Value: $\", (Number(trade.price) * Number(trade.quantity)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Close Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleClose,\n      className: \"trade-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: closeTrade.tradeIndex,\n          onChange: e => handleCloseInputChange('tradeIndex', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a trade to close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), openTrades.map(trade => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: trade.index,\n            children: [trade.action.toUpperCase(), \" \", trade.quantity, \" at $\", trade.entryPrice]\n          }, trade.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity to Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: closeTrade.quantity,\n          onChange: e => handleCloseInputChange('quantity', e.target.value),\n          placeholder: \"Enter Quantity to Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Close Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), trades.length > 0 ? trades.map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trade-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: trade.action.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 18\n          }, this), \" at $\", trade.entryPrice, \" (Quantity: \", trade.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Profit/Loss: $\", trade.profitLoss]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", trade.isOpen ? 'Open' : 'Closed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), trade.isOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Trade Index: \", trade.index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 33\n        }, this)]\n      }, trade.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trades available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total PnL: $\", totalPnL.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"dvrrXfGJDGcQxLyeFEBs1x0hwZc=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Form","_s","trade","setTrade","action","price","quantity","trades","setTrades","closeTrade","setCloseTrade","tradeIndex","candlestickData","setCandlestickData","currentIndex","setCurrentIndex","totalPnL","setTotalPnL","handleInputChange","key","value","handleCloseInputChange","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","time","Date","toISOString","split","data","json","ok","alert","fetchTrades","Error","error","console","isClosing","setIsClosing","handleClose","get","calculateTotalPnL","_error$response","message","total","forEach","currentTradePrice","length","close","pnl","entryPrice","profitLoss","openTrades","filter","isOpen","addNewCandle","newCandle","prevData","updatedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","type","step","placeholder","toUpperCase","Number","toFixed","map","index","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Form = () => {\n  const [trade, setTrade] = useState({\n    action: '',\n    price: '',\n    quantity: ''\n  });\n  const [trades, setTrades] = useState([]);\n  const [closeTrade, setCloseTrade] = useState({\n    tradeIndex: '',\n    quantity: ''\n  });\n\n  const [candlestickData, setCandlestickData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [totalPnL, setTotalPnL] = useState(0);\n\n  const handleInputChange = (key, value) => {\n    setTrade({ ...trade, [key]: value });\n  };\n\n  const handleCloseInputChange = (key, value) => {\n    setCloseTrade({ ...closeTrade, [key]: value });\n  };\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) return;\n\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/account\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...trade,\n          time: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(\"Trade placed successfully!\");\n        setTrade({ action: \"\", price: \"\", quantity: \"\" });\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to place trade\");\n      }\n    } catch (error) {\n      console.error(\"Error saving trade:\", error);\n      alert(\"Failed to save trade. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const [isClosing, setIsClosing] = useState(false);\n\n  const handleClose = async (e) => {\n    e.preventDefault();\n    if (isClosing) return;\n\n    setIsClosing(true);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/close_trade\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          tradeIndex: closeTrade.tradeIndex, \n          quantity: closeTrade.quantity \n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(\"Trade closed successfully!\");\n        setCloseTrade({ tradeIndex: '', quantity: '' });\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to close trade\");\n      }\n    } catch (error) {\n      console.error(\"Error closing trade:\", error);\n      alert(\"Failed to close trade. Please try again.\");\n    } finally {\n      setIsClosing(false);\n    }\n  };\n\n  const fetchTrades = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/account');\n      setTrades(response.data.trades);\n      calculateTotalPnL(response.data.trades);\n    } catch (error) {\n      console.error('Error fetching trades:', error.response?.data || error.message);\n    }\n  };\n\n  const calculateTotalPnL = (trades) => {\n    let total = 0;\n    trades.forEach((trade) => {\n      const currentTradePrice = candlestickData.length > 0 ? candlestickData[candlestickData.length - 1].close : 0;\n      let pnl = 0;\n\n      if (trade.action === 'buy') {\n        pnl = (currentTradePrice - trade.entryPrice) * trade.quantity;\n      } else if (trade.action === 'sell') {\n        pnl = (trade.entryPrice - currentTradePrice) * trade.quantity;\n      }\n\n      trade.profitLoss = pnl;\n      total += pnl;\n    });\n    setTotalPnL(total);\n  };\n\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n\n  useEffect(() => {\n    if (candlestickData.length > 0) {\n      calculateTotalPnL(trades);\n    }\n  }, [candlestickData, trades]);\n\n  const openTrades = trades.filter(trade => trade.isOpen);\n\n  // Handle the addition of new candles\n  const addNewCandle = (newCandle) => {\n    setCandlestickData((prevData) => {\n      const updatedData = [...prevData, newCandle];\n      calculateTotalPnL(trades); // Recalculate PnL when a new candle is added\n      return updatedData;\n    });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Place Trade</h2>\n\n      <form onSubmit={handleSubmit} className=\"trade-form\">\n        <div className=\"form-group\">\n          <label>Action</label>\n          <select\n            value={trade.action}\n            onChange={(e) => handleInputChange('action', e.target.value)}\n          >\n            <option value=\"\">Select Action</option>\n            <option value=\"buy\">Buy</option>\n            <option value=\"sell\">Sell</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Price</label>\n          <input\n            type=\"number\"\n            step=\"0.0001\"\n            value={trade.price}\n            onChange={(e) => handleInputChange('price', e.target.value)}\n            placeholder=\"Enter Price\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Quantity</label>\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={trade.quantity}\n            onChange={(e) => handleInputChange('quantity', e.target.value)}\n            placeholder=\"Enter Quantity\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">\n          Place Trade\n        </button>\n      </form>\n\n      {trade.action && trade.price && trade.quantity && (\n        <div className=\"trade-preview\">\n          <h3>Trade Preview:</h3>\n          <p>Action: {trade.action.toUpperCase()}</p>\n          <p>Price: ${Number(trade.price).toFixed(4)}</p>\n          <p>Quantity: {trade.quantity}</p>\n          <p>Total Value: ${(Number(trade.price) * Number(trade.quantity)).toFixed(2)}</p>\n        </div>\n      )}\n\n      <h2>Close Trade</h2>\n      <form onSubmit={handleClose} className=\"trade-form\">\n        <div className=\"form-group\">\n          <label>Select Trade</label>\n          <select\n            value={closeTrade.tradeIndex}\n            onChange={(e) => handleCloseInputChange('tradeIndex', e.target.value)}\n          >\n            <option value=\"\">Select a trade to close</option>\n            {openTrades.map((trade) => (\n              <option key={trade.index} value={trade.index}>\n                {trade.action.toUpperCase()} {trade.quantity} at ${trade.entryPrice}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Quantity to Close</label>\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={closeTrade.quantity}\n            onChange={(e) => handleCloseInputChange('quantity', e.target.value)}\n            placeholder=\"Enter Quantity to Close\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">Close Trade</button>\n      </form>\n\n      <div>\n        <h3>Current Trades</h3>\n        {trades.length > 0 ? (\n          trades.map((trade) => (\n            <div key={trade.index} className=\"trade-item\">\n              <p><strong>{trade.action.toUpperCase()}</strong> at ${trade.entryPrice} (Quantity: {trade.quantity})</p>\n              <p>Profit/Loss: ${trade.profitLoss}</p>\n              <p>Status: {trade.isOpen ? 'Open' : 'Closed'}</p>\n              {trade.isOpen && (<p>Trade Index: {trade.index}</p>)}\n            </div>\n          ))\n        ) : (\n          <p>No trades available.</p>\n        )}\n      </div>\n\n      <h3>Total PnL: ${totalPnL.toFixed(2)}</h3>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}