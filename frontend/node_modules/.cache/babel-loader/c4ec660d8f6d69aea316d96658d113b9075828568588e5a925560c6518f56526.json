{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [trade, setTrade] = useState({\n    action: '',\n    price: '',\n    quantity: ''\n  });\n  const [trades, setTrades] = useState([]);\n  const [closeTrade, setCloseTrade] = useState({\n    tradeIndex: '',\n    quantity: '',\n    closePrice: ''\n  });\n  const handleInputChange = (key, value) => {\n    setTrade({\n      ...trade,\n      [key]: value\n    });\n  };\n  const handleCloseInputChange = (key, value) => {\n    setCloseTrade({\n      ...closeTrade,\n      [key]: value\n    });\n  };\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return; // Prevent multiple submissions\n\n    setIsSubmitting(true);\n    try {\n      // Fetch the current price from backend\n      const priceResponse = await axios.get('http://127.0.0.1:5000/api/current_price');\n      const currentPrice = priceResponse.data.currentPrice;\n      const response = await fetch(\"http://127.0.0.1:5000/api/account\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...trade,\n          price: currentPrice,\n          // Set entry price to current price\n          time: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Trade placed successfully!\");\n        setTrade({\n          action: \"\",\n          price: \"\",\n          quantity: \"\"\n        });\n        // Refresh the trades list after adding a new trade\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to place trade\");\n      }\n    } catch (error) {\n      console.error(\"Error saving trade:\", error);\n      alert(\"Failed to save trade. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const [isClosing, setIsClosing] = useState(false);\n  const handleClose = async e => {\n    e.preventDefault();\n    if (isClosing) return; // Prevent multiple submissions\n\n    setIsClosing(true);\n    try {\n      // Fetch the current price from backend if close price isn't provided\n      const closePrice = closeTrade.quantity && closeTrade.quantity > 0 ? closeTrade.closePrice : (await axios.get('http://127.0.0.1:5000/api/current_price')).data.currentPrice;\n      const response = await fetch(\"http://127.0.0.1:5000/api/close_trade\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tradeIndex: closeTrade.tradeIndex,\n          quantity: closeTrade.quantity,\n          closePrice: closePrice // Pass the close price\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Trade closed successfully!\");\n        // Reset the form\n        setCloseTrade({\n          tradeIndex: '',\n          quantity: '',\n          closePrice: ''\n        });\n        // Refresh the trades list\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to close trade\");\n      }\n    } catch (error) {\n      console.error(\"Error closing trade:\", error);\n      alert(\"Failed to close trade. Please try again.\");\n    } finally {\n      setIsClosing(false);\n    }\n  };\n  const fetchTrades = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/account');\n      setTrades(response.data.trades);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching trades:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n\n  // Get only open trades for the dropdown\n  const openTrades = trades.filter(trade => trade.isOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Place Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"trade-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: trade.action,\n          onChange: e => handleInputChange('action', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"buy\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sell\",\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.0001\",\n          value: trade.price,\n          onChange: e => handleInputChange('price', e.target.value),\n          placeholder: \"Enter Price\",\n          disabled: true // Disable price input, as it's fetched automatically\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: trade.quantity,\n          onChange: e => handleInputChange('quantity', e.target.value),\n          placeholder: \"Enter Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Place Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), trade.action && trade.price && trade.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trade Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Action: \", trade.action.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: $\", Number(trade.price).toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", trade.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Value: $\", (Number(trade.price) * Number(trade.quantity)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Close Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleClose,\n      className: \"trade-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: closeTrade.tradeIndex,\n          onChange: e => handleCloseInputChange('tradeIndex', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a trade to close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), openTrades.map(trade => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: trade.index,\n            children: [trade.action.toUpperCase(), \" \", trade.quantity, \" at $\", trade.entryPrice]\n          }, trade.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity to Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: closeTrade.quantity,\n          onChange: e => handleCloseInputChange('quantity', e.target.value),\n          placeholder: \"Enter Quantity to Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Close Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.0001\",\n          value: closeTrade.closePrice,\n          onChange: e => handleCloseInputChange('closePrice', e.target.value),\n          placeholder: \"Enter Close Price (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Close Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), trades.length > 0 ? trades.map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trade-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: trade.action.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 18\n          }, this), \" at $\", trade.entryPrice, \" (Quantity: \", trade.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Profit/Loss: $\", trade.profitLoss]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", trade.isOpen ? 'Open' : 'Closed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), trade.isOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Trade Index: \", trade.index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }, this)]\n      }, trade.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trades available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total P/L: $\", trades.reduce((total, trade) => total + trade.profitLoss, 0).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"C5zqGE2Kw41FnvEr+gd15pPpZck=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Form","_s","trade","setTrade","action","price","quantity","trades","setTrades","closeTrade","setCloseTrade","tradeIndex","closePrice","handleInputChange","key","value","handleCloseInputChange","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","priceResponse","get","currentPrice","data","response","fetch","method","headers","body","JSON","stringify","time","Date","toISOString","split","json","ok","alert","fetchTrades","Error","error","console","isClosing","setIsClosing","handleClose","_error$response","message","openTrades","filter","isOpen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","type","step","placeholder","disabled","toUpperCase","Number","toFixed","map","index","entryPrice","length","profitLoss","reduce","total","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Form = () => {\n  const [trade, setTrade] = useState({\n    action: '',\n    price: '',\n    quantity: ''\n  });\n  const [trades, setTrades] = useState([]);\n  const [closeTrade, setCloseTrade] = useState({\n    tradeIndex: '',\n    quantity: '',\n    closePrice: ''\n  });\n\n  const handleInputChange = (key, value) => {\n    setTrade({ ...trade, [key]: value });\n  };\n\n  const handleCloseInputChange = (key, value) => {\n    setCloseTrade({ ...closeTrade, [key]: value });\n  };\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) return; // Prevent multiple submissions\n\n    setIsSubmitting(true);\n\n    try {\n      // Fetch the current price from backend\n      const priceResponse = await axios.get('http://127.0.0.1:5000/api/current_price');\n      const currentPrice = priceResponse.data.currentPrice;\n\n      const response = await fetch(\"http://127.0.0.1:5000/api/account\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...trade,\n          price: currentPrice, // Set entry price to current price\n          time: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(\"Trade placed successfully!\");\n        setTrade({ action: \"\", price: \"\", quantity: \"\" });\n        // Refresh the trades list after adding a new trade\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to place trade\");\n      }\n    } catch (error) {\n      console.error(\"Error saving trade:\", error);\n      alert(\"Failed to save trade. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const [isClosing, setIsClosing] = useState(false);\n\n  const handleClose = async (e) => {\n    e.preventDefault();\n    if (isClosing) return; // Prevent multiple submissions\n\n    setIsClosing(true);\n\n    try {\n      // Fetch the current price from backend if close price isn't provided\n      const closePrice = closeTrade.quantity && closeTrade.quantity > 0 ? closeTrade.closePrice : \n        (await axios.get('http://127.0.0.1:5000/api/current_price')).data.currentPrice;\n\n      const response = await fetch(\"http://127.0.0.1:5000/api/close_trade\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          tradeIndex: closeTrade.tradeIndex, \n          quantity: closeTrade.quantity,\n          closePrice: closePrice // Pass the close price\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(\"Trade closed successfully!\");\n        // Reset the form\n        setCloseTrade({ tradeIndex: '', quantity: '', closePrice: '' });\n        // Refresh the trades list\n        fetchTrades();\n      } else {\n        throw new Error(data.error || \"Failed to close trade\");\n      }\n    } catch (error) {\n      console.error(\"Error closing trade:\", error);\n      alert(\"Failed to close trade. Please try again.\");\n    } finally {\n      setIsClosing(false);\n    }\n  };\n\n  const fetchTrades = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/account');\n      setTrades(response.data.trades);\n    } catch (error) {\n      console.error('Error fetching trades:', error.response?.data || error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n  \n  // Get only open trades for the dropdown\n  const openTrades = trades.filter(trade => trade.isOpen);\n\n  return (\n    <div className=\"form-container\">\n      <h2>Place Trade</h2>\n\n      <form onSubmit={handleSubmit} className=\"trade-form\">\n        <div className=\"form-group\">\n          <label>Action</label>\n          <select\n            value={trade.action}\n            onChange={(e) => handleInputChange('action', e.target.value)}\n          >\n            <option value=\"\">Select Action</option>\n            <option value=\"buy\">Buy</option>\n            <option value=\"sell\">Sell</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Price</label>\n          <input\n            type=\"number\"\n            step=\"0.0001\"\n            value={trade.price}\n            onChange={(e) => handleInputChange('price', e.target.value)}\n            placeholder=\"Enter Price\"\n            disabled // Disable price input, as it's fetched automatically\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Quantity</label>\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={trade.quantity}\n            onChange={(e) => handleInputChange('quantity', e.target.value)}\n            placeholder=\"Enter Quantity\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">\n          Place Trade\n        </button>\n      </form>\n\n      {trade.action && trade.price && trade.quantity && (\n        <div className=\"trade-preview\">\n          <h3>Trade Preview:</h3>\n          <p>Action: {trade.action.toUpperCase()}</p>\n          <p>Price: ${Number(trade.price).toFixed(4)}</p>\n          <p>Quantity: {trade.quantity}</p>\n          <p>Total Value: ${(Number(trade.price) * Number(trade.quantity)).toFixed(2)}</p>\n        </div>\n      )}\n\n      <h2>Close Trade</h2>\n      <form onSubmit={handleClose} className=\"trade-form\">\n        <div className=\"form-group\">\n          <label>Select Trade</label>\n          <select\n            value={closeTrade.tradeIndex}\n            onChange={(e) => handleCloseInputChange('tradeIndex', e.target.value)}\n          >\n            <option value=\"\">Select a trade to close</option>\n            {openTrades.map((trade) => (\n              <option key={trade.index} value={trade.index}>\n                {trade.action.toUpperCase()} {trade.quantity} at ${trade.entryPrice}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Quantity to Close</label>\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={closeTrade.quantity}\n            onChange={(e) => handleCloseInputChange('quantity', e.target.value)}\n            placeholder=\"Enter Quantity to Close\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Close Price</label>\n          <input\n            type=\"number\"\n            step=\"0.0001\"\n            value={closeTrade.closePrice}\n            onChange={(e) => handleCloseInputChange('closePrice', e.target.value)}\n            placeholder=\"Enter Close Price (Optional)\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">Close Trade</button>\n      </form>\n\n      <div>\n        <h3>Current Trades</h3>\n        {trades.length > 0 ? (\n          trades.map((trade) => (\n            <div key={trade.index} className=\"trade-item\">\n              <p><strong>{trade.action.toUpperCase()}</strong> at ${trade.entryPrice} (Quantity: {trade.quantity})</p>\n              <p>Profit/Loss: ${trade.profitLoss}</p>\n              <p>Status: {trade.isOpen ? 'Open' : 'Closed'}</p>\n              {trade.isOpen && (<p>Trade Index: {trade.index}</p>)}\n            </div>\n          ))\n        ) : (\n          <p>No trades available.</p>\n        )}\n\n        <h3>Total P/L: ${trades.reduce((total, trade) => total + trade.profitLoss, 0).toFixed(2)}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}