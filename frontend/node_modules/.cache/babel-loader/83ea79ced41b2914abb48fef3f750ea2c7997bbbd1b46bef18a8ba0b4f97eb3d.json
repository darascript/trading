{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/Backtest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Backtest = () => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [candlestickSeries, setCandlestickSeries] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [startDate, setStartDate] = useState('');\n  const [hasStarted, setHasStarted] = useState(false);\n  const [trades, setTrades] = useState([]);\n  const [totalPnL, setTotalPnL] = useState(0);\n  //const [lineToolInstance, setLineToolInstance] = useState(null);\n  //const [selectedTool, setSelectedTool] = useState(null);\n  const [timeInterval, setTimeInterval] = useState('1');\n  useEffect(() => {\n    if (!chartContainerRef.current || !hasStarted) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#eee'\n        },\n        horzLines: {\n          color: '#eee'\n        }\n      },\n      priceScale: {\n        minMove: 0.00001\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#ccc'\n      }\n    });\n    const series = chart.addCandlestickSeries({\n      priceFormat: {\n        precision: 5,\n        minMove: 0.00001\n      }\n    });\n    setCandlestickSeries(series);\n    chartInstanceRef.current = chart;\n    axios.post('http://127.0.0.1:5000/api/historical_data', {\n      startDate,\n      timeInterval\n    }).then(response => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000,\n          // Ensure Unix timestamp (seconds)\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    }).catch(error => console.error('Error fetching data:', error));\n    return () => chart.remove();\n  }, [hasStarted, timeInterval]);\n  const handleTrade = async action => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/account', {\n        action,\n        price: candlestickSeries.currentData().close,\n        quantity: 1,\n        time: new Date().toISOString().split('T')[0]\n      });\n      setTrades(response.data.trades);\n      setTotalPnL(response.data.totalPnL);\n    } catch (error) {\n      console.error('Error placing trade:', error);\n    }\n  };\n  const addNewCandle = async () => {\n    if (!candlestickSeries || !hasStarted) return;\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/backtest', {\n        currentIndex,\n        timeInterval\n      });\n      if (response.data.nextCandlestick) {\n        const newCandle = {\n          time: new Date(response.data.nextCandlestick.time).getTime() / 1000,\n          open: response.data.nextCandlestick.open,\n          high: response.data.nextCandlestick.high,\n          low: response.data.nextCandlestick.low,\n          close: response.data.nextCandlestick.close\n        };\n        candlestickSeries.update(newCandle);\n        setCurrentIndex(response.data.nextIndex);\n        setTrades(response.data.trades);\n        setTotalPnL(response.data.totalPnL);\n      }\n    } catch (error) {\n      console.error('Error fetching new candlestick:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: !hasStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Start Date (YYYY-MM-DD)\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        style: {\n          padding: '8px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeInterval,\n        onChange: e => setTimeInterval(e.target.value),\n        style: {\n          padding: '8px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1 Minute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5 Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15\",\n          children: \"15 Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"30\",\n          children: \"30 Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"60\",\n          children: \"1 Hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasStarted(true),\n        style: {\n          padding: '8px',\n          marginLeft: '10px'\n        },\n        children: \"Load Historical Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartContainerRef,\n        style: {\n          width: '100%',\n          height: '400px',\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTrade('buy'),\n          style: {\n            backgroundColor: 'green',\n            color: 'white',\n            padding: '10px'\n          },\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTrade('sell'),\n          style: {\n            backgroundColor: 'red',\n            color: 'white',\n            padding: '10px',\n            marginLeft: '10px'\n          },\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewCandle,\n          style: {\n            backgroundColor: 'blue',\n            color: 'white',\n            padding: '10px',\n            marginLeft: '10px'\n          },\n          children: \"Next Candle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          border: '1px solid black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Trading Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total P/L:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold',\n              color: totalPnL >= 0 ? 'green' : 'red'\n            },\n            children: [\"$\", totalPnL.toFixed(5)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Backtest, \"iYCeFiGmPRWfKSi0PHe1xZub2eg=\");\n_c = Backtest;\nexport default Backtest;\nvar _c;\n$RefreshReg$(_c, \"Backtest\");","map":{"version":3,"names":["React","useEffect","useRef","useState","createChart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Backtest","_s","chartContainerRef","chartInstanceRef","candlestickSeries","setCandlestickSeries","currentIndex","setCurrentIndex","startDate","setStartDate","hasStarted","setHasStarted","trades","setTrades","totalPnL","setTotalPnL","timeInterval","setTimeInterval","current","chart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","minMove","timeScale","timeVisible","secondsVisible","borderColor","series","addCandlestickSeries","priceFormat","precision","post","then","response","data","length","adjustedData","map","candle","time","Date","getTime","open","high","low","close","setData","catch","error","console","remove","handleTrade","action","price","currentData","quantity","toISOString","split","addNewCandle","nextCandlestick","newCandle","update","nextIndex","style","padding","textAlign","children","type","placeholder","value","onChange","e","target","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","ref","border","marginTop","fontWeight","toFixed","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/Backtest.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport axios from 'axios';\n\n\nconst Backtest = () => {\n  const chartContainerRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [candlestickSeries, setCandlestickSeries] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [startDate, setStartDate] = useState('');\n  const [hasStarted, setHasStarted] = useState(false);\n  const [trades, setTrades] = useState([]);\n  const [totalPnL, setTotalPnL] = useState(0);\n  //const [lineToolInstance, setLineToolInstance] = useState(null);\n  //const [selectedTool, setSelectedTool] = useState(null);\n  const [timeInterval, setTimeInterval] = useState('1');  \n\n  useEffect(() => {\n    if (!chartContainerRef.current || !hasStarted) return;\n\n\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333',\n      },\n      grid: {\n        vertLines: { color: '#eee' },\n        horzLines: { color: '#eee' },\n    },\n      priceScale: {\n        minMove: 0.00001,\n      },\n      timeScale: {\n        timeVisible: true,   \n        secondsVisible: false,\n        borderColor: '#ccc', \n      },  \n    });\n\n\n    const series = chart.addCandlestickSeries({\n      priceFormat: { precision: 5, minMove: 0.00001 },\n    });\n    setCandlestickSeries(series);\n    chartInstanceRef.current = chart;\n\n    axios.post('http://127.0.0.1:5000/api/historical_data', { startDate, timeInterval })\n    .then((response) => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000, // Ensure Unix timestamp (seconds)\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close,\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    })\n    .catch((error) => console.error('Error fetching data:', error));\n\n  return () => chart.remove();\n}, [hasStarted, timeInterval]);\n\n\n\n  const handleTrade = async (action) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/account', {\n        action,\n        price: candlestickSeries.currentData().close,\n        quantity: 1,\n        time: new Date().toISOString().split('T')[0]\n      });\n\n\n      setTrades(response.data.trades);\n      setTotalPnL(response.data.totalPnL);\n    } catch (error) {\n      console.error('Error placing trade:', error);\n    }\n  };\n\n\n  const addNewCandle = async () => {\n    if (!candlestickSeries || !hasStarted) return;\n\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/backtest', { currentIndex, timeInterval });\n     \n      if (response.data.nextCandlestick) {\n        const newCandle = {\n          time: new Date(response.data.nextCandlestick.time).getTime() / 1000,\n          open: response.data.nextCandlestick.open,\n          high: response.data.nextCandlestick.high,\n          low: response.data.nextCandlestick.low,\n          close: response.data.nextCandlestick.close,\n        };\n\n\n        candlestickSeries.update(newCandle);\n        setCurrentIndex(response.data.nextIndex);\n        setTrades(response.data.trades);\n        setTotalPnL(response.data.totalPnL);\n      }\n    } catch (error) {\n      console.error('Error fetching new candlestick:', error);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', textAlign: 'center' }}>\n      {!hasStarted ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Start Date (YYYY-MM-DD)\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            style={{ padding: '8px', marginBottom: '10px' }}\n          />\n          <select\n            value={timeInterval}\n            onChange={(e) => setTimeInterval(e.target.value)}\n            style={{ padding: '8px', marginBottom: '10px' }}\n          >\n            <option value=\"1\">1 Minute</option>\n            <option value=\"5\">5 Minutes</option>\n            <option value=\"15\">15 Minutes</option>\n            <option value=\"30\">30 Minutes</option>\n            <option value=\"60\">1 Hour</option>\n          </select>\n          <button onClick={() => setHasStarted(true)} style={{ padding: '8px', marginLeft: '10px' }}>\n            Load Historical Data\n          </button>\n        </div>\n      ) : (\n        <>\n          <div ref={chartContainerRef} style={{ width: '100%', height: '400px', border: '1px solid black' }}></div>\n          <div style={{ marginTop: '10px' }}>\n            <button onClick={() => handleTrade('buy')} style={{ backgroundColor: 'green', color: 'white', padding: '10px' }}>\n              Buy\n            </button>\n            <button onClick={() => handleTrade('sell')} style={{ backgroundColor: 'red', color: 'white', padding: '10px', marginLeft: '10px' }}>\n              Sell\n            </button>\n            <button onClick={addNewCandle} style={{ backgroundColor: 'blue', color: 'white', padding: '10px', marginLeft: '10px' }}>\n              Next Candle\n            </button>\n          </div>\n          <div style={{ marginTop: '20px', padding: '10px', border: '1px solid black' }}>\n            <h3>Trading Summary</h3>\n            <p>\n              Total P/L:{' '}\n              <span style={{ fontWeight: 'bold', color: totalPnL >= 0 ? 'green' : 'red' }}>\n                ${totalPnL.toFixed(5)}\n              </span>\n            </p>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Backtest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}