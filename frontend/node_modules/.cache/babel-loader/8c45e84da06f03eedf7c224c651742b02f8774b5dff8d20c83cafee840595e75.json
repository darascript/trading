{"ast":null,"code":"var _jsxFileName = \"/home/study/trading/frontend/src/ChartAndControls.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { createChart, LineStyle } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartAndControls = ({\n  chartContainerRef,\n  candlestickSeries,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  setTotalPnL,\n  setTrades,\n  handleTrade,\n  addNewCandle\n}) => {\n  _s();\n  const [projectionLines, setProjectionLines] = useState([]);\n  const [projectionMode, setProjectionMode] = useState(null); // null, 'long', or 'short'\n  const [projectionPercent, setProjectionPercent] = useState(2); // default 2%\n  const [projectionHours, setProjectionHours] = useState(24); // default 24 hours\n  const chartRef = useRef(null);\n  const seriesRef = useRef(null);\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#333',\n        fontSize: 12\n      },\n      grid: {\n        vertLines: {\n          color: '#eee'\n        },\n        horzLines: {\n          color: '#eee'\n        }\n      },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          width: 1,\n          color: '#2962FF',\n          style: LineStyle.Solid\n        },\n        horzLine: {\n          width: 1,\n          color: '#2962FF',\n          style: LineStyle.Solid\n        }\n      },\n      priceScale: {\n        minMove: 0.00001,\n        borderColor: '#ccc',\n        autoScale: true\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#ccc'\n      }\n    });\n    chartRef.current = chart;\n    const series = chart.addCandlestickSeries({\n      upColor: '#26a69a',\n      downColor: '#ef5350',\n      borderVisible: false,\n      wickUpColor: '#26a69a',\n      wickDownColor: '#ef5350'\n    });\n    seriesRef.current = series;\n    setCandlestickSeries(series);\n\n    // Load historical data\n    axios.post('http://127.0.0.1:5000/api/historical_data', {\n      startDate,\n      timeInterval\n    }).then(response => {\n      if (response.data.length > 0) {\n        const adjustedData = response.data.map(candle => ({\n          time: new Date(candle.time).getTime() / 1000,\n          open: candle.open,\n          high: candle.high,\n          low: candle.low,\n          close: candle.close\n        }));\n        series.setData(adjustedData);\n        setCurrentIndex(adjustedData.length);\n      }\n    }).catch(error => console.error('Error fetching data:', error));\n\n    // Handle chart clicks\n    chart.subscribeClick(param => {\n      if (!param || !param.time || !param.point) return;\n      const price = series.coordinateToPrice(param.point.y);\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n      if (projectionMode) {\n        addProjectionLine(param.time, price);\n      }\n    });\n    return () => chart.remove();\n  }, [startDate, timeInterval]);\n  const addProjectionLine = (clickTime, startPrice) => {\n    const multiplier = projectionMode === 'long' ? 1 + projectionPercent / 100 : 1 - projectionPercent / 100;\n    const endPrice = startPrice * multiplier;\n    const endTime = clickTime + projectionHours * 3600; // Convert hours to seconds\n\n    const newLine = chartRef.current.addLineSeries({\n      color: projectionMode === 'long' ? '#26a69a' : '#ef5350',\n      lineWidth: 2,\n      lineStyle: LineStyle.Dashed,\n      lastPriceAnimation: 1\n    });\n    newLine.setData([{\n      time: clickTime,\n      value: startPrice\n    }, {\n      time: endTime,\n      value: endPrice\n    }]);\n    const newProjection = {\n      id: Date.now(),\n      series: newLine,\n      mode: projectionMode,\n      startPrice,\n      endPrice,\n      startTime: clickTime,\n      endTime\n    };\n    setProjectionLines(prev => [...prev, newProjection]);\n    setProjectionMode(null); // Reset projection mode after drawing\n  };\n  const clearProjections = () => {\n    projectionLines.forEach(line => {\n      if (chartRef.current) {\n        chartRef.current.removeSeries(line.series);\n      }\n    });\n    setProjectionLines([]);\n  };\n  const handleProjectionPercentChange = e => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setProjectionPercent(value);\n    }\n  };\n  const handleProjectionHoursChange = e => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setProjectionHours(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"w-full h-[400px] border border-gray-300 rounded-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTrade('buy'),\n          className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTrade('sell'),\n          className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewCandle,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n          children: \"Next Candle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 items-center border-l pl-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setProjectionMode('long'),\n          className: `px-4 py-2 rounded ${projectionMode === 'long' ? 'bg-green-600 text-white' : 'bg-green-100 text-green-800'} hover:bg-green-500 hover:text-white`,\n          children: \"Project Long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setProjectionMode('short'),\n          className: `px-4 py-2 rounded ${projectionMode === 'short' ? 'bg-red-600 text-white' : 'bg-red-100 text-red-800'} hover:bg-red-500 hover:text-white`,\n          children: \"Project Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearProjections,\n          className: \"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\",\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4 items-center border-l pl-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm\",\n            children: \"Projection %:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: projectionPercent,\n            onChange: handleProjectionPercentChange,\n            className: \"w-16 px-2 py-1 border rounded\",\n            min: \"0.1\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm\",\n            children: \"Hours:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: projectionHours,\n            onChange: handleProjectionHoursChange,\n            className: \"w-16 px-2 py-1 border rounded\",\n            min: \"1\",\n            step: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartAndControls, \"HillsSbdQztPIVytNQ7vySVpXrE=\");\n_c = ChartAndControls;\nexport default ChartAndControls;\nvar _c;\n$RefreshReg$(_c, \"ChartAndControls\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","createChart","LineStyle","jsxDEV","_jsxDEV","ChartAndControls","chartContainerRef","candlestickSeries","setCandlestickSeries","currentIndex","setCurrentIndex","startDate","timeInterval","setClickedPoint","setTotalPnL","setTrades","handleTrade","addNewCandle","_s","projectionLines","setProjectionLines","projectionMode","setProjectionMode","projectionPercent","setProjectionPercent","projectionHours","setProjectionHours","chartRef","seriesRef","current","chart","width","clientWidth","height","layout","backgroundColor","textColor","fontSize","grid","vertLines","color","horzLines","crosshair","mode","vertLine","style","Solid","horzLine","priceScale","minMove","borderColor","autoScale","timeScale","timeVisible","secondsVisible","series","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","post","then","response","data","length","adjustedData","map","candle","time","Date","getTime","open","high","low","close","setData","catch","error","console","subscribeClick","param","point","price","coordinateToPrice","y","toLocaleString","addProjectionLine","remove","clickTime","startPrice","multiplier","endPrice","endTime","newLine","addLineSeries","lineWidth","lineStyle","Dashed","lastPriceAnimation","value","newProjection","id","now","startTime","prev","clearProjections","forEach","line","removeSeries","handleProjectionPercentChange","e","parseFloat","target","isNaN","handleProjectionHoursChange","parseInt","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","min","step","_c","$RefreshReg$"],"sources":["/home/study/trading/frontend/src/ChartAndControls.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { createChart, LineStyle } from 'lightweight-charts';\n\nconst ChartAndControls = ({\n  chartContainerRef,\n  candlestickSeries,\n  setCandlestickSeries,\n  currentIndex,\n  setCurrentIndex,\n  startDate,\n  timeInterval,\n  setClickedPoint,\n  setTotalPnL,\n  setTrades,\n  handleTrade,\n  addNewCandle\n}) => {\n  const [projectionLines, setProjectionLines] = useState([]);\n  const [projectionMode, setProjectionMode] = useState(null); // null, 'long', or 'short'\n  const [projectionPercent, setProjectionPercent] = useState(2); // default 2%\n  const [projectionHours, setProjectionHours] = useState(24); // default 24 hours\n  const chartRef = useRef(null);\n  const seriesRef = useRef(null);\n\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: { \n        backgroundColor: '#ffffff', \n        textColor: '#333',\n        fontSize: 12,\n      },\n      grid: { \n        vertLines: { color: '#eee' }, \n        horzLines: { color: '#eee' } \n      },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          width: 1,\n          color: '#2962FF',\n          style: LineStyle.Solid,\n        },\n        horzLine: {\n          width: 1,\n          color: '#2962FF',\n          style: LineStyle.Solid,\n        },\n      },\n      priceScale: { \n        minMove: 0.00001,\n        borderColor: '#ccc',\n        autoScale: true,\n      },\n      timeScale: { \n        timeVisible: true, \n        secondsVisible: false, \n        borderColor: '#ccc',\n      },\n    });\n\n    chartRef.current = chart;\n    const series = chart.addCandlestickSeries({\n      upColor: '#26a69a',\n      downColor: '#ef5350',\n      borderVisible: false,\n      wickUpColor: '#26a69a',\n      wickDownColor: '#ef5350',\n    });\n    seriesRef.current = series;\n    setCandlestickSeries(series);\n\n    // Load historical data\n    axios.post('http://127.0.0.1:5000/api/historical_data', { startDate, timeInterval })\n      .then((response) => {\n        if (response.data.length > 0) {\n          const adjustedData = response.data.map(candle => ({\n            time: new Date(candle.time).getTime() / 1000,\n            open: candle.open,\n            high: candle.high,\n            low: candle.low,\n            close: candle.close,\n          }));\n          series.setData(adjustedData);\n          setCurrentIndex(adjustedData.length);\n        }\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n\n    // Handle chart clicks\n    chart.subscribeClick((param) => {\n      if (!param || !param.time || !param.point) return;\n      const price = series.coordinateToPrice(param.point.y);\n      setClickedPoint({\n        time: new Date(param.time * 1000).toLocaleString(),\n        price\n      });\n\n      if (projectionMode) {\n        addProjectionLine(param.time, price);\n      }\n    });\n\n    return () => chart.remove();\n  }, [startDate, timeInterval]);\n\n  const addProjectionLine = (clickTime, startPrice) => {\n    const multiplier = projectionMode === 'long' ? (1 + projectionPercent/100) : (1 - projectionPercent/100);\n    const endPrice = startPrice * multiplier;\n    const endTime = clickTime + (projectionHours * 3600); // Convert hours to seconds\n\n    const newLine = chartRef.current.addLineSeries({\n      color: projectionMode === 'long' ? '#26a69a' : '#ef5350',\n      lineWidth: 2,\n      lineStyle: LineStyle.Dashed,\n      lastPriceAnimation: 1,\n    });\n\n    newLine.setData([\n      { time: clickTime, value: startPrice },\n      { time: endTime, value: endPrice }\n    ]);\n\n    const newProjection = {\n      id: Date.now(),\n      series: newLine,\n      mode: projectionMode,\n      startPrice,\n      endPrice,\n      startTime: clickTime,\n      endTime\n    };\n\n    setProjectionLines(prev => [...prev, newProjection]);\n    setProjectionMode(null); // Reset projection mode after drawing\n  };\n\n  const clearProjections = () => {\n    projectionLines.forEach(line => {\n      if (chartRef.current) {\n        chartRef.current.removeSeries(line.series);\n      }\n    });\n    setProjectionLines([]);\n  };\n\n  const handleProjectionPercentChange = (e) => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setProjectionPercent(value);\n    }\n  };\n\n  const handleProjectionHoursChange = (e) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value > 0) {\n      setProjectionHours(value);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div ref={chartContainerRef} className=\"w-full h-[400px] border border-gray-300 rounded-lg\"></div>\n      \n      <div className=\"flex flex-wrap gap-4 items-center\">\n        <div className=\"flex gap-2\">\n          <button \n            onClick={() => handleTrade('buy')} \n            className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n          >\n            Buy\n          </button>\n          <button \n            onClick={() => handleTrade('sell')} \n            className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n          >\n            Sell\n          </button>\n          <button \n            onClick={addNewCandle} \n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          >\n            Next Candle\n          </button>\n        </div>\n\n        <div className=\"flex gap-2 items-center border-l pl-4\">\n          <button \n            onClick={() => setProjectionMode('long')}\n            className={`px-4 py-2 rounded ${\n              projectionMode === 'long' \n                ? 'bg-green-600 text-white' \n                : 'bg-green-100 text-green-800'\n            } hover:bg-green-500 hover:text-white`}\n          >\n            Project Long\n          </button>\n          <button \n            onClick={() => setProjectionMode('short')}\n            className={`px-4 py-2 rounded ${\n              projectionMode === 'short' \n                ? 'bg-red-600 text-white' \n                : 'bg-red-100 text-red-800'\n            } hover:bg-red-500 hover:text-white`}\n          >\n            Project Short\n          </button>\n          <button \n            onClick={clearProjections}\n            className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\"\n          >\n            Clear All\n          </button>\n        </div>\n\n        <div className=\"flex gap-4 items-center border-l pl-4\">\n          <div className=\"flex items-center gap-2\">\n            <label className=\"text-sm\">Projection %:</label>\n            <input\n              type=\"number\"\n              value={projectionPercent}\n              onChange={handleProjectionPercentChange}\n              className=\"w-16 px-2 py-1 border rounded\"\n              min=\"0.1\"\n              step=\"0.1\"\n            />\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <label className=\"text-sm\">Hours:</label>\n            <input\n              type=\"number\"\n              value={projectionHours}\n              onChange={handleProjectionHoursChange}\n              className=\"w-16 px-2 py-1 border rounded\"\n              min=\"1\"\n              step=\"1\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartAndControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}